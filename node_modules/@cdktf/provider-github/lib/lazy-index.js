"use strict";
/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
// generated by cdktf get
Object.defineProperty(exports, 'actionsEnvironmentSecret', { get: function () { return require('./actions-environment-secret'); } });
Object.defineProperty(exports, 'actionsEnvironmentVariable', { get: function () { return require('./actions-environment-variable'); } });
Object.defineProperty(exports, 'actionsOrganizationOidcSubjectClaimCustomizationTemplate', { get: function () { return require('./actions-organization-oidc-subject-claim-customization-template'); } });
Object.defineProperty(exports, 'actionsOrganizationPermissions', { get: function () { return require('./actions-organization-permissions'); } });
Object.defineProperty(exports, 'actionsOrganizationSecret', { get: function () { return require('./actions-organization-secret'); } });
Object.defineProperty(exports, 'actionsOrganizationSecretRepositories', { get: function () { return require('./actions-organization-secret-repositories'); } });
Object.defineProperty(exports, 'actionsOrganizationVariable', { get: function () { return require('./actions-organization-variable'); } });
Object.defineProperty(exports, 'actionsRepositoryAccessLevel', { get: function () { return require('./actions-repository-access-level'); } });
Object.defineProperty(exports, 'actionsRepositoryOidcSubjectClaimCustomizationTemplate', { get: function () { return require('./actions-repository-oidc-subject-claim-customization-template'); } });
Object.defineProperty(exports, 'actionsRepositoryPermissions', { get: function () { return require('./actions-repository-permissions'); } });
Object.defineProperty(exports, 'actionsRunnerGroup', { get: function () { return require('./actions-runner-group'); } });
Object.defineProperty(exports, 'actionsSecret', { get: function () { return require('./actions-secret'); } });
Object.defineProperty(exports, 'actionsVariable', { get: function () { return require('./actions-variable'); } });
Object.defineProperty(exports, 'appInstallationRepositories', { get: function () { return require('./app-installation-repositories'); } });
Object.defineProperty(exports, 'appInstallationRepository', { get: function () { return require('./app-installation-repository'); } });
Object.defineProperty(exports, 'branch', { get: function () { return require('./branch'); } });
Object.defineProperty(exports, 'branchDefault', { get: function () { return require('./branch-default'); } });
Object.defineProperty(exports, 'branchProtection', { get: function () { return require('./branch-protection'); } });
Object.defineProperty(exports, 'branchProtectionV3', { get: function () { return require('./branch-protection-v3'); } });
Object.defineProperty(exports, 'codespacesOrganizationSecret', { get: function () { return require('./codespaces-organization-secret'); } });
Object.defineProperty(exports, 'codespacesOrganizationSecretRepositories', { get: function () { return require('./codespaces-organization-secret-repositories'); } });
Object.defineProperty(exports, 'codespacesSecret', { get: function () { return require('./codespaces-secret'); } });
Object.defineProperty(exports, 'codespacesUserSecret', { get: function () { return require('./codespaces-user-secret'); } });
Object.defineProperty(exports, 'dependabotOrganizationSecret', { get: function () { return require('./dependabot-organization-secret'); } });
Object.defineProperty(exports, 'dependabotOrganizationSecretRepositories', { get: function () { return require('./dependabot-organization-secret-repositories'); } });
Object.defineProperty(exports, 'dependabotSecret', { get: function () { return require('./dependabot-secret'); } });
Object.defineProperty(exports, 'emuGroupMapping', { get: function () { return require('./emu-group-mapping'); } });
Object.defineProperty(exports, 'enterpriseOrganization', { get: function () { return require('./enterprise-organization'); } });
Object.defineProperty(exports, 'issue', { get: function () { return require('./issue'); } });
Object.defineProperty(exports, 'issueLabel', { get: function () { return require('./issue-label'); } });
Object.defineProperty(exports, 'membership', { get: function () { return require('./membership'); } });
Object.defineProperty(exports, 'organizationBlock', { get: function () { return require('./organization-block'); } });
Object.defineProperty(exports, 'organizationCustomRole', { get: function () { return require('./organization-custom-role'); } });
Object.defineProperty(exports, 'organizationProject', { get: function () { return require('./organization-project'); } });
Object.defineProperty(exports, 'organizationRuleset', { get: function () { return require('./organization-ruleset'); } });
Object.defineProperty(exports, 'organizationSecurityManager', { get: function () { return require('./organization-security-manager'); } });
Object.defineProperty(exports, 'organizationSettings', { get: function () { return require('./organization-settings'); } });
Object.defineProperty(exports, 'organizationWebhook', { get: function () { return require('./organization-webhook'); } });
Object.defineProperty(exports, 'projectCard', { get: function () { return require('./project-card'); } });
Object.defineProperty(exports, 'projectColumn', { get: function () { return require('./project-column'); } });
Object.defineProperty(exports, 'release', { get: function () { return require('./release'); } });
Object.defineProperty(exports, 'repository', { get: function () { return require('./repository'); } });
Object.defineProperty(exports, 'repositoryAutolinkReference', { get: function () { return require('./repository-autolink-reference'); } });
Object.defineProperty(exports, 'repositoryCollaborator', { get: function () { return require('./repository-collaborator'); } });
Object.defineProperty(exports, 'repositoryCollaborators', { get: function () { return require('./repository-collaborators'); } });
Object.defineProperty(exports, 'repositoryDependabotSecurityUpdates', { get: function () { return require('./repository-dependabot-security-updates'); } });
Object.defineProperty(exports, 'repositoryDeployKey', { get: function () { return require('./repository-deploy-key'); } });
Object.defineProperty(exports, 'repositoryDeploymentBranchPolicy', { get: function () { return require('./repository-deployment-branch-policy'); } });
Object.defineProperty(exports, 'repositoryEnvironment', { get: function () { return require('./repository-environment'); } });
Object.defineProperty(exports, 'repositoryEnvironmentDeploymentPolicy', { get: function () { return require('./repository-environment-deployment-policy'); } });
Object.defineProperty(exports, 'repositoryFile', { get: function () { return require('./repository-file'); } });
Object.defineProperty(exports, 'repositoryMilestone', { get: function () { return require('./repository-milestone'); } });
Object.defineProperty(exports, 'repositoryProject', { get: function () { return require('./repository-project'); } });
Object.defineProperty(exports, 'repositoryPullRequest', { get: function () { return require('./repository-pull-request'); } });
Object.defineProperty(exports, 'repositoryRuleset', { get: function () { return require('./repository-ruleset'); } });
Object.defineProperty(exports, 'repositoryTagProtection', { get: function () { return require('./repository-tag-protection'); } });
Object.defineProperty(exports, 'repositoryTopics', { get: function () { return require('./repository-topics'); } });
Object.defineProperty(exports, 'repositoryWebhook', { get: function () { return require('./repository-webhook'); } });
Object.defineProperty(exports, 'team', { get: function () { return require('./team'); } });
Object.defineProperty(exports, 'teamMembers', { get: function () { return require('./team-members'); } });
Object.defineProperty(exports, 'teamMembership', { get: function () { return require('./team-membership'); } });
Object.defineProperty(exports, 'teamRepository', { get: function () { return require('./team-repository'); } });
Object.defineProperty(exports, 'teamSettings', { get: function () { return require('./team-settings'); } });
Object.defineProperty(exports, 'teamSyncGroupMapping', { get: function () { return require('./team-sync-group-mapping'); } });
Object.defineProperty(exports, 'userGpgKey', { get: function () { return require('./user-gpg-key'); } });
Object.defineProperty(exports, 'userInvitationAccepter', { get: function () { return require('./user-invitation-accepter'); } });
Object.defineProperty(exports, 'userSshKey', { get: function () { return require('./user-ssh-key'); } });
Object.defineProperty(exports, 'dataGithubActionsEnvironmentSecrets', { get: function () { return require('./data-github-actions-environment-secrets'); } });
Object.defineProperty(exports, 'dataGithubActionsEnvironmentVariables', { get: function () { return require('./data-github-actions-environment-variables'); } });
Object.defineProperty(exports, 'dataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate', { get: function () { return require('./data-github-actions-organization-oidc-subject-claim-customization-template'); } });
Object.defineProperty(exports, 'dataGithubActionsOrganizationPublicKey', { get: function () { return require('./data-github-actions-organization-public-key'); } });
Object.defineProperty(exports, 'dataGithubActionsOrganizationRegistrationToken', { get: function () { return require('./data-github-actions-organization-registration-token'); } });
Object.defineProperty(exports, 'dataGithubActionsOrganizationSecrets', { get: function () { return require('./data-github-actions-organization-secrets'); } });
Object.defineProperty(exports, 'dataGithubActionsOrganizationVariables', { get: function () { return require('./data-github-actions-organization-variables'); } });
Object.defineProperty(exports, 'dataGithubActionsPublicKey', { get: function () { return require('./data-github-actions-public-key'); } });
Object.defineProperty(exports, 'dataGithubActionsRegistrationToken', { get: function () { return require('./data-github-actions-registration-token'); } });
Object.defineProperty(exports, 'dataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate', { get: function () { return require('./data-github-actions-repository-oidc-subject-claim-customization-template'); } });
Object.defineProperty(exports, 'dataGithubActionsSecrets', { get: function () { return require('./data-github-actions-secrets'); } });
Object.defineProperty(exports, 'dataGithubActionsVariables', { get: function () { return require('./data-github-actions-variables'); } });
Object.defineProperty(exports, 'dataGithubApp', { get: function () { return require('./data-github-app'); } });
Object.defineProperty(exports, 'dataGithubAppToken', { get: function () { return require('./data-github-app-token'); } });
Object.defineProperty(exports, 'dataGithubBranch', { get: function () { return require('./data-github-branch'); } });
Object.defineProperty(exports, 'dataGithubBranchProtectionRules', { get: function () { return require('./data-github-branch-protection-rules'); } });
Object.defineProperty(exports, 'dataGithubCodespacesOrganizationPublicKey', { get: function () { return require('./data-github-codespaces-organization-public-key'); } });
Object.defineProperty(exports, 'dataGithubCodespacesOrganizationSecrets', { get: function () { return require('./data-github-codespaces-organization-secrets'); } });
Object.defineProperty(exports, 'dataGithubCodespacesPublicKey', { get: function () { return require('./data-github-codespaces-public-key'); } });
Object.defineProperty(exports, 'dataGithubCodespacesSecrets', { get: function () { return require('./data-github-codespaces-secrets'); } });
Object.defineProperty(exports, 'dataGithubCodespacesUserPublicKey', { get: function () { return require('./data-github-codespaces-user-public-key'); } });
Object.defineProperty(exports, 'dataGithubCodespacesUserSecrets', { get: function () { return require('./data-github-codespaces-user-secrets'); } });
Object.defineProperty(exports, 'dataGithubCollaborators', { get: function () { return require('./data-github-collaborators'); } });
Object.defineProperty(exports, 'dataGithubDependabotOrganizationPublicKey', { get: function () { return require('./data-github-dependabot-organization-public-key'); } });
Object.defineProperty(exports, 'dataGithubDependabotOrganizationSecrets', { get: function () { return require('./data-github-dependabot-organization-secrets'); } });
Object.defineProperty(exports, 'dataGithubDependabotPublicKey', { get: function () { return require('./data-github-dependabot-public-key'); } });
Object.defineProperty(exports, 'dataGithubDependabotSecrets', { get: function () { return require('./data-github-dependabot-secrets'); } });
Object.defineProperty(exports, 'dataGithubEnterprise', { get: function () { return require('./data-github-enterprise'); } });
Object.defineProperty(exports, 'dataGithubExternalGroups', { get: function () { return require('./data-github-external-groups'); } });
Object.defineProperty(exports, 'dataGithubIpRanges', { get: function () { return require('./data-github-ip-ranges'); } });
Object.defineProperty(exports, 'dataGithubIssueLabels', { get: function () { return require('./data-github-issue-labels'); } });
Object.defineProperty(exports, 'dataGithubMembership', { get: function () { return require('./data-github-membership'); } });
Object.defineProperty(exports, 'dataGithubOrganization', { get: function () { return require('./data-github-organization'); } });
Object.defineProperty(exports, 'dataGithubOrganizationCustomRole', { get: function () { return require('./data-github-organization-custom-role'); } });
Object.defineProperty(exports, 'dataGithubOrganizationExternalIdentities', { get: function () { return require('./data-github-organization-external-identities'); } });
Object.defineProperty(exports, 'dataGithubOrganizationIpAllowList', { get: function () { return require('./data-github-organization-ip-allow-list'); } });
Object.defineProperty(exports, 'dataGithubOrganizationTeamSyncGroups', { get: function () { return require('./data-github-organization-team-sync-groups'); } });
Object.defineProperty(exports, 'dataGithubOrganizationTeams', { get: function () { return require('./data-github-organization-teams'); } });
Object.defineProperty(exports, 'dataGithubOrganizationWebhooks', { get: function () { return require('./data-github-organization-webhooks'); } });
Object.defineProperty(exports, 'dataGithubRef', { get: function () { return require('./data-github-ref'); } });
Object.defineProperty(exports, 'dataGithubRelease', { get: function () { return require('./data-github-release'); } });
Object.defineProperty(exports, 'dataGithubRepositories', { get: function () { return require('./data-github-repositories'); } });
Object.defineProperty(exports, 'dataGithubRepository', { get: function () { return require('./data-github-repository'); } });
Object.defineProperty(exports, 'dataGithubRepositoryAutolinkReferences', { get: function () { return require('./data-github-repository-autolink-references'); } });
Object.defineProperty(exports, 'dataGithubRepositoryBranches', { get: function () { return require('./data-github-repository-branches'); } });
Object.defineProperty(exports, 'dataGithubRepositoryDeployKeys', { get: function () { return require('./data-github-repository-deploy-keys'); } });
Object.defineProperty(exports, 'dataGithubRepositoryDeploymentBranchPolicies', { get: function () { return require('./data-github-repository-deployment-branch-policies'); } });
Object.defineProperty(exports, 'dataGithubRepositoryEnvironments', { get: function () { return require('./data-github-repository-environments'); } });
Object.defineProperty(exports, 'dataGithubRepositoryFile', { get: function () { return require('./data-github-repository-file'); } });
Object.defineProperty(exports, 'dataGithubRepositoryMilestone', { get: function () { return require('./data-github-repository-milestone'); } });
Object.defineProperty(exports, 'dataGithubRepositoryPullRequest', { get: function () { return require('./data-github-repository-pull-request'); } });
Object.defineProperty(exports, 'dataGithubRepositoryPullRequests', { get: function () { return require('./data-github-repository-pull-requests'); } });
Object.defineProperty(exports, 'dataGithubRepositoryTeams', { get: function () { return require('./data-github-repository-teams'); } });
Object.defineProperty(exports, 'dataGithubRepositoryWebhooks', { get: function () { return require('./data-github-repository-webhooks'); } });
Object.defineProperty(exports, 'dataGithubRestApi', { get: function () { return require('./data-github-rest-api'); } });
Object.defineProperty(exports, 'dataGithubSshKeys', { get: function () { return require('./data-github-ssh-keys'); } });
Object.defineProperty(exports, 'dataGithubTeam', { get: function () { return require('./data-github-team'); } });
Object.defineProperty(exports, 'dataGithubTree', { get: function () { return require('./data-github-tree'); } });
Object.defineProperty(exports, 'dataGithubUser', { get: function () { return require('./data-github-user'); } });
Object.defineProperty(exports, 'dataGithubUserExternalIdentity', { get: function () { return require('./data-github-user-external-identity'); } });
Object.defineProperty(exports, 'dataGithubUsers', { get: function () { return require('./data-github-users'); } });
Object.defineProperty(exports, 'provider', { get: function () { return require('./provider'); } });
//# sourceMappingURL=data:application/json;base64,