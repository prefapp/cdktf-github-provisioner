{
  "author": {
    "name": "HashiCorp",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://hashicorp.com"
  },
  "dependencies": {
    "cdktf": "^0.19.0",
    "constructs": "^10.0.0"
  },
  "dependencyClosure": {
    "cdktf": {
      "submodules": {
        "cdktf.testingMatchers": {}
      },
      "targets": {
        "dotnet": {
          "namespace": "HashiCorp.Cdktf",
          "packageId": "HashiCorp.Cdktf"
        },
        "go": {
          "moduleName": "github.com/hashicorp/terraform-cdk-go",
          "packageName": "cdktf"
        },
        "java": {
          "maven": {
            "artifactId": "cdktf",
            "groupId": "com.hashicorp"
          },
          "package": "com.hashicorp.cdktf"
        },
        "js": {
          "npm": "cdktf"
        },
        "python": {
          "distName": "cdktf",
          "module": "cdktf"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "Prebuilt github Provider for Terraform CDK (cdktf)",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/cdktf/cdktf-provider-github.git",
  "jsiiVersion": "5.2.14 (build 3ac02dc)",
  "keywords": [
    "cdk",
    "cdktf",
    "github",
    "provider",
    "terraform"
  ],
  "license": "MPL-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    },
    "tscRootDir": "src"
  },
  "name": "@cdktf/provider-github",
  "readme": {
    "markdown": "\n# Terraform CDK github Provider ~> 5.0\n\nThis repo builds and publishes the Terraform github Provider bindings for [CDK for Terraform](https://cdk.tf).\n\n## Available Packages\n\n### NPM\n\nThe npm package is available at [https://www.npmjs.com/package/@cdktf/provider-github](https://www.npmjs.com/package/@cdktf/provider-github).\n\n`npm install @cdktf/provider-github`\n\n### PyPI\n\nThe PyPI package is available at [https://pypi.org/project/cdktf-cdktf-provider-github](https://pypi.org/project/cdktf-cdktf-provider-github).\n\n`pipenv install cdktf-cdktf-provider-github`\n\n### Nuget\n\nThe Nuget package is available at [https://www.nuget.org/packages/HashiCorp.Cdktf.Providers.Github](https://www.nuget.org/packages/HashiCorp.Cdktf.Providers.Github).\n\n`dotnet add package HashiCorp.Cdktf.Providers.Github`\n\n### Maven\n\nThe Maven package is available at [https://mvnrepository.com/artifact/com.hashicorp/cdktf-provider-github](https://mvnrepository.com/artifact/com.hashicorp/cdktf-provider-github).\n\n```\n<dependency>\n    <groupId>com.hashicorp</groupId>\n    <artifactId>cdktf-provider-github</artifactId>\n    <version>[REPLACE WITH DESIRED VERSION]</version>\n</dependency>\n```\n\n\n### Go\n\nThe go package is generated into the [`github.com/cdktf/cdktf-provider-github-go`](https://github.com/cdktf/cdktf-provider-github-go) package.\n\n`go get github.com/cdktf/cdktf-provider-github-go/github`\n\n## Docs\n\nFind auto-generated docs for this provider here:\n\n- [Typescript](./docs/API.typescript.md)\n- [Python](./docs/API.python.md)\n- [Java](./docs/API.java.md)\n- [C#](./docs/API.csharp.md)\n- [Go](./docs/API.go.md)\n\nYou can also visit a hosted version of the documentation on [constructs.dev](https://constructs.dev/packages/@cdktf/provider-github).\n\n## Versioning\n\nThis project is explicitly not tracking the Terraform github Provider version 1:1. In fact, it always tracks `latest` of `~> 5.0` with every release. If there are scenarios where you explicitly have to pin your provider version, you can do so by generating the [provider constructs manually](https://cdk.tf/imports).\n\nThese are the upstream dependencies:\n\n- [Terraform CDK](https://cdk.tf)\n- [Terraform github Provider](https://registry.terraform.io/providers/integrations/github/5.0.0)\n    - This links to the minimum version being tracked, you can find the latest released version [in our releases](https://github.com/cdktf/cdktf-provider-github/releases)\n- [Terraform Engine](https://terraform.io)\n\nIf there are breaking changes (backward incompatible) in any of the above, the major version of this project will be bumped.\n\n## Features / Issues / Bugs\n\nPlease report bugs and issues to the [terraform cdk](https://cdk.tf) project:\n\n- [Create bug report](https://cdk.tf/bug)\n- [Create feature request](https://cdk.tf/feature)\n\n## Contributing\n\n### projen\n\nThis is mostly based on [projen](https://github.com/eladb/projen), which takes care of generating the entire repository.\n\n### cdktf-provider-project based on projen\n\nThere's a custom [project builder](https://github.com/hashicorp/cdktf-provider-project) which encapsulate the common settings for all `cdktf` providers.\n\n### Provider Version\n\nThe provider version can be adjusted in [./.projenrc.js](./.projenrc.js).\n\n### Repository Management\n\nThe repository is managed by [Repository Manager](https://github.com/hashicorp/cdktf-repository-manager/)\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/cdktf/cdktf-provider-github.git"
  },
  "schema": "jsii/0.10.0",
  "submodules": {
    "@cdktf/provider-github.actionsEnvironmentSecret": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 7
      },
      "readme": {
        "markdown": "# `github_actions_environment_secret`\n\nRefer to the Terraform Registory for docs: [`github_actions_environment_secret`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_secret).\n"
      },
      "symbolId": "src/actions-environment-secret/index:"
    },
    "@cdktf/provider-github.actionsEnvironmentVariable": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 8
      },
      "readme": {
        "markdown": "# `github_actions_environment_variable`\n\nRefer to the Terraform Registory for docs: [`github_actions_environment_variable`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_variable).\n"
      },
      "symbolId": "src/actions-environment-variable/index:"
    },
    "@cdktf/provider-github.actionsOrganizationOidcSubjectClaimCustomizationTemplate": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 9
      },
      "readme": {
        "markdown": "# `github_actions_organization_oidc_subject_claim_customization_template`\n\nRefer to the Terraform Registory for docs: [`github_actions_organization_oidc_subject_claim_customization_template`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_oidc_subject_claim_customization_template).\n"
      },
      "symbolId": "src/actions-organization-oidc-subject-claim-customization-template/index:"
    },
    "@cdktf/provider-github.actionsOrganizationPermissions": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 10
      },
      "readme": {
        "markdown": "# `github_actions_organization_permissions`\n\nRefer to the Terraform Registory for docs: [`github_actions_organization_permissions`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_permissions).\n"
      },
      "symbolId": "src/actions-organization-permissions/index:"
    },
    "@cdktf/provider-github.actionsOrganizationSecret": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 11
      },
      "readme": {
        "markdown": "# `github_actions_organization_secret`\n\nRefer to the Terraform Registory for docs: [`github_actions_organization_secret`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret).\n"
      },
      "symbolId": "src/actions-organization-secret/index:"
    },
    "@cdktf/provider-github.actionsOrganizationSecretRepositories": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 12
      },
      "readme": {
        "markdown": "# `github_actions_organization_secret_repositories`\n\nRefer to the Terraform Registory for docs: [`github_actions_organization_secret_repositories`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret_repositories).\n"
      },
      "symbolId": "src/actions-organization-secret-repositories/index:"
    },
    "@cdktf/provider-github.actionsOrganizationVariable": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 13
      },
      "readme": {
        "markdown": "# `github_actions_organization_variable`\n\nRefer to the Terraform Registory for docs: [`github_actions_organization_variable`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_variable).\n"
      },
      "symbolId": "src/actions-organization-variable/index:"
    },
    "@cdktf/provider-github.actionsRepositoryAccessLevel": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 14
      },
      "readme": {
        "markdown": "# `github_actions_repository_access_level`\n\nRefer to the Terraform Registory for docs: [`github_actions_repository_access_level`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_access_level).\n"
      },
      "symbolId": "src/actions-repository-access-level/index:"
    },
    "@cdktf/provider-github.actionsRepositoryOidcSubjectClaimCustomizationTemplate": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 15
      },
      "readme": {
        "markdown": "# `github_actions_repository_oidc_subject_claim_customization_template`\n\nRefer to the Terraform Registory for docs: [`github_actions_repository_oidc_subject_claim_customization_template`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_oidc_subject_claim_customization_template).\n"
      },
      "symbolId": "src/actions-repository-oidc-subject-claim-customization-template/index:"
    },
    "@cdktf/provider-github.actionsRepositoryPermissions": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 16
      },
      "readme": {
        "markdown": "# `github_actions_repository_permissions`\n\nRefer to the Terraform Registory for docs: [`github_actions_repository_permissions`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_permissions).\n"
      },
      "symbolId": "src/actions-repository-permissions/index:"
    },
    "@cdktf/provider-github.actionsRunnerGroup": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 17
      },
      "readme": {
        "markdown": "# `github_actions_runner_group`\n\nRefer to the Terraform Registory for docs: [`github_actions_runner_group`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_runner_group).\n"
      },
      "symbolId": "src/actions-runner-group/index:"
    },
    "@cdktf/provider-github.actionsSecret": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 18
      },
      "readme": {
        "markdown": "# `github_actions_secret`\n\nRefer to the Terraform Registory for docs: [`github_actions_secret`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_secret).\n"
      },
      "symbolId": "src/actions-secret/index:"
    },
    "@cdktf/provider-github.actionsVariable": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 19
      },
      "readme": {
        "markdown": "# `github_actions_variable`\n\nRefer to the Terraform Registory for docs: [`github_actions_variable`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_variable).\n"
      },
      "symbolId": "src/actions-variable/index:"
    },
    "@cdktf/provider-github.appInstallationRepositories": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 20
      },
      "readme": {
        "markdown": "# `github_app_installation_repositories`\n\nRefer to the Terraform Registory for docs: [`github_app_installation_repositories`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repositories).\n"
      },
      "symbolId": "src/app-installation-repositories/index:"
    },
    "@cdktf/provider-github.appInstallationRepository": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 21
      },
      "readme": {
        "markdown": "# `github_app_installation_repository`\n\nRefer to the Terraform Registory for docs: [`github_app_installation_repository`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repository).\n"
      },
      "symbolId": "src/app-installation-repository/index:"
    },
    "@cdktf/provider-github.branch": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 22
      },
      "readme": {
        "markdown": "# `github_branch`\n\nRefer to the Terraform Registory for docs: [`github_branch`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch).\n"
      },
      "symbolId": "src/branch/index:"
    },
    "@cdktf/provider-github.branchDefault": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 23
      },
      "readme": {
        "markdown": "# `github_branch_default`\n\nRefer to the Terraform Registory for docs: [`github_branch_default`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_default).\n"
      },
      "symbolId": "src/branch-default/index:"
    },
    "@cdktf/provider-github.branchProtection": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 24
      },
      "readme": {
        "markdown": "# `github_branch_protection`\n\nRefer to the Terraform Registory for docs: [`github_branch_protection`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection).\n"
      },
      "symbolId": "src/branch-protection/index:"
    },
    "@cdktf/provider-github.branchProtectionV3": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 25
      },
      "readme": {
        "markdown": "# `github_branch_protection_v3`\n\nRefer to the Terraform Registory for docs: [`github_branch_protection_v3`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3).\n"
      },
      "symbolId": "src/branch-protection-v3/index:"
    },
    "@cdktf/provider-github.codespacesOrganizationSecret": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 26
      },
      "readme": {
        "markdown": "# `github_codespaces_organization_secret`\n\nRefer to the Terraform Registory for docs: [`github_codespaces_organization_secret`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret).\n"
      },
      "symbolId": "src/codespaces-organization-secret/index:"
    },
    "@cdktf/provider-github.codespacesOrganizationSecretRepositories": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 27
      },
      "readme": {
        "markdown": "# `github_codespaces_organization_secret_repositories`\n\nRefer to the Terraform Registory for docs: [`github_codespaces_organization_secret_repositories`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret_repositories).\n"
      },
      "symbolId": "src/codespaces-organization-secret-repositories/index:"
    },
    "@cdktf/provider-github.codespacesSecret": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 28
      },
      "readme": {
        "markdown": "# `github_codespaces_secret`\n\nRefer to the Terraform Registory for docs: [`github_codespaces_secret`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_secret).\n"
      },
      "symbolId": "src/codespaces-secret/index:"
    },
    "@cdktf/provider-github.codespacesUserSecret": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 29
      },
      "readme": {
        "markdown": "# `github_codespaces_user_secret`\n\nRefer to the Terraform Registory for docs: [`github_codespaces_user_secret`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_user_secret).\n"
      },
      "symbolId": "src/codespaces-user-secret/index:"
    },
    "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 74
      },
      "readme": {
        "markdown": "# `data_github_actions_environment_secrets`\n\nRefer to the Terraform Registory for docs: [`data_github_actions_environment_secrets`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_secrets).\n"
      },
      "symbolId": "src/data-github-actions-environment-secrets/index:"
    },
    "@cdktf/provider-github.dataGithubActionsEnvironmentVariables": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 75
      },
      "readme": {
        "markdown": "# `data_github_actions_environment_variables`\n\nRefer to the Terraform Registory for docs: [`data_github_actions_environment_variables`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_variables).\n"
      },
      "symbolId": "src/data-github-actions-environment-variables/index:"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 76
      },
      "readme": {
        "markdown": "# `data_github_actions_organization_oidc_subject_claim_customization_template`\n\nRefer to the Terraform Registory for docs: [`data_github_actions_organization_oidc_subject_claim_customization_template`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_oidc_subject_claim_customization_template).\n"
      },
      "symbolId": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index:"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationPublicKey": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 77
      },
      "readme": {
        "markdown": "# `data_github_actions_organization_public_key`\n\nRefer to the Terraform Registory for docs: [`data_github_actions_organization_public_key`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_public_key).\n"
      },
      "symbolId": "src/data-github-actions-organization-public-key/index:"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationRegistrationToken": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 78
      },
      "readme": {
        "markdown": "# `data_github_actions_organization_registration_token`\n\nRefer to the Terraform Registory for docs: [`data_github_actions_organization_registration_token`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_registration_token).\n"
      },
      "symbolId": "src/data-github-actions-organization-registration-token/index:"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationSecrets": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 79
      },
      "readme": {
        "markdown": "# `data_github_actions_organization_secrets`\n\nRefer to the Terraform Registory for docs: [`data_github_actions_organization_secrets`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_secrets).\n"
      },
      "symbolId": "src/data-github-actions-organization-secrets/index:"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationVariables": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 80
      },
      "readme": {
        "markdown": "# `data_github_actions_organization_variables`\n\nRefer to the Terraform Registory for docs: [`data_github_actions_organization_variables`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_variables).\n"
      },
      "symbolId": "src/data-github-actions-organization-variables/index:"
    },
    "@cdktf/provider-github.dataGithubActionsPublicKey": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 81
      },
      "readme": {
        "markdown": "# `data_github_actions_public_key`\n\nRefer to the Terraform Registory for docs: [`data_github_actions_public_key`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_public_key).\n"
      },
      "symbolId": "src/data-github-actions-public-key/index:"
    },
    "@cdktf/provider-github.dataGithubActionsRegistrationToken": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 82
      },
      "readme": {
        "markdown": "# `data_github_actions_registration_token`\n\nRefer to the Terraform Registory for docs: [`data_github_actions_registration_token`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_registration_token).\n"
      },
      "symbolId": "src/data-github-actions-registration-token/index:"
    },
    "@cdktf/provider-github.dataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 83
      },
      "readme": {
        "markdown": "# `data_github_actions_repository_oidc_subject_claim_customization_template`\n\nRefer to the Terraform Registory for docs: [`data_github_actions_repository_oidc_subject_claim_customization_template`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_repository_oidc_subject_claim_customization_template).\n"
      },
      "symbolId": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index:"
    },
    "@cdktf/provider-github.dataGithubActionsSecrets": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 84
      },
      "readme": {
        "markdown": "# `data_github_actions_secrets`\n\nRefer to the Terraform Registory for docs: [`data_github_actions_secrets`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_secrets).\n"
      },
      "symbolId": "src/data-github-actions-secrets/index:"
    },
    "@cdktf/provider-github.dataGithubActionsVariables": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 85
      },
      "readme": {
        "markdown": "# `data_github_actions_variables`\n\nRefer to the Terraform Registory for docs: [`data_github_actions_variables`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_variables).\n"
      },
      "symbolId": "src/data-github-actions-variables/index:"
    },
    "@cdktf/provider-github.dataGithubApp": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 86
      },
      "readme": {
        "markdown": "# `data_github_app`\n\nRefer to the Terraform Registory for docs: [`data_github_app`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app).\n"
      },
      "symbolId": "src/data-github-app/index:"
    },
    "@cdktf/provider-github.dataGithubAppToken": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 87
      },
      "readme": {
        "markdown": "# `data_github_app_token`\n\nRefer to the Terraform Registory for docs: [`data_github_app_token`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app_token).\n"
      },
      "symbolId": "src/data-github-app-token/index:"
    },
    "@cdktf/provider-github.dataGithubBranch": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 88
      },
      "readme": {
        "markdown": "# `data_github_branch`\n\nRefer to the Terraform Registory for docs: [`data_github_branch`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/branch).\n"
      },
      "symbolId": "src/data-github-branch/index:"
    },
    "@cdktf/provider-github.dataGithubBranchProtectionRules": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 89
      },
      "readme": {
        "markdown": "# `data_github_branch_protection_rules`\n\nRefer to the Terraform Registory for docs: [`data_github_branch_protection_rules`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/branch_protection_rules).\n"
      },
      "symbolId": "src/data-github-branch-protection-rules/index:"
    },
    "@cdktf/provider-github.dataGithubCodespacesOrganizationPublicKey": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 90
      },
      "readme": {
        "markdown": "# `data_github_codespaces_organization_public_key`\n\nRefer to the Terraform Registory for docs: [`data_github_codespaces_organization_public_key`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_organization_public_key).\n"
      },
      "symbolId": "src/data-github-codespaces-organization-public-key/index:"
    },
    "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 91
      },
      "readme": {
        "markdown": "# `data_github_codespaces_organization_secrets`\n\nRefer to the Terraform Registory for docs: [`data_github_codespaces_organization_secrets`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_organization_secrets).\n"
      },
      "symbolId": "src/data-github-codespaces-organization-secrets/index:"
    },
    "@cdktf/provider-github.dataGithubCodespacesPublicKey": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 92
      },
      "readme": {
        "markdown": "# `data_github_codespaces_public_key`\n\nRefer to the Terraform Registory for docs: [`data_github_codespaces_public_key`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_public_key).\n"
      },
      "symbolId": "src/data-github-codespaces-public-key/index:"
    },
    "@cdktf/provider-github.dataGithubCodespacesSecrets": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 93
      },
      "readme": {
        "markdown": "# `data_github_codespaces_secrets`\n\nRefer to the Terraform Registory for docs: [`data_github_codespaces_secrets`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_secrets).\n"
      },
      "symbolId": "src/data-github-codespaces-secrets/index:"
    },
    "@cdktf/provider-github.dataGithubCodespacesUserPublicKey": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 94
      },
      "readme": {
        "markdown": "# `data_github_codespaces_user_public_key`\n\nRefer to the Terraform Registory for docs: [`data_github_codespaces_user_public_key`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_user_public_key).\n"
      },
      "symbolId": "src/data-github-codespaces-user-public-key/index:"
    },
    "@cdktf/provider-github.dataGithubCodespacesUserSecrets": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 95
      },
      "readme": {
        "markdown": "# `data_github_codespaces_user_secrets`\n\nRefer to the Terraform Registory for docs: [`data_github_codespaces_user_secrets`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_user_secrets).\n"
      },
      "symbolId": "src/data-github-codespaces-user-secrets/index:"
    },
    "@cdktf/provider-github.dataGithubCollaborators": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 96
      },
      "readme": {
        "markdown": "# `data_github_collaborators`\n\nRefer to the Terraform Registory for docs: [`data_github_collaborators`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/collaborators).\n"
      },
      "symbolId": "src/data-github-collaborators/index:"
    },
    "@cdktf/provider-github.dataGithubDependabotOrganizationPublicKey": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 97
      },
      "readme": {
        "markdown": "# `data_github_dependabot_organization_public_key`\n\nRefer to the Terraform Registory for docs: [`data_github_dependabot_organization_public_key`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_organization_public_key).\n"
      },
      "symbolId": "src/data-github-dependabot-organization-public-key/index:"
    },
    "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 98
      },
      "readme": {
        "markdown": "# `data_github_dependabot_organization_secrets`\n\nRefer to the Terraform Registory for docs: [`data_github_dependabot_organization_secrets`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_organization_secrets).\n"
      },
      "symbolId": "src/data-github-dependabot-organization-secrets/index:"
    },
    "@cdktf/provider-github.dataGithubDependabotPublicKey": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 99
      },
      "readme": {
        "markdown": "# `data_github_dependabot_public_key`\n\nRefer to the Terraform Registory for docs: [`data_github_dependabot_public_key`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_public_key).\n"
      },
      "symbolId": "src/data-github-dependabot-public-key/index:"
    },
    "@cdktf/provider-github.dataGithubDependabotSecrets": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 100
      },
      "readme": {
        "markdown": "# `data_github_dependabot_secrets`\n\nRefer to the Terraform Registory for docs: [`data_github_dependabot_secrets`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_secrets).\n"
      },
      "symbolId": "src/data-github-dependabot-secrets/index:"
    },
    "@cdktf/provider-github.dataGithubEnterprise": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 101
      },
      "readme": {
        "markdown": "# `data_github_enterprise`\n\nRefer to the Terraform Registory for docs: [`data_github_enterprise`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/enterprise).\n"
      },
      "symbolId": "src/data-github-enterprise/index:"
    },
    "@cdktf/provider-github.dataGithubExternalGroups": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 102
      },
      "readme": {
        "markdown": "# `data_github_external_groups`\n\nRefer to the Terraform Registory for docs: [`data_github_external_groups`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/external_groups).\n"
      },
      "symbolId": "src/data-github-external-groups/index:"
    },
    "@cdktf/provider-github.dataGithubIpRanges": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 103
      },
      "readme": {
        "markdown": "# `data_github_ip_ranges`\n\nRefer to the Terraform Registory for docs: [`data_github_ip_ranges`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ip_ranges).\n"
      },
      "symbolId": "src/data-github-ip-ranges/index:"
    },
    "@cdktf/provider-github.dataGithubIssueLabels": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 104
      },
      "readme": {
        "markdown": "# `data_github_issue_labels`\n\nRefer to the Terraform Registory for docs: [`data_github_issue_labels`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/issue_labels).\n"
      },
      "symbolId": "src/data-github-issue-labels/index:"
    },
    "@cdktf/provider-github.dataGithubMembership": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 105
      },
      "readme": {
        "markdown": "# `data_github_membership`\n\nRefer to the Terraform Registory for docs: [`data_github_membership`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/membership).\n"
      },
      "symbolId": "src/data-github-membership/index:"
    },
    "@cdktf/provider-github.dataGithubOrganization": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 106
      },
      "readme": {
        "markdown": "# `data_github_organization`\n\nRefer to the Terraform Registory for docs: [`data_github_organization`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization).\n"
      },
      "symbolId": "src/data-github-organization/index:"
    },
    "@cdktf/provider-github.dataGithubOrganizationCustomRole": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 107
      },
      "readme": {
        "markdown": "# `data_github_organization_custom_role`\n\nRefer to the Terraform Registory for docs: [`data_github_organization_custom_role`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_custom_role).\n"
      },
      "symbolId": "src/data-github-organization-custom-role/index:"
    },
    "@cdktf/provider-github.dataGithubOrganizationExternalIdentities": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 108
      },
      "readme": {
        "markdown": "# `data_github_organization_external_identities`\n\nRefer to the Terraform Registory for docs: [`data_github_organization_external_identities`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_external_identities).\n"
      },
      "symbolId": "src/data-github-organization-external-identities/index:"
    },
    "@cdktf/provider-github.dataGithubOrganizationIpAllowList": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 109
      },
      "readme": {
        "markdown": "# `data_github_organization_ip_allow_list`\n\nRefer to the Terraform Registory for docs: [`data_github_organization_ip_allow_list`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_ip_allow_list).\n"
      },
      "symbolId": "src/data-github-organization-ip-allow-list/index:"
    },
    "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 110
      },
      "readme": {
        "markdown": "# `data_github_organization_team_sync_groups`\n\nRefer to the Terraform Registory for docs: [`data_github_organization_team_sync_groups`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_team_sync_groups).\n"
      },
      "symbolId": "src/data-github-organization-team-sync-groups/index:"
    },
    "@cdktf/provider-github.dataGithubOrganizationTeams": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 111
      },
      "readme": {
        "markdown": "# `data_github_organization_teams`\n\nRefer to the Terraform Registory for docs: [`data_github_organization_teams`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_teams).\n"
      },
      "symbolId": "src/data-github-organization-teams/index:"
    },
    "@cdktf/provider-github.dataGithubOrganizationWebhooks": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 112
      },
      "readme": {
        "markdown": "# `data_github_organization_webhooks`\n\nRefer to the Terraform Registory for docs: [`data_github_organization_webhooks`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_webhooks).\n"
      },
      "symbolId": "src/data-github-organization-webhooks/index:"
    },
    "@cdktf/provider-github.dataGithubRef": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 113
      },
      "readme": {
        "markdown": "# `data_github_ref`\n\nRefer to the Terraform Registory for docs: [`data_github_ref`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ref).\n"
      },
      "symbolId": "src/data-github-ref/index:"
    },
    "@cdktf/provider-github.dataGithubRelease": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 114
      },
      "readme": {
        "markdown": "# `data_github_release`\n\nRefer to the Terraform Registory for docs: [`data_github_release`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/release).\n"
      },
      "symbolId": "src/data-github-release/index:"
    },
    "@cdktf/provider-github.dataGithubRepositories": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 115
      },
      "readme": {
        "markdown": "# `data_github_repositories`\n\nRefer to the Terraform Registory for docs: [`data_github_repositories`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repositories).\n"
      },
      "symbolId": "src/data-github-repositories/index:"
    },
    "@cdktf/provider-github.dataGithubRepository": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 116
      },
      "readme": {
        "markdown": "# `data_github_repository`\n\nRefer to the Terraform Registory for docs: [`data_github_repository`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository).\n"
      },
      "symbolId": "src/data-github-repository/index:"
    },
    "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 117
      },
      "readme": {
        "markdown": "# `data_github_repository_autolink_references`\n\nRefer to the Terraform Registory for docs: [`data_github_repository_autolink_references`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_autolink_references).\n"
      },
      "symbolId": "src/data-github-repository-autolink-references/index:"
    },
    "@cdktf/provider-github.dataGithubRepositoryBranches": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 118
      },
      "readme": {
        "markdown": "# `data_github_repository_branches`\n\nRefer to the Terraform Registory for docs: [`data_github_repository_branches`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_branches).\n"
      },
      "symbolId": "src/data-github-repository-branches/index:"
    },
    "@cdktf/provider-github.dataGithubRepositoryDeployKeys": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 119
      },
      "readme": {
        "markdown": "# `data_github_repository_deploy_keys`\n\nRefer to the Terraform Registory for docs: [`data_github_repository_deploy_keys`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_deploy_keys).\n"
      },
      "symbolId": "src/data-github-repository-deploy-keys/index:"
    },
    "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 120
      },
      "readme": {
        "markdown": "# `data_github_repository_deployment_branch_policies`\n\nRefer to the Terraform Registory for docs: [`data_github_repository_deployment_branch_policies`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_deployment_branch_policies).\n"
      },
      "symbolId": "src/data-github-repository-deployment-branch-policies/index:"
    },
    "@cdktf/provider-github.dataGithubRepositoryEnvironments": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 121
      },
      "readme": {
        "markdown": "# `data_github_repository_environments`\n\nRefer to the Terraform Registory for docs: [`data_github_repository_environments`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_environments).\n"
      },
      "symbolId": "src/data-github-repository-environments/index:"
    },
    "@cdktf/provider-github.dataGithubRepositoryFile": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 122
      },
      "readme": {
        "markdown": "# `data_github_repository_file`\n\nRefer to the Terraform Registory for docs: [`data_github_repository_file`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_file).\n"
      },
      "symbolId": "src/data-github-repository-file/index:"
    },
    "@cdktf/provider-github.dataGithubRepositoryMilestone": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 123
      },
      "readme": {
        "markdown": "# `data_github_repository_milestone`\n\nRefer to the Terraform Registory for docs: [`data_github_repository_milestone`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_milestone).\n"
      },
      "symbolId": "src/data-github-repository-milestone/index:"
    },
    "@cdktf/provider-github.dataGithubRepositoryPullRequest": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 124
      },
      "readme": {
        "markdown": "# `data_github_repository_pull_request`\n\nRefer to the Terraform Registory for docs: [`data_github_repository_pull_request`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_request).\n"
      },
      "symbolId": "src/data-github-repository-pull-request/index:"
    },
    "@cdktf/provider-github.dataGithubRepositoryPullRequests": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 125
      },
      "readme": {
        "markdown": "# `data_github_repository_pull_requests`\n\nRefer to the Terraform Registory for docs: [`data_github_repository_pull_requests`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_requests).\n"
      },
      "symbolId": "src/data-github-repository-pull-requests/index:"
    },
    "@cdktf/provider-github.dataGithubRepositoryTeams": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 126
      },
      "readme": {
        "markdown": "# `data_github_repository_teams`\n\nRefer to the Terraform Registory for docs: [`data_github_repository_teams`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_teams).\n"
      },
      "symbolId": "src/data-github-repository-teams/index:"
    },
    "@cdktf/provider-github.dataGithubRepositoryWebhooks": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 127
      },
      "readme": {
        "markdown": "# `data_github_repository_webhooks`\n\nRefer to the Terraform Registory for docs: [`data_github_repository_webhooks`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_webhooks).\n"
      },
      "symbolId": "src/data-github-repository-webhooks/index:"
    },
    "@cdktf/provider-github.dataGithubRestApi": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 128
      },
      "readme": {
        "markdown": "# `data_github_rest_api`\n\nRefer to the Terraform Registory for docs: [`data_github_rest_api`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/rest_api).\n"
      },
      "symbolId": "src/data-github-rest-api/index:"
    },
    "@cdktf/provider-github.dataGithubSshKeys": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 129
      },
      "readme": {
        "markdown": "# `data_github_ssh_keys`\n\nRefer to the Terraform Registory for docs: [`data_github_ssh_keys`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ssh_keys).\n"
      },
      "symbolId": "src/data-github-ssh-keys/index:"
    },
    "@cdktf/provider-github.dataGithubTeam": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 130
      },
      "readme": {
        "markdown": "# `data_github_team`\n\nRefer to the Terraform Registory for docs: [`data_github_team`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/team).\n"
      },
      "symbolId": "src/data-github-team/index:"
    },
    "@cdktf/provider-github.dataGithubTree": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 131
      },
      "readme": {
        "markdown": "# `data_github_tree`\n\nRefer to the Terraform Registory for docs: [`data_github_tree`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/tree).\n"
      },
      "symbolId": "src/data-github-tree/index:"
    },
    "@cdktf/provider-github.dataGithubUser": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 132
      },
      "readme": {
        "markdown": "# `data_github_user`\n\nRefer to the Terraform Registory for docs: [`data_github_user`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/user).\n"
      },
      "symbolId": "src/data-github-user/index:"
    },
    "@cdktf/provider-github.dataGithubUserExternalIdentity": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 133
      },
      "readme": {
        "markdown": "# `data_github_user_external_identity`\n\nRefer to the Terraform Registory for docs: [`data_github_user_external_identity`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/user_external_identity).\n"
      },
      "symbolId": "src/data-github-user-external-identity/index:"
    },
    "@cdktf/provider-github.dataGithubUsers": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 134
      },
      "readme": {
        "markdown": "# `data_github_users`\n\nRefer to the Terraform Registory for docs: [`data_github_users`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/users).\n"
      },
      "symbolId": "src/data-github-users/index:"
    },
    "@cdktf/provider-github.dependabotOrganizationSecret": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 30
      },
      "readme": {
        "markdown": "# `github_dependabot_organization_secret`\n\nRefer to the Terraform Registory for docs: [`github_dependabot_organization_secret`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret).\n"
      },
      "symbolId": "src/dependabot-organization-secret/index:"
    },
    "@cdktf/provider-github.dependabotOrganizationSecretRepositories": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 31
      },
      "readme": {
        "markdown": "# `github_dependabot_organization_secret_repositories`\n\nRefer to the Terraform Registory for docs: [`github_dependabot_organization_secret_repositories`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret_repositories).\n"
      },
      "symbolId": "src/dependabot-organization-secret-repositories/index:"
    },
    "@cdktf/provider-github.dependabotSecret": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 32
      },
      "readme": {
        "markdown": "# `github_dependabot_secret`\n\nRefer to the Terraform Registory for docs: [`github_dependabot_secret`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_secret).\n"
      },
      "symbolId": "src/dependabot-secret/index:"
    },
    "@cdktf/provider-github.emuGroupMapping": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 33
      },
      "readme": {
        "markdown": "# `github_emu_group_mapping`\n\nRefer to the Terraform Registory for docs: [`github_emu_group_mapping`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/emu_group_mapping).\n"
      },
      "symbolId": "src/emu-group-mapping/index:"
    },
    "@cdktf/provider-github.enterpriseOrganization": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 34
      },
      "readme": {
        "markdown": "# `github_enterprise_organization`\n\nRefer to the Terraform Registory for docs: [`github_enterprise_organization`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/enterprise_organization).\n"
      },
      "symbolId": "src/enterprise-organization/index:"
    },
    "@cdktf/provider-github.issue": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 35
      },
      "readme": {
        "markdown": "# `github_issue`\n\nRefer to the Terraform Registory for docs: [`github_issue`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue).\n"
      },
      "symbolId": "src/issue/index:"
    },
    "@cdktf/provider-github.issueLabel": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 36
      },
      "readme": {
        "markdown": "# `github_issue_label`\n\nRefer to the Terraform Registory for docs: [`github_issue_label`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue_label).\n"
      },
      "symbolId": "src/issue-label/index:"
    },
    "@cdktf/provider-github.membership": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 37
      },
      "readme": {
        "markdown": "# `github_membership`\n\nRefer to the Terraform Registory for docs: [`github_membership`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/membership).\n"
      },
      "symbolId": "src/membership/index:"
    },
    "@cdktf/provider-github.organizationBlock": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 38
      },
      "readme": {
        "markdown": "# `github_organization_block`\n\nRefer to the Terraform Registory for docs: [`github_organization_block`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_block).\n"
      },
      "symbolId": "src/organization-block/index:"
    },
    "@cdktf/provider-github.organizationCustomRole": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 39
      },
      "readme": {
        "markdown": "# `github_organization_custom_role`\n\nRefer to the Terraform Registory for docs: [`github_organization_custom_role`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_custom_role).\n"
      },
      "symbolId": "src/organization-custom-role/index:"
    },
    "@cdktf/provider-github.organizationProject": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 40
      },
      "readme": {
        "markdown": "# `github_organization_project`\n\nRefer to the Terraform Registory for docs: [`github_organization_project`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_project).\n"
      },
      "symbolId": "src/organization-project/index:"
    },
    "@cdktf/provider-github.organizationRuleset": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 41
      },
      "readme": {
        "markdown": "# `github_organization_ruleset`\n\nRefer to the Terraform Registory for docs: [`github_organization_ruleset`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset).\n"
      },
      "symbolId": "src/organization-ruleset/index:"
    },
    "@cdktf/provider-github.organizationSecurityManager": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 42
      },
      "readme": {
        "markdown": "# `github_organization_security_manager`\n\nRefer to the Terraform Registory for docs: [`github_organization_security_manager`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_security_manager).\n"
      },
      "symbolId": "src/organization-security-manager/index:"
    },
    "@cdktf/provider-github.organizationSettings": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 43
      },
      "readme": {
        "markdown": "# `github_organization_settings`\n\nRefer to the Terraform Registory for docs: [`github_organization_settings`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings).\n"
      },
      "symbolId": "src/organization-settings/index:"
    },
    "@cdktf/provider-github.organizationWebhook": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 44
      },
      "readme": {
        "markdown": "# `github_organization_webhook`\n\nRefer to the Terraform Registory for docs: [`github_organization_webhook`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_webhook).\n"
      },
      "symbolId": "src/organization-webhook/index:"
    },
    "@cdktf/provider-github.projectCard": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 45
      },
      "readme": {
        "markdown": "# `github_project_card`\n\nRefer to the Terraform Registory for docs: [`github_project_card`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_card).\n"
      },
      "symbolId": "src/project-card/index:"
    },
    "@cdktf/provider-github.projectColumn": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 46
      },
      "readme": {
        "markdown": "# `github_project_column`\n\nRefer to the Terraform Registory for docs: [`github_project_column`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_column).\n"
      },
      "symbolId": "src/project-column/index:"
    },
    "@cdktf/provider-github.provider": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 135
      },
      "readme": {
        "markdown": "# `provider`\n\nRefer to the Terraform Registory for docs: [`github`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs).\n"
      },
      "symbolId": "src/provider/index:"
    },
    "@cdktf/provider-github.release": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 47
      },
      "readme": {
        "markdown": "# `github_release`\n\nRefer to the Terraform Registory for docs: [`github_release`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release).\n"
      },
      "symbolId": "src/release/index:"
    },
    "@cdktf/provider-github.repository": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 48
      },
      "readme": {
        "markdown": "# `github_repository`\n\nRefer to the Terraform Registory for docs: [`github_repository`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository).\n"
      },
      "symbolId": "src/repository/index:"
    },
    "@cdktf/provider-github.repositoryAutolinkReference": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 49
      },
      "readme": {
        "markdown": "# `github_repository_autolink_reference`\n\nRefer to the Terraform Registory for docs: [`github_repository_autolink_reference`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_autolink_reference).\n"
      },
      "symbolId": "src/repository-autolink-reference/index:"
    },
    "@cdktf/provider-github.repositoryCollaborator": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 50
      },
      "readme": {
        "markdown": "# `github_repository_collaborator`\n\nRefer to the Terraform Registory for docs: [`github_repository_collaborator`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborator).\n"
      },
      "symbolId": "src/repository-collaborator/index:"
    },
    "@cdktf/provider-github.repositoryCollaborators": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 51
      },
      "readme": {
        "markdown": "# `github_repository_collaborators`\n\nRefer to the Terraform Registory for docs: [`github_repository_collaborators`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborators).\n"
      },
      "symbolId": "src/repository-collaborators/index:"
    },
    "@cdktf/provider-github.repositoryDependabotSecurityUpdates": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 52
      },
      "readme": {
        "markdown": "# `github_repository_dependabot_security_updates`\n\nRefer to the Terraform Registory for docs: [`github_repository_dependabot_security_updates`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_dependabot_security_updates).\n"
      },
      "symbolId": "src/repository-dependabot-security-updates/index:"
    },
    "@cdktf/provider-github.repositoryDeployKey": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 53
      },
      "readme": {
        "markdown": "# `github_repository_deploy_key`\n\nRefer to the Terraform Registory for docs: [`github_repository_deploy_key`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deploy_key).\n"
      },
      "symbolId": "src/repository-deploy-key/index:"
    },
    "@cdktf/provider-github.repositoryDeploymentBranchPolicy": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 54
      },
      "readme": {
        "markdown": "# `github_repository_deployment_branch_policy`\n\nRefer to the Terraform Registory for docs: [`github_repository_deployment_branch_policy`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deployment_branch_policy).\n"
      },
      "symbolId": "src/repository-deployment-branch-policy/index:"
    },
    "@cdktf/provider-github.repositoryEnvironment": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 55
      },
      "readme": {
        "markdown": "# `github_repository_environment`\n\nRefer to the Terraform Registory for docs: [`github_repository_environment`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment).\n"
      },
      "symbolId": "src/repository-environment/index:"
    },
    "@cdktf/provider-github.repositoryEnvironmentDeploymentPolicy": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 56
      },
      "readme": {
        "markdown": "# `github_repository_environment_deployment_policy`\n\nRefer to the Terraform Registory for docs: [`github_repository_environment_deployment_policy`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment_deployment_policy).\n"
      },
      "symbolId": "src/repository-environment-deployment-policy/index:"
    },
    "@cdktf/provider-github.repositoryFile": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 57
      },
      "readme": {
        "markdown": "# `github_repository_file`\n\nRefer to the Terraform Registory for docs: [`github_repository_file`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_file).\n"
      },
      "symbolId": "src/repository-file/index:"
    },
    "@cdktf/provider-github.repositoryMilestone": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 58
      },
      "readme": {
        "markdown": "# `github_repository_milestone`\n\nRefer to the Terraform Registory for docs: [`github_repository_milestone`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_milestone).\n"
      },
      "symbolId": "src/repository-milestone/index:"
    },
    "@cdktf/provider-github.repositoryProject": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 59
      },
      "readme": {
        "markdown": "# `github_repository_project`\n\nRefer to the Terraform Registory for docs: [`github_repository_project`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_project).\n"
      },
      "symbolId": "src/repository-project/index:"
    },
    "@cdktf/provider-github.repositoryPullRequest": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 60
      },
      "readme": {
        "markdown": "# `github_repository_pull_request`\n\nRefer to the Terraform Registory for docs: [`github_repository_pull_request`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_pull_request).\n"
      },
      "symbolId": "src/repository-pull-request/index:"
    },
    "@cdktf/provider-github.repositoryRuleset": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 61
      },
      "readme": {
        "markdown": "# `github_repository_ruleset`\n\nRefer to the Terraform Registory for docs: [`github_repository_ruleset`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset).\n"
      },
      "symbolId": "src/repository-ruleset/index:"
    },
    "@cdktf/provider-github.repositoryTagProtection": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 62
      },
      "readme": {
        "markdown": "# `github_repository_tag_protection`\n\nRefer to the Terraform Registory for docs: [`github_repository_tag_protection`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_tag_protection).\n"
      },
      "symbolId": "src/repository-tag-protection/index:"
    },
    "@cdktf/provider-github.repositoryTopics": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 63
      },
      "readme": {
        "markdown": "# `github_repository_topics`\n\nRefer to the Terraform Registory for docs: [`github_repository_topics`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_topics).\n"
      },
      "symbolId": "src/repository-topics/index:"
    },
    "@cdktf/provider-github.repositoryWebhook": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 64
      },
      "readme": {
        "markdown": "# `github_repository_webhook`\n\nRefer to the Terraform Registory for docs: [`github_repository_webhook`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook).\n"
      },
      "symbolId": "src/repository-webhook/index:"
    },
    "@cdktf/provider-github.team": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 65
      },
      "readme": {
        "markdown": "# `github_team`\n\nRefer to the Terraform Registory for docs: [`github_team`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team).\n"
      },
      "symbolId": "src/team/index:"
    },
    "@cdktf/provider-github.teamMembers": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 66
      },
      "readme": {
        "markdown": "# `github_team_members`\n\nRefer to the Terraform Registory for docs: [`github_team_members`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_members).\n"
      },
      "symbolId": "src/team-members/index:"
    },
    "@cdktf/provider-github.teamMembership": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 67
      },
      "readme": {
        "markdown": "# `github_team_membership`\n\nRefer to the Terraform Registory for docs: [`github_team_membership`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_membership).\n"
      },
      "symbolId": "src/team-membership/index:"
    },
    "@cdktf/provider-github.teamRepository": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 68
      },
      "readme": {
        "markdown": "# `github_team_repository`\n\nRefer to the Terraform Registory for docs: [`github_team_repository`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_repository).\n"
      },
      "symbolId": "src/team-repository/index:"
    },
    "@cdktf/provider-github.teamSettings": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 69
      },
      "readme": {
        "markdown": "# `github_team_settings`\n\nRefer to the Terraform Registory for docs: [`github_team_settings`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_settings).\n"
      },
      "symbolId": "src/team-settings/index:"
    },
    "@cdktf/provider-github.teamSyncGroupMapping": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 70
      },
      "readme": {
        "markdown": "# `github_team_sync_group_mapping`\n\nRefer to the Terraform Registory for docs: [`github_team_sync_group_mapping`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_sync_group_mapping).\n"
      },
      "symbolId": "src/team-sync-group-mapping/index:"
    },
    "@cdktf/provider-github.userGpgKey": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 71
      },
      "readme": {
        "markdown": "# `github_user_gpg_key`\n\nRefer to the Terraform Registory for docs: [`github_user_gpg_key`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_gpg_key).\n"
      },
      "symbolId": "src/user-gpg-key/index:"
    },
    "@cdktf/provider-github.userInvitationAccepter": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 72
      },
      "readme": {
        "markdown": "# `github_user_invitation_accepter`\n\nRefer to the Terraform Registory for docs: [`github_user_invitation_accepter`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_invitation_accepter).\n"
      },
      "symbolId": "src/user-invitation-accepter/index:"
    },
    "@cdktf/provider-github.userSshKey": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 73
      },
      "readme": {
        "markdown": "# `github_user_ssh_key`\n\nRefer to the Terraform Registory for docs: [`github_user_ssh_key`](https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_ssh_key).\n"
      },
      "symbolId": "src/user-ssh-key/index:"
    }
  },
  "targets": {
    "dotnet": {
      "namespace": "HashiCorp.Cdktf.Providers.Github",
      "packageId": "HashiCorp.Cdktf.Providers.Github"
    },
    "go": {
      "moduleName": "github.com/cdktf/cdktf-provider-github-go",
      "packageName": "github"
    },
    "java": {
      "maven": {
        "artifactId": "cdktf-provider-github",
        "groupId": "com.hashicorp"
      },
      "package": "com.hashicorp.cdktf.providers.github"
    },
    "js": {
      "npm": "@cdktf/provider-github"
    },
    "python": {
      "distName": "cdktf-cdktf-provider-github",
      "module": "cdktf_cdktf_provider_github"
    }
  },
  "types": {
    "@cdktf/provider-github.actionsEnvironmentSecret.ActionsEnvironmentSecret": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_secret github_actions_environment_secret}."
      },
      "fqn": "@cdktf/provider-github.actionsEnvironmentSecret.ActionsEnvironmentSecret",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_secret github_actions_environment_secret} Resource."
        },
        "locationInModule": {
          "filename": "src/actions-environment-secret/index.ts",
          "line": 89
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.actionsEnvironmentSecret.ActionsEnvironmentSecretConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-environment-secret/index.ts",
        "line": 57
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ActionsEnvironmentSecret resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 74
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ActionsEnvironmentSecret to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_secret#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ActionsEnvironmentSecret that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ActionsEnvironmentSecret to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 130
          },
          "name": "resetEncryptedValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 159
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 175
          },
          "name": "resetPlaintextValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 218
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ActionsEnvironmentSecret",
      "namespace": "actionsEnvironmentSecret",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 62
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 118
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 210
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 134
          },
          "name": "encryptedValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 147
          },
          "name": "environmentInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 163
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 179
          },
          "name": "plaintextValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 192
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 205
          },
          "name": "secretNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 124
          },
          "name": "encryptedValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 140
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 153
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 169
          },
          "name": "plaintextValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 185
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 198
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-environment-secret/index:ActionsEnvironmentSecret"
    },
    "@cdktf/provider-github.actionsEnvironmentSecret.ActionsEnvironmentSecretConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsEnvironmentSecret.ActionsEnvironmentSecretConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-environment-secret/index.ts",
        "line": 14
      },
      "name": "ActionsEnvironmentSecretConfig",
      "namespace": "actionsEnvironmentSecret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_secret#environment ActionsEnvironmentSecret#environment}",
            "stability": "stable",
            "summary": "Name of the environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 26
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_secret#repository ActionsEnvironmentSecret#repository}",
            "stability": "stable",
            "summary": "Name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 45
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_secret#secret_name ActionsEnvironmentSecret#secret_name}",
            "stability": "stable",
            "summary": "Name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 51
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_secret#encrypted_value ActionsEnvironmentSecret#encrypted_value}",
            "stability": "stable",
            "summary": "Encrypted value of the secret using the GitHub public key in Base64 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 20
          },
          "name": "encryptedValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_secret#id ActionsEnvironmentSecret#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_secret#plaintext_value ActionsEnvironmentSecret#plaintext_value}",
            "stability": "stable",
            "summary": "Plaintext value of the secret to be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-secret/index.ts",
            "line": 39
          },
          "name": "plaintextValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-environment-secret/index:ActionsEnvironmentSecretConfig"
    },
    "@cdktf/provider-github.actionsEnvironmentVariable.ActionsEnvironmentVariable": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_variable github_actions_environment_variable}."
      },
      "fqn": "@cdktf/provider-github.actionsEnvironmentVariable.ActionsEnvironmentVariable",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_variable github_actions_environment_variable} Resource."
        },
        "locationInModule": {
          "filename": "src/actions-environment-variable/index.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.actionsEnvironmentVariable.ActionsEnvironmentVariableConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-environment-variable/index.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ActionsEnvironmentVariable resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 68
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ActionsEnvironmentVariable to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_variable#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ActionsEnvironmentVariable that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ActionsEnvironmentVariable to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 136
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 192
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ActionsEnvironmentVariable",
      "namespace": "actionsEnvironmentVariable",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 56
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 111
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 158
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 124
          },
          "name": "environmentInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 140
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 153
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 171
          },
          "name": "valueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 184
          },
          "name": "variableNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 117
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 130
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 146
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 164
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 177
          },
          "name": "variableName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-environment-variable/index:ActionsEnvironmentVariable"
    },
    "@cdktf/provider-github.actionsEnvironmentVariable.ActionsEnvironmentVariableConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsEnvironmentVariable.ActionsEnvironmentVariableConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-environment-variable/index.ts",
        "line": 14
      },
      "name": "ActionsEnvironmentVariableConfig",
      "namespace": "actionsEnvironmentVariable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_variable#environment ActionsEnvironmentVariable#environment}",
            "stability": "stable",
            "summary": "Name of the environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 20
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_variable#repository ActionsEnvironmentVariable#repository}",
            "stability": "stable",
            "summary": "Name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_variable#value ActionsEnvironmentVariable#value}",
            "stability": "stable",
            "summary": "Value of the variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 39
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_variable#variable_name ActionsEnvironmentVariable#variable_name}",
            "stability": "stable",
            "summary": "Name of the variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 45
          },
          "name": "variableName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_environment_variable#id ActionsEnvironmentVariable#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-environment-variable/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-environment-variable/index:ActionsEnvironmentVariableConfig"
    },
    "@cdktf/provider-github.actionsOrganizationOidcSubjectClaimCustomizationTemplate.ActionsOrganizationOidcSubjectClaimCustomizationTemplate": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_oidc_subject_claim_customization_template github_actions_organization_oidc_subject_claim_customization_template}."
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationOidcSubjectClaimCustomizationTemplate.ActionsOrganizationOidcSubjectClaimCustomizationTemplate",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_oidc_subject_claim_customization_template github_actions_organization_oidc_subject_claim_customization_template} Resource."
        },
        "locationInModule": {
          "filename": "src/actions-organization-oidc-subject-claim-customization-template/index.ts",
          "line": 65
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.actionsOrganizationOidcSubjectClaimCustomizationTemplate.ActionsOrganizationOidcSubjectClaimCustomizationTemplateConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-organization-oidc-subject-claim-customization-template/index.ts",
        "line": 33
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ActionsOrganizationOidcSubjectClaimCustomizationTemplate resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 50
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ActionsOrganizationOidcSubjectClaimCustomizationTemplate to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_oidc_subject_claim_customization_template#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ActionsOrganizationOidcSubjectClaimCustomizationTemplate that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ActionsOrganizationOidcSubjectClaimCustomizationTemplate to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 97
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 122
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ActionsOrganizationOidcSubjectClaimCustomizationTemplate",
      "namespace": "actionsOrganizationOidcSubjectClaimCustomizationTemplate",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 38
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 101
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 114
          },
          "name": "includeClaimKeysInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 91
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 107
          },
          "name": "includeClaimKeys",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/actions-organization-oidc-subject-claim-customization-template/index:ActionsOrganizationOidcSubjectClaimCustomizationTemplate"
    },
    "@cdktf/provider-github.actionsOrganizationOidcSubjectClaimCustomizationTemplate.ActionsOrganizationOidcSubjectClaimCustomizationTemplateConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationOidcSubjectClaimCustomizationTemplate.ActionsOrganizationOidcSubjectClaimCustomizationTemplateConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-organization-oidc-subject-claim-customization-template/index.ts",
        "line": 14
      },
      "name": "ActionsOrganizationOidcSubjectClaimCustomizationTemplateConfig",
      "namespace": "actionsOrganizationOidcSubjectClaimCustomizationTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_oidc_subject_claim_customization_template#include_claim_keys ActionsOrganizationOidcSubjectClaimCustomizationTemplate#include_claim_keys}",
            "stability": "stable",
            "summary": "A list of OpenID Connect claims."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 27
          },
          "name": "includeClaimKeys",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_oidc_subject_claim_customization_template#id ActionsOrganizationOidcSubjectClaimCustomizationTemplate#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-organization-oidc-subject-claim-customization-template/index:ActionsOrganizationOidcSubjectClaimCustomizationTemplateConfig"
    },
    "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissions": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_permissions github_actions_organization_permissions}."
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissions",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_permissions github_actions_organization_permissions} Resource."
        },
        "locationInModule": {
          "filename": "src/actions-organization-permissions/index.ts",
          "line": 269
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-organization-permissions/index.ts",
        "line": 237
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ActionsOrganizationPermissions resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 254
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ActionsOrganizationPermissions to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_permissions#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ActionsOrganizationPermissions that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ActionsOrganizationPermissions to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 346
          },
          "name": "putAllowedActionsConfig",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsAllowedActionsConfig"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 362
          },
          "name": "putEnabledRepositoriesConfig",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsEnabledRepositoriesConfig"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 304
          },
          "name": "resetAllowedActions"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 349
          },
          "name": "resetAllowedActionsConfig"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 365
          },
          "name": "resetEnabledRepositoriesConfig"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 333
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 377
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ActionsOrganizationPermissions",
      "namespace": "actionsOrganizationPermissions",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 242
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 343
          },
          "name": "allowedActionsConfig",
          "type": {
            "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsAllowedActionsConfigOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 359
          },
          "name": "enabledRepositoriesConfig",
          "type": {
            "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsEnabledRepositoriesConfigOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 353
          },
          "name": "allowedActionsConfigInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsAllowedActionsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 308
          },
          "name": "allowedActionsInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 369
          },
          "name": "enabledRepositoriesConfigInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsEnabledRepositoriesConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 321
          },
          "name": "enabledRepositoriesInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 337
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 298
          },
          "name": "allowedActions",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 314
          },
          "name": "enabledRepositories",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 327
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-organization-permissions/index:ActionsOrganizationPermissions"
    },
    "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsAllowedActionsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsAllowedActionsConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-organization-permissions/index.ts",
        "line": 47
      },
      "name": "ActionsOrganizationPermissionsAllowedActionsConfig",
      "namespace": "actionsOrganizationPermissions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_permissions#github_owned_allowed ActionsOrganizationPermissions#github_owned_allowed}",
            "stability": "stable",
            "summary": "Whether GitHub-owned actions are allowed in the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 53
          },
          "name": "githubOwnedAllowed",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Wildcards, tags, and SHAs are allowed. For example, 'monalisa/octocat@', 'monalisa/octocat@v2', 'monalisa/'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_permissions#patterns_allowed ActionsOrganizationPermissions#patterns_allowed}",
            "stability": "stable",
            "summary": "Specifies a list of string-matching patterns to allow specific action(s)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 59
          },
          "name": "patternsAllowed",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Set to 'true' to allow all GitHub Marketplace actions by verified creators.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_permissions#verified_allowed ActionsOrganizationPermissions#verified_allowed}",
            "stability": "stable",
            "summary": "Whether actions in GitHub Marketplace from verified creators are allowed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 65
          },
          "name": "verifiedAllowed",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/actions-organization-permissions/index:ActionsOrganizationPermissionsAllowedActionsConfig"
    },
    "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsAllowedActionsConfigOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsAllowedActionsConfigOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/actions-organization-permissions/index.ts",
          "line": 87
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-organization-permissions/index.ts",
        "line": 80
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 145
          },
          "name": "resetPatternsAllowed"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 161
          },
          "name": "resetVerifiedAllowed"
        }
      ],
      "name": "ActionsOrganizationPermissionsAllowedActionsConfigOutputReference",
      "namespace": "actionsOrganizationPermissions",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 133
          },
          "name": "githubOwnedAllowedInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 149
          },
          "name": "patternsAllowedInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 165
          },
          "name": "verifiedAllowedInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 126
          },
          "name": "githubOwnedAllowed",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 139
          },
          "name": "patternsAllowed",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 155
          },
          "name": "verifiedAllowed",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 91
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsAllowedActionsConfig"
          }
        }
      ],
      "symbolId": "src/actions-organization-permissions/index:ActionsOrganizationPermissionsAllowedActionsConfigOutputReference"
    },
    "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-organization-permissions/index.ts",
        "line": 14
      },
      "name": "ActionsOrganizationPermissionsConfig",
      "namespace": "actionsOrganizationPermissions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be one of: 'all', 'none', or 'selected'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_permissions#enabled_repositories ActionsOrganizationPermissions#enabled_repositories}",
            "stability": "stable",
            "summary": "The policy that controls the repositories in the organization that are allowed to run GitHub Actions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 26
          },
          "name": "enabledRepositories",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be one of: 'all', 'local_only', or 'selected'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_permissions#allowed_actions ActionsOrganizationPermissions#allowed_actions}",
            "stability": "stable",
            "summary": "The permissions policy that controls the actions that are allowed to run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 20
          },
          "name": "allowedActions",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_permissions#allowed_actions_config ActionsOrganizationPermissions#allowed_actions_config}",
            "stability": "stable",
            "summary": "allowed_actions_config block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 39
          },
          "name": "allowedActionsConfig",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsAllowedActionsConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_permissions#enabled_repositories_config ActionsOrganizationPermissions#enabled_repositories_config}",
            "stability": "stable",
            "summary": "enabled_repositories_config block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 45
          },
          "name": "enabledRepositoriesConfig",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsEnabledRepositoriesConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_permissions#id ActionsOrganizationPermissions#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-organization-permissions/index:ActionsOrganizationPermissionsConfig"
    },
    "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsEnabledRepositoriesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsEnabledRepositoriesConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-organization-permissions/index.ts",
        "line": 169
      },
      "name": "ActionsOrganizationPermissionsEnabledRepositoriesConfig",
      "namespace": "actionsOrganizationPermissions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_permissions#repository_ids ActionsOrganizationPermissions#repository_ids}",
            "stability": "stable",
            "summary": "List of repository IDs to enable for GitHub Actions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 175
          },
          "name": "repositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/actions-organization-permissions/index:ActionsOrganizationPermissionsEnabledRepositoriesConfig"
    },
    "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsEnabledRepositoriesConfigOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsEnabledRepositoriesConfigOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/actions-organization-permissions/index.ts",
          "line": 195
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-organization-permissions/index.ts",
        "line": 188
      },
      "name": "ActionsOrganizationPermissionsEnabledRepositoriesConfigOutputReference",
      "namespace": "actionsOrganizationPermissions",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 229
          },
          "name": "repositoryIdsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 222
          },
          "name": "repositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-permissions/index.ts",
            "line": 199
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.actionsOrganizationPermissions.ActionsOrganizationPermissionsEnabledRepositoriesConfig"
          }
        }
      ],
      "symbolId": "src/actions-organization-permissions/index:ActionsOrganizationPermissionsEnabledRepositoriesConfigOutputReference"
    },
    "@cdktf/provider-github.actionsOrganizationSecret.ActionsOrganizationSecret": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret github_actions_organization_secret}."
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationSecret.ActionsOrganizationSecret",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret github_actions_organization_secret} Resource."
        },
        "locationInModule": {
          "filename": "src/actions-organization-secret/index.ts",
          "line": 89
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.actionsOrganizationSecret.ActionsOrganizationSecretConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-organization-secret/index.ts",
        "line": 57
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ActionsOrganizationSecret resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 74
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ActionsOrganizationSecret to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ActionsOrganizationSecret that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ActionsOrganizationSecret to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 130
          },
          "name": "resetEncryptedValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 146
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 162
          },
          "name": "resetPlaintextValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 191
          },
          "name": "resetSelectedRepositoryIds"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 221
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ActionsOrganizationSecret",
      "namespace": "actionsOrganizationSecret",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 62
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 118
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 200
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 134
          },
          "name": "encryptedValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 150
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 166
          },
          "name": "plaintextValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 179
          },
          "name": "secretNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 195
          },
          "name": "selectedRepositoryIdsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 213
          },
          "name": "visibilityInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 124
          },
          "name": "encryptedValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 140
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 156
          },
          "name": "plaintextValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 172
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 185
          },
          "name": "selectedRepositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 206
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-organization-secret/index:ActionsOrganizationSecret"
    },
    "@cdktf/provider-github.actionsOrganizationSecret.ActionsOrganizationSecretConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationSecret.ActionsOrganizationSecretConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-organization-secret/index.ts",
        "line": 14
      },
      "name": "ActionsOrganizationSecretConfig",
      "namespace": "actionsOrganizationSecret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret#secret_name ActionsOrganizationSecret#secret_name}",
            "stability": "stable",
            "summary": "Name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 39
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be one of 'all', 'private', or 'selected'. 'selected_repository_ids' is required if set to 'selected'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret#visibility ActionsOrganizationSecret#visibility}",
            "stability": "stable",
            "summary": "Configures the access that repositories have to the organization secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 51
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret#encrypted_value ActionsOrganizationSecret#encrypted_value}",
            "stability": "stable",
            "summary": "Encrypted value of the secret using the GitHub public key in Base64 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 20
          },
          "name": "encryptedValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret#id ActionsOrganizationSecret#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret#plaintext_value ActionsOrganizationSecret#plaintext_value}",
            "stability": "stable",
            "summary": "Plaintext value of the secret to be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 33
          },
          "name": "plaintextValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret#selected_repository_ids ActionsOrganizationSecret#selected_repository_ids}",
            "stability": "stable",
            "summary": "An array of repository ids that can access the organization secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret/index.ts",
            "line": 45
          },
          "name": "selectedRepositoryIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/actions-organization-secret/index:ActionsOrganizationSecretConfig"
    },
    "@cdktf/provider-github.actionsOrganizationSecretRepositories.ActionsOrganizationSecretRepositories": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret_repositories github_actions_organization_secret_repositories}."
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationSecretRepositories.ActionsOrganizationSecretRepositories",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret_repositories github_actions_organization_secret_repositories} Resource."
        },
        "locationInModule": {
          "filename": "src/actions-organization-secret-repositories/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.actionsOrganizationSecretRepositories.ActionsOrganizationSecretRepositoriesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-organization-secret-repositories/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ActionsOrganizationSecretRepositories resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret-repositories/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ActionsOrganizationSecretRepositories to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret_repositories#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ActionsOrganizationSecretRepositories that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ActionsOrganizationSecretRepositories to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret-repositories/index.ts",
            "line": 104
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret-repositories/index.ts",
            "line": 142
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ActionsOrganizationSecretRepositories",
      "namespace": "actionsOrganizationSecretRepositories",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret-repositories/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret-repositories/index.ts",
            "line": 108
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret-repositories/index.ts",
            "line": 121
          },
          "name": "secretNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret-repositories/index.ts",
            "line": 134
          },
          "name": "selectedRepositoryIdsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret-repositories/index.ts",
            "line": 98
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret-repositories/index.ts",
            "line": 114
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-secret-repositories/index.ts",
            "line": 127
          },
          "name": "selectedRepositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/actions-organization-secret-repositories/index:ActionsOrganizationSecretRepositories"
    },
    "@cdktf/provider-github.actionsOrganizationSecretRepositories.ActionsOrganizationSecretRepositoriesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationSecretRepositories.ActionsOrganizationSecretRepositoriesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-organization-secret-repositories/index.ts",
        "line": 14
      },
      "name": "ActionsOrganizationSecretRepositoriesConfig",
      "namespace": "actionsOrganizationSecretRepositories",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret_repositories#secret_name ActionsOrganizationSecretRepositories#secret_name}",
            "stability": "stable",
            "summary": "Name of the existing secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret-repositories/index.ts",
            "line": 27
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret_repositories#selected_repository_ids ActionsOrganizationSecretRepositories#selected_repository_ids}",
            "stability": "stable",
            "summary": "An array of repository ids that can access the organization secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret-repositories/index.ts",
            "line": 33
          },
          "name": "selectedRepositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_secret_repositories#id ActionsOrganizationSecretRepositories#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-secret-repositories/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-organization-secret-repositories/index:ActionsOrganizationSecretRepositoriesConfig"
    },
    "@cdktf/provider-github.actionsOrganizationVariable.ActionsOrganizationVariable": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_variable github_actions_organization_variable}."
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationVariable.ActionsOrganizationVariable",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_variable github_actions_organization_variable} Resource."
        },
        "locationInModule": {
          "filename": "src/actions-organization-variable/index.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.actionsOrganizationVariable.ActionsOrganizationVariableConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-organization-variable/index.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ActionsOrganizationVariable resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 68
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ActionsOrganizationVariable to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_variable#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ActionsOrganizationVariable that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ActionsOrganizationVariable to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 123
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 139
          },
          "name": "resetSelectedRepositoryIds"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 195
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ActionsOrganizationVariable",
      "namespace": "actionsOrganizationVariable",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 56
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 111
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 148
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 127
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 143
          },
          "name": "selectedRepositoryIdsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 161
          },
          "name": "valueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 174
          },
          "name": "variableNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 187
          },
          "name": "visibilityInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 117
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 133
          },
          "name": "selectedRepositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 154
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 167
          },
          "name": "variableName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 180
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-organization-variable/index:ActionsOrganizationVariable"
    },
    "@cdktf/provider-github.actionsOrganizationVariable.ActionsOrganizationVariableConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsOrganizationVariable.ActionsOrganizationVariableConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-organization-variable/index.ts",
        "line": 14
      },
      "name": "ActionsOrganizationVariableConfig",
      "namespace": "actionsOrganizationVariable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_variable#value ActionsOrganizationVariable#value}",
            "stability": "stable",
            "summary": "Value of the variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 33
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_variable#variable_name ActionsOrganizationVariable#variable_name}",
            "stability": "stable",
            "summary": "Name of the variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 39
          },
          "name": "variableName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be one of 'all', 'private', or 'selected'. 'selected_repository_ids' is required if set to 'selected'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_variable#visibility ActionsOrganizationVariable#visibility}",
            "stability": "stable",
            "summary": "Configures the access that repositories have to the organization variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 45
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_variable#id ActionsOrganizationVariable#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_organization_variable#selected_repository_ids ActionsOrganizationVariable#selected_repository_ids}",
            "stability": "stable",
            "summary": "An array of repository ids that can access the organization variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-organization-variable/index.ts",
            "line": 27
          },
          "name": "selectedRepositoryIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/actions-organization-variable/index:ActionsOrganizationVariableConfig"
    },
    "@cdktf/provider-github.actionsRepositoryAccessLevel.ActionsRepositoryAccessLevel": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_access_level github_actions_repository_access_level}."
      },
      "fqn": "@cdktf/provider-github.actionsRepositoryAccessLevel.ActionsRepositoryAccessLevel",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_access_level github_actions_repository_access_level} Resource."
        },
        "locationInModule": {
          "filename": "src/actions-repository-access-level/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.actionsRepositoryAccessLevel.ActionsRepositoryAccessLevelConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-repository-access-level/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ActionsRepositoryAccessLevel resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/actions-repository-access-level/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ActionsRepositoryAccessLevel to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_access_level#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ActionsRepositoryAccessLevel that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ActionsRepositoryAccessLevel to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-access-level/index.ts",
            "line": 117
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-access-level/index.ts",
            "line": 142
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ActionsRepositoryAccessLevel",
      "namespace": "actionsRepositoryAccessLevel",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-access-level/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-access-level/index.ts",
            "line": 105
          },
          "name": "accessLevelInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-access-level/index.ts",
            "line": 121
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-access-level/index.ts",
            "line": 134
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-access-level/index.ts",
            "line": 98
          },
          "name": "accessLevel",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-access-level/index.ts",
            "line": 111
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-access-level/index.ts",
            "line": 127
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-repository-access-level/index:ActionsRepositoryAccessLevel"
    },
    "@cdktf/provider-github.actionsRepositoryAccessLevel.ActionsRepositoryAccessLevelConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsRepositoryAccessLevel.ActionsRepositoryAccessLevelConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-repository-access-level/index.ts",
        "line": 14
      },
      "name": "ActionsRepositoryAccessLevelConfig",
      "namespace": "actionsRepositoryAccessLevel",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Possible values are 'none', 'user', 'organization', or 'enterprise'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_access_level#access_level ActionsRepositoryAccessLevel#access_level}",
            "stability": "stable",
            "summary": "Where the actions or reusable workflows of the repository may be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-access-level/index.ts",
            "line": 20
          },
          "name": "accessLevel",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_access_level#repository ActionsRepositoryAccessLevel#repository}",
            "stability": "stable",
            "summary": "The GitHub repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-access-level/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_access_level#id ActionsRepositoryAccessLevel#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-access-level/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-repository-access-level/index:ActionsRepositoryAccessLevelConfig"
    },
    "@cdktf/provider-github.actionsRepositoryOidcSubjectClaimCustomizationTemplate.ActionsRepositoryOidcSubjectClaimCustomizationTemplate": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_oidc_subject_claim_customization_template github_actions_repository_oidc_subject_claim_customization_template}."
      },
      "fqn": "@cdktf/provider-github.actionsRepositoryOidcSubjectClaimCustomizationTemplate.ActionsRepositoryOidcSubjectClaimCustomizationTemplate",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_oidc_subject_claim_customization_template github_actions_repository_oidc_subject_claim_customization_template} Resource."
        },
        "locationInModule": {
          "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
          "line": 77
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.actionsRepositoryOidcSubjectClaimCustomizationTemplate.ActionsRepositoryOidcSubjectClaimCustomizationTemplateConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
        "line": 45
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ActionsRepositoryOidcSubjectClaimCustomizationTemplate resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 62
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ActionsRepositoryOidcSubjectClaimCustomizationTemplate to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_oidc_subject_claim_customization_template#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ActionsRepositoryOidcSubjectClaimCustomizationTemplate that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ActionsRepositoryOidcSubjectClaimCustomizationTemplate to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 111
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 127
          },
          "name": "resetIncludeClaimKeys"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 165
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ActionsRepositoryOidcSubjectClaimCustomizationTemplate",
      "namespace": "actionsRepositoryOidcSubjectClaimCustomizationTemplate",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 50
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 115
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 131
          },
          "name": "includeClaimKeysInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 144
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 157
          },
          "name": "useDefaultInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 105
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 121
          },
          "name": "includeClaimKeys",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 137
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 150
          },
          "name": "useDefault",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/actions-repository-oidc-subject-claim-customization-template/index:ActionsRepositoryOidcSubjectClaimCustomizationTemplate"
    },
    "@cdktf/provider-github.actionsRepositoryOidcSubjectClaimCustomizationTemplate.ActionsRepositoryOidcSubjectClaimCustomizationTemplateConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsRepositoryOidcSubjectClaimCustomizationTemplate.ActionsRepositoryOidcSubjectClaimCustomizationTemplateConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
        "line": 14
      },
      "name": "ActionsRepositoryOidcSubjectClaimCustomizationTemplateConfig",
      "namespace": "actionsRepositoryOidcSubjectClaimCustomizationTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_oidc_subject_claim_customization_template#repository ActionsRepositoryOidcSubjectClaimCustomizationTemplate#repository}",
            "stability": "stable",
            "summary": "The name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_oidc_subject_claim_customization_template#use_default ActionsRepositoryOidcSubjectClaimCustomizationTemplate#use_default}",
            "stability": "stable",
            "summary": "Whether to use the default template or not. If 'true', 'include_claim_keys' must not be set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 39
          },
          "name": "useDefault",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_oidc_subject_claim_customization_template#id ActionsRepositoryOidcSubjectClaimCustomizationTemplate#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_oidc_subject_claim_customization_template#include_claim_keys ActionsRepositoryOidcSubjectClaimCustomizationTemplate#include_claim_keys}",
            "stability": "stable",
            "summary": "A list of OpenID Connect claims."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 27
          },
          "name": "includeClaimKeys",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/actions-repository-oidc-subject-claim-customization-template/index:ActionsRepositoryOidcSubjectClaimCustomizationTemplateConfig"
    },
    "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissions": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_permissions github_actions_repository_permissions}."
      },
      "fqn": "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissions",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_permissions github_actions_repository_permissions} Resource."
        },
        "locationInModule": {
          "filename": "src/actions-repository-permissions/index.ts",
          "line": 205
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissionsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-repository-permissions/index.ts",
        "line": 173
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ActionsRepositoryPermissions resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 190
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ActionsRepositoryPermissions to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_permissions#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ActionsRepositoryPermissions that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ActionsRepositoryPermissions to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 298
          },
          "name": "putAllowedActionsConfig",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissionsAllowedActionsConfig"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 240
          },
          "name": "resetAllowedActions"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 301
          },
          "name": "resetAllowedActionsConfig"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 256
          },
          "name": "resetEnabled"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 272
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 313
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ActionsRepositoryPermissions",
      "namespace": "actionsRepositoryPermissions",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 178
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 295
          },
          "name": "allowedActionsConfig",
          "type": {
            "fqn": "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissionsAllowedActionsConfigOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 305
          },
          "name": "allowedActionsConfigInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissionsAllowedActionsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 244
          },
          "name": "allowedActionsInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 260
          },
          "name": "enabledInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 276
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 289
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 234
          },
          "name": "allowedActions",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 250
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 266
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 282
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-repository-permissions/index:ActionsRepositoryPermissions"
    },
    "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissionsAllowedActionsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissionsAllowedActionsConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-repository-permissions/index.ts",
        "line": 47
      },
      "name": "ActionsRepositoryPermissionsAllowedActionsConfig",
      "namespace": "actionsRepositoryPermissions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_permissions#github_owned_allowed ActionsRepositoryPermissions#github_owned_allowed}",
            "stability": "stable",
            "summary": "Whether GitHub-owned actions are allowed in the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 53
          },
          "name": "githubOwnedAllowed",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Wildcards, tags, and SHAs are allowed. For example, 'monalisa/octocat@', 'monalisa/octocat@v2', 'monalisa/'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_permissions#patterns_allowed ActionsRepositoryPermissions#patterns_allowed}",
            "stability": "stable",
            "summary": "Specifies a list of string-matching patterns to allow specific action(s)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 59
          },
          "name": "patternsAllowed",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Set to 'true' to allow all GitHub Marketplace actions by verified creators.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_permissions#verified_allowed ActionsRepositoryPermissions#verified_allowed}",
            "stability": "stable",
            "summary": "Whether actions in GitHub Marketplace from verified creators are allowed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 65
          },
          "name": "verifiedAllowed",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/actions-repository-permissions/index:ActionsRepositoryPermissionsAllowedActionsConfig"
    },
    "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissionsAllowedActionsConfigOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissionsAllowedActionsConfigOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/actions-repository-permissions/index.ts",
          "line": 87
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-repository-permissions/index.ts",
        "line": 80
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 145
          },
          "name": "resetPatternsAllowed"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 161
          },
          "name": "resetVerifiedAllowed"
        }
      ],
      "name": "ActionsRepositoryPermissionsAllowedActionsConfigOutputReference",
      "namespace": "actionsRepositoryPermissions",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 133
          },
          "name": "githubOwnedAllowedInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 149
          },
          "name": "patternsAllowedInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 165
          },
          "name": "verifiedAllowedInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 126
          },
          "name": "githubOwnedAllowed",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 139
          },
          "name": "patternsAllowed",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 155
          },
          "name": "verifiedAllowed",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 91
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissionsAllowedActionsConfig"
          }
        }
      ],
      "symbolId": "src/actions-repository-permissions/index:ActionsRepositoryPermissionsAllowedActionsConfigOutputReference"
    },
    "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissionsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissionsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-repository-permissions/index.ts",
        "line": 14
      },
      "name": "ActionsRepositoryPermissionsConfig",
      "namespace": "actionsRepositoryPermissions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_permissions#repository ActionsRepositoryPermissions#repository}",
            "stability": "stable",
            "summary": "The GitHub repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 39
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be one of: 'all', 'local_only', or 'selected'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_permissions#allowed_actions ActionsRepositoryPermissions#allowed_actions}",
            "stability": "stable",
            "summary": "The permissions policy that controls the actions that are allowed to run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 20
          },
          "name": "allowedActions",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_permissions#allowed_actions_config ActionsRepositoryPermissions#allowed_actions_config}",
            "stability": "stable",
            "summary": "allowed_actions_config block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 45
          },
          "name": "allowedActionsConfig",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.actionsRepositoryPermissions.ActionsRepositoryPermissionsAllowedActionsConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_permissions#enabled ActionsRepositoryPermissions#enabled}",
            "stability": "stable",
            "summary": "Should GitHub actions be enabled on this repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 26
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_repository_permissions#id ActionsRepositoryPermissions#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-repository-permissions/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-repository-permissions/index:ActionsRepositoryPermissionsConfig"
    },
    "@cdktf/provider-github.actionsRunnerGroup.ActionsRunnerGroup": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_runner_group github_actions_runner_group}."
      },
      "fqn": "@cdktf/provider-github.actionsRunnerGroup.ActionsRunnerGroup",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_runner_group github_actions_runner_group} Resource."
        },
        "locationInModule": {
          "filename": "src/actions-runner-group/index.ts",
          "line": 95
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.actionsRunnerGroup.ActionsRunnerGroupConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-runner-group/index.ts",
        "line": 63
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ActionsRunnerGroup resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 80
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ActionsRunnerGroup to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_runner_group#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ActionsRunnerGroup that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ActionsRunnerGroup to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 132
          },
          "name": "resetAllowsPublicRepositories"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 158
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 192
          },
          "name": "resetRestrictedToWorkflows"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 218
          },
          "name": "resetSelectedRepositoryIds"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 234
          },
          "name": "resetSelectedWorkflows"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 259
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ActionsRunnerGroup",
      "namespace": "actionsRunnerGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 68
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 141
          },
          "name": "default",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 146
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 167
          },
          "name": "inherited",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 201
          },
          "name": "runnersUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 206
          },
          "name": "selectedRepositoriesUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 136
          },
          "name": "allowsPublicRepositoriesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 162
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 180
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 196
          },
          "name": "restrictedToWorkflowsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 222
          },
          "name": "selectedRepositoryIdsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 238
          },
          "name": "selectedWorkflowsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 251
          },
          "name": "visibilityInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 126
          },
          "name": "allowsPublicRepositories",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 152
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 173
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 186
          },
          "name": "restrictedToWorkflows",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 212
          },
          "name": "selectedRepositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 228
          },
          "name": "selectedWorkflows",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 244
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-runner-group/index:ActionsRunnerGroup"
    },
    "@cdktf/provider-github.actionsRunnerGroup.ActionsRunnerGroupConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsRunnerGroup.ActionsRunnerGroupConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-runner-group/index.ts",
        "line": 14
      },
      "name": "ActionsRunnerGroupConfig",
      "namespace": "actionsRunnerGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_runner_group#name ActionsRunnerGroup#name}",
            "stability": "stable",
            "summary": "Name of the runner group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 33
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_runner_group#visibility ActionsRunnerGroup#visibility}",
            "stability": "stable",
            "summary": "The visibility of the runner group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 57
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_runner_group#allows_public_repositories ActionsRunnerGroup#allows_public_repositories}",
            "stability": "stable",
            "summary": "Whether public repositories can be added to the runner group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 20
          },
          "name": "allowsPublicRepositories",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_runner_group#id ActionsRunnerGroup#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Defaults to 'false'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_runner_group#restricted_to_workflows ActionsRunnerGroup#restricted_to_workflows}",
            "stability": "stable",
            "summary": "If 'true', the runner group will be restricted to running only the workflows specified in the 'selected_workflows' array."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 39
          },
          "name": "restrictedToWorkflows",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_runner_group#selected_repository_ids ActionsRunnerGroup#selected_repository_ids}",
            "stability": "stable",
            "summary": "List of repository IDs that can access the runner group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 45
          },
          "name": "selectedRepositoryIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This setting will be ignored unless restricted_to_workflows is set to 'true'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_runner_group#selected_workflows ActionsRunnerGroup#selected_workflows}",
            "stability": "stable",
            "summary": "List of workflows the runner group should be allowed to run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-runner-group/index.ts",
            "line": 51
          },
          "name": "selectedWorkflows",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/actions-runner-group/index:ActionsRunnerGroupConfig"
    },
    "@cdktf/provider-github.actionsSecret.ActionsSecret": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_secret github_actions_secret}."
      },
      "fqn": "@cdktf/provider-github.actionsSecret.ActionsSecret",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_secret github_actions_secret} Resource."
        },
        "locationInModule": {
          "filename": "src/actions-secret/index.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.actionsSecret.ActionsSecretConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-secret/index.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ActionsSecret resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 68
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ActionsSecret to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_secret#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ActionsSecret that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ActionsSecret to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 123
          },
          "name": "resetEncryptedValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 139
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 155
          },
          "name": "resetPlaintextValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 198
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ActionsSecret",
      "namespace": "actionsSecret",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 56
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 111
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 190
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 127
          },
          "name": "encryptedValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 143
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 159
          },
          "name": "plaintextValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 172
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 185
          },
          "name": "secretNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 117
          },
          "name": "encryptedValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 133
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 149
          },
          "name": "plaintextValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 165
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 178
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-secret/index:ActionsSecret"
    },
    "@cdktf/provider-github.actionsSecret.ActionsSecretConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsSecret.ActionsSecretConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-secret/index.ts",
        "line": 14
      },
      "name": "ActionsSecretConfig",
      "namespace": "actionsSecret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_secret#repository ActionsSecret#repository}",
            "stability": "stable",
            "summary": "Name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 39
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_secret#secret_name ActionsSecret#secret_name}",
            "stability": "stable",
            "summary": "Name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 45
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_secret#encrypted_value ActionsSecret#encrypted_value}",
            "stability": "stable",
            "summary": "Encrypted value of the secret using the GitHub public key in Base64 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 20
          },
          "name": "encryptedValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_secret#id ActionsSecret#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_secret#plaintext_value ActionsSecret#plaintext_value}",
            "stability": "stable",
            "summary": "Plaintext value of the secret to be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-secret/index.ts",
            "line": 33
          },
          "name": "plaintextValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-secret/index:ActionsSecretConfig"
    },
    "@cdktf/provider-github.actionsVariable.ActionsVariable": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_variable github_actions_variable}."
      },
      "fqn": "@cdktf/provider-github.actionsVariable.ActionsVariable",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_variable github_actions_variable} Resource."
        },
        "locationInModule": {
          "filename": "src/actions-variable/index.ts",
          "line": 77
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.actionsVariable.ActionsVariableConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/actions-variable/index.ts",
        "line": 45
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ActionsVariable resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 62
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ActionsVariable to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_variable#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ActionsVariable that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ActionsVariable to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 116
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 172
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ActionsVariable",
      "namespace": "actionsVariable",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 50
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 104
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 138
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 120
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 133
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 151
          },
          "name": "valueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 164
          },
          "name": "variableNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 110
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 126
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 144
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 157
          },
          "name": "variableName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-variable/index:ActionsVariable"
    },
    "@cdktf/provider-github.actionsVariable.ActionsVariableConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.actionsVariable.ActionsVariableConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/actions-variable/index.ts",
        "line": 14
      },
      "name": "ActionsVariableConfig",
      "namespace": "actionsVariable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_variable#repository ActionsVariable#repository}",
            "stability": "stable",
            "summary": "Name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 27
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_variable#value ActionsVariable#value}",
            "stability": "stable",
            "summary": "Value of the variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 33
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_variable#variable_name ActionsVariable#variable_name}",
            "stability": "stable",
            "summary": "Name of the variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 39
          },
          "name": "variableName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/actions_variable#id ActionsVariable#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/actions-variable/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/actions-variable/index:ActionsVariableConfig"
    },
    "@cdktf/provider-github.appInstallationRepositories.AppInstallationRepositories": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repositories github_app_installation_repositories}."
      },
      "fqn": "@cdktf/provider-github.appInstallationRepositories.AppInstallationRepositories",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repositories github_app_installation_repositories} Resource."
        },
        "locationInModule": {
          "filename": "src/app-installation-repositories/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.appInstallationRepositories.AppInstallationRepositoriesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/app-installation-repositories/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a AppInstallationRepositories resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/app-installation-repositories/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the AppInstallationRepositories to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repositories#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing AppInstallationRepositories that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the AppInstallationRepositories to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/app-installation-repositories/index.ts",
            "line": 104
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/app-installation-repositories/index.ts",
            "line": 142
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "AppInstallationRepositories",
      "namespace": "appInstallationRepositories",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repositories/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repositories/index.ts",
            "line": 108
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repositories/index.ts",
            "line": 121
          },
          "name": "installationIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repositories/index.ts",
            "line": 134
          },
          "name": "selectedRepositoriesInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/app-installation-repositories/index.ts",
            "line": 98
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/app-installation-repositories/index.ts",
            "line": 114
          },
          "name": "installationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/app-installation-repositories/index.ts",
            "line": 127
          },
          "name": "selectedRepositories",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/app-installation-repositories/index:AppInstallationRepositories"
    },
    "@cdktf/provider-github.appInstallationRepositories.AppInstallationRepositoriesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.appInstallationRepositories.AppInstallationRepositoriesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/app-installation-repositories/index.ts",
        "line": 14
      },
      "name": "AppInstallationRepositoriesConfig",
      "namespace": "appInstallationRepositories",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repositories#installation_id AppInstallationRepositories#installation_id}",
            "stability": "stable",
            "summary": "The GitHub app installation id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repositories/index.ts",
            "line": 27
          },
          "name": "installationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repositories#selected_repositories AppInstallationRepositories#selected_repositories}",
            "stability": "stable",
            "summary": "A list of repository names to install the app on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repositories/index.ts",
            "line": 33
          },
          "name": "selectedRepositories",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repositories#id AppInstallationRepositories#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repositories/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/app-installation-repositories/index:AppInstallationRepositoriesConfig"
    },
    "@cdktf/provider-github.appInstallationRepository.AppInstallationRepository": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repository github_app_installation_repository}."
      },
      "fqn": "@cdktf/provider-github.appInstallationRepository.AppInstallationRepository",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repository github_app_installation_repository} Resource."
        },
        "locationInModule": {
          "filename": "src/app-installation-repository/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.appInstallationRepository.AppInstallationRepositoryConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/app-installation-repository/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a AppInstallationRepository resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the AppInstallationRepository to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repository#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing AppInstallationRepository that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the AppInstallationRepository to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 104
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 147
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "AppInstallationRepository",
      "namespace": "appInstallationRepository",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 126
          },
          "name": "repoId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 108
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 121
          },
          "name": "installationIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 139
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 98
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 114
          },
          "name": "installationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 132
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/app-installation-repository/index:AppInstallationRepository"
    },
    "@cdktf/provider-github.appInstallationRepository.AppInstallationRepositoryConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.appInstallationRepository.AppInstallationRepositoryConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/app-installation-repository/index.ts",
        "line": 14
      },
      "name": "AppInstallationRepositoryConfig",
      "namespace": "appInstallationRepository",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repository#installation_id AppInstallationRepository#installation_id}",
            "stability": "stable",
            "summary": "The GitHub app installation id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 27
          },
          "name": "installationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repository#repository AppInstallationRepository#repository}",
            "stability": "stable",
            "summary": "The repository to install the app on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/app_installation_repository#id AppInstallationRepository#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app-installation-repository/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/app-installation-repository/index:AppInstallationRepositoryConfig"
    },
    "@cdktf/provider-github.branch.Branch": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch github_branch}."
      },
      "fqn": "@cdktf/provider-github.branch.Branch",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch github_branch} Resource."
        },
        "locationInModule": {
          "filename": "src/branch/index.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.branch.BranchConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/branch/index.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a Branch resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 68
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the Branch to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing Branch that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the Branch to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 136
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 175
          },
          "name": "resetSourceBranch"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 191
          },
          "name": "resetSourceSha"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 203
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Branch",
      "namespace": "branch",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 56
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 124
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 145
          },
          "name": "ref",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 163
          },
          "name": "sha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 119
          },
          "name": "branchInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 140
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 158
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 179
          },
          "name": "sourceBranchInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 195
          },
          "name": "sourceShaInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 112
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 130
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 151
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 169
          },
          "name": "sourceBranch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 185
          },
          "name": "sourceSha",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/branch/index:Branch"
    },
    "@cdktf/provider-github.branch.BranchConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branch.BranchConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/branch/index.ts",
        "line": 14
      },
      "name": "BranchConfig",
      "namespace": "branch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch#branch Branch#branch}",
            "stability": "stable",
            "summary": "The repository branch to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 20
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch#repository Branch#repository}",
            "stability": "stable",
            "summary": "The GitHub repository name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch#id Branch#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch#source_branch Branch#source_branch}",
            "stability": "stable",
            "summary": "The branch name to start from. Defaults to 'main'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 39
          },
          "name": "sourceBranch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch#source_sha Branch#source_sha}",
            "stability": "stable",
            "summary": "The commit hash to start from. Defaults to the tip of 'source_branch'. If provided, 'source_branch' is ignored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch/index.ts",
            "line": 45
          },
          "name": "sourceSha",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/branch/index:BranchConfig"
    },
    "@cdktf/provider-github.branchDefault.BranchDefault": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_default github_branch_default}."
      },
      "fqn": "@cdktf/provider-github.branchDefault.BranchDefault",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_default github_branch_default} Resource."
        },
        "locationInModule": {
          "filename": "src/branch-default/index.ts",
          "line": 77
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.branchDefault.BranchDefaultConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/branch-default/index.ts",
        "line": 45
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a BranchDefault resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 62
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the BranchDefault to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_default#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing BranchDefault that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the BranchDefault to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 124
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 140
          },
          "name": "resetRename"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 165
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "BranchDefault",
      "namespace": "branchDefault",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 50
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 112
          },
          "name": "branchInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 128
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 144
          },
          "name": "renameInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 157
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 105
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 118
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 134
          },
          "name": "rename",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 150
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/branch-default/index:BranchDefault"
    },
    "@cdktf/provider-github.branchDefault.BranchDefaultConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchDefault.BranchDefaultConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/branch-default/index.ts",
        "line": 14
      },
      "name": "BranchDefaultConfig",
      "namespace": "branchDefault",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_default#branch BranchDefault#branch}",
            "stability": "stable",
            "summary": "The branch (e.g. 'main')."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 20
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_default#repository BranchDefault#repository}",
            "stability": "stable",
            "summary": "The GitHub repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 39
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_default#id BranchDefault#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_default#rename BranchDefault#rename}",
            "stability": "stable",
            "summary": "Indicate if it should rename the branch rather than use an existing branch. Defaults to 'false'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-default/index.ts",
            "line": 33
          },
          "name": "rename",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/branch-default/index:BranchDefaultConfig"
    },
    "@cdktf/provider-github.branchProtection.BranchProtection": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection github_branch_protection}."
      },
      "fqn": "@cdktf/provider-github.branchProtection.BranchProtection",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection github_branch_protection} Resource."
        },
        "locationInModule": {
          "filename": "src/branch-protection/index.ts",
          "line": 544
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/branch-protection/index.ts",
        "line": 512
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a BranchProtection resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 529
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the BranchProtection to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing BranchProtection that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the BranchProtection to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 788
          },
          "name": "putRequiredPullRequestReviews",
          "parameters": [
            {
              "name": "value",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "cdktf.IResolvable"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredPullRequestReviews"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 804
          },
          "name": "putRequiredStatusChecks",
          "parameters": [
            {
              "name": "value",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "cdktf.IResolvable"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredStatusChecks"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 589
          },
          "name": "resetAllowsDeletions"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 605
          },
          "name": "resetAllowsForcePushes"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 621
          },
          "name": "resetBlocksCreations"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 637
          },
          "name": "resetEnforceAdmins"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 653
          },
          "name": "resetForcePushBypassers"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 669
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 685
          },
          "name": "resetLockBranch"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 714
          },
          "name": "resetPushRestrictions"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 743
          },
          "name": "resetRequireConversationResolution"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 775
          },
          "name": "resetRequiredLinearHistory"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 791
          },
          "name": "resetRequiredPullRequestReviews"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 807
          },
          "name": "resetRequiredStatusChecks"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 759
          },
          "name": "resetRequireSignedCommits"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 819
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "BranchProtection",
      "namespace": "branchProtection",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 517
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 785
          },
          "name": "requiredPullRequestReviews",
          "type": {
            "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredPullRequestReviewsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 801
          },
          "name": "requiredStatusChecks",
          "type": {
            "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredStatusChecksList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 593
          },
          "name": "allowsDeletionsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 609
          },
          "name": "allowsForcePushesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 625
          },
          "name": "blocksCreationsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 641
          },
          "name": "enforceAdminsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 657
          },
          "name": "forcePushBypassersInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 673
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 689
          },
          "name": "lockBranchInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 702
          },
          "name": "patternInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 718
          },
          "name": "pushRestrictionsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 731
          },
          "name": "repositoryIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 747
          },
          "name": "requireConversationResolutionInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 779
          },
          "name": "requiredLinearHistoryInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 795
          },
          "name": "requiredPullRequestReviewsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredPullRequestReviews"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 811
          },
          "name": "requiredStatusChecksInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredStatusChecks"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 763
          },
          "name": "requireSignedCommitsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 583
          },
          "name": "allowsDeletions",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 599
          },
          "name": "allowsForcePushes",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 615
          },
          "name": "blocksCreations",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 631
          },
          "name": "enforceAdmins",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 647
          },
          "name": "forcePushBypassers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 663
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 679
          },
          "name": "lockBranch",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 695
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 708
          },
          "name": "pushRestrictions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 724
          },
          "name": "repositoryId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 737
          },
          "name": "requireConversationResolution",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 769
          },
          "name": "requiredLinearHistory",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 753
          },
          "name": "requireSignedCommits",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/branch-protection/index:BranchProtection"
    },
    "@cdktf/provider-github.branchProtection.BranchProtectionConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/branch-protection/index.ts",
        "line": 14
      },
      "name": "BranchProtectionConfig",
      "namespace": "branchProtection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#pattern BranchProtection#pattern}",
            "stability": "stable",
            "summary": "Identifies the protection rule pattern."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 63
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#repository_id BranchProtection#repository_id}",
            "stability": "stable",
            "summary": "The name or node ID of the repository associated with this branch protection rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 75
          },
          "name": "repositoryId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#allows_deletions BranchProtection#allows_deletions}",
            "stability": "stable",
            "summary": "Setting this to 'true' to allow the branch to be deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 20
          },
          "name": "allowsDeletions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#allows_force_pushes BranchProtection#allows_force_pushes}",
            "stability": "stable",
            "summary": "Setting this to 'true' to allow force pushes on the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 26
          },
          "name": "allowsForcePushes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#blocks_creations BranchProtection#blocks_creations}",
            "stability": "stable",
            "summary": "Setting this to 'true' to block creating the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 32
          },
          "name": "blocksCreations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#enforce_admins BranchProtection#enforce_admins}",
            "stability": "stable",
            "summary": "Setting this to 'true' enforces status checks for repository administrators."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 38
          },
          "name": "enforceAdmins",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#force_push_bypassers BranchProtection#force_push_bypassers}",
            "stability": "stable",
            "summary": "The list of actor Names/IDs that are allowed to bypass force push restrictions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 44
          },
          "name": "forcePushBypassers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#id BranchProtection#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 51
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#lock_branch BranchProtection#lock_branch}",
            "stability": "stable",
            "summary": "Setting this to 'true' will make the branch read-only and preventing any pushes to it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 57
          },
          "name": "lockBranch",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#push_restrictions BranchProtection#push_restrictions}",
            "stability": "stable",
            "summary": "The list of actor Names/IDs that may push to the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 69
          },
          "name": "pushRestrictions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#require_conversation_resolution BranchProtection#require_conversation_resolution}",
            "stability": "stable",
            "summary": "Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 81
          },
          "name": "requireConversationResolution",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#required_linear_history BranchProtection#required_linear_history}",
            "stability": "stable",
            "summary": "Setting this to 'true' enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 93
          },
          "name": "requiredLinearHistory",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#required_pull_request_reviews BranchProtection#required_pull_request_reviews}",
            "stability": "stable",
            "summary": "required_pull_request_reviews block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 99
          },
          "name": "requiredPullRequestReviews",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredPullRequestReviews"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#required_status_checks BranchProtection#required_status_checks}",
            "stability": "stable",
            "summary": "required_status_checks block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 105
          },
          "name": "requiredStatusChecks",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredStatusChecks"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#require_signed_commits BranchProtection#require_signed_commits}",
            "stability": "stable",
            "summary": "Setting this to 'true' requires all commits to be signed with GPG."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 87
          },
          "name": "requireSignedCommits",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/branch-protection/index:BranchProtectionConfig"
    },
    "@cdktf/provider-github.branchProtection.BranchProtectionRequiredPullRequestReviews": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredPullRequestReviews",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/branch-protection/index.ts",
        "line": 107
      },
      "name": "BranchProtectionRequiredPullRequestReviews",
      "namespace": "branchProtection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If not empty, 'restrict_dismissals' is ignored. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#dismissal_restrictions BranchProtection#dismissal_restrictions}",
            "stability": "stable",
            "summary": "The list of actor Names/IDs with dismissal access."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 119
          },
          "name": "dismissalRestrictions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#dismiss_stale_reviews BranchProtection#dismiss_stale_reviews}",
            "stability": "stable",
            "summary": "Dismiss approved reviews automatically when a new commit is pushed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 113
          },
          "name": "dismissStaleReviews",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#pull_request_bypassers BranchProtection#pull_request_bypassers}",
            "stability": "stable",
            "summary": "The list of actor Names/IDs that are allowed to bypass pull request requirements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 125
          },
          "name": "pullRequestBypassers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#require_code_owner_reviews BranchProtection#require_code_owner_reviews}",
            "stability": "stable",
            "summary": "Require an approved review in pull requests including files with a designated code owner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 131
          },
          "name": "requireCodeOwnerReviews",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this is specified it must be a number between 0-6.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#required_approving_review_count BranchProtection#required_approving_review_count}",
            "stability": "stable",
            "summary": "Require 'x' number of approvals to satisfy branch protection requirements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 143
          },
          "name": "requiredApprovingReviewCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#require_last_push_approval BranchProtection#require_last_push_approval}",
            "stability": "stable",
            "summary": "Require that The most recent push must be approved by someone other than the last pusher."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 137
          },
          "name": "requireLastPushApproval",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#restrict_dismissals BranchProtection#restrict_dismissals}",
            "stability": "stable",
            "summary": "Restrict pull request review dismissals."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 149
          },
          "name": "restrictDismissals",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/branch-protection/index:BranchProtectionRequiredPullRequestReviews"
    },
    "@cdktf/provider-github.branchProtection.BranchProtectionRequiredPullRequestReviewsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredPullRequestReviewsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/branch-protection/index.ts",
          "line": 369
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/branch-protection/index.ts",
        "line": 361
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 376
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredPullRequestReviewsOutputReference"
            }
          }
        }
      ],
      "name": "BranchProtectionRequiredPullRequestReviewsList",
      "namespace": "branchProtection",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 369
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 369
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 369
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 362
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredPullRequestReviews"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/branch-protection/index:BranchProtectionRequiredPullRequestReviewsList"
    },
    "@cdktf/provider-github.branchProtection.BranchProtectionRequiredPullRequestReviewsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredPullRequestReviewsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/branch-protection/index.ts",
          "line": 178
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/branch-protection/index.ts",
        "line": 168
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 272
          },
          "name": "resetDismissalRestrictions"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 256
          },
          "name": "resetDismissStaleReviews"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 288
          },
          "name": "resetPullRequestBypassers"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 304
          },
          "name": "resetRequireCodeOwnerReviews"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 336
          },
          "name": "resetRequiredApprovingReviewCount"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 320
          },
          "name": "resetRequireLastPushApproval"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 352
          },
          "name": "resetRestrictDismissals"
        }
      ],
      "name": "BranchProtectionRequiredPullRequestReviewsOutputReference",
      "namespace": "branchProtection",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 276
          },
          "name": "dismissalRestrictionsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 260
          },
          "name": "dismissStaleReviewsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 292
          },
          "name": "pullRequestBypassersInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 308
          },
          "name": "requireCodeOwnerReviewsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 340
          },
          "name": "requiredApprovingReviewCountInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 324
          },
          "name": "requireLastPushApprovalInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 356
          },
          "name": "restrictDismissalsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 266
          },
          "name": "dismissalRestrictions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 250
          },
          "name": "dismissStaleReviews",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 282
          },
          "name": "pullRequestBypassers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 298
          },
          "name": "requireCodeOwnerReviews",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 330
          },
          "name": "requiredApprovingReviewCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 314
          },
          "name": "requireLastPushApproval",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 346
          },
          "name": "restrictDismissals",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 182
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredPullRequestReviews"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/branch-protection/index:BranchProtectionRequiredPullRequestReviewsOutputReference"
    },
    "@cdktf/provider-github.branchProtection.BranchProtectionRequiredStatusChecks": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredStatusChecks",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/branch-protection/index.ts",
        "line": 380
      },
      "name": "BranchProtectionRequiredStatusChecks",
      "namespace": "branchProtection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "No status checks are required by default.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#contexts BranchProtection#contexts}",
            "stability": "stable",
            "summary": "The list of status checks to require in order to merge into this branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 386
          },
          "name": "contexts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection#strict BranchProtection#strict}",
            "stability": "stable",
            "summary": "Require branches to be up to date before merging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 392
          },
          "name": "strict",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/branch-protection/index:BranchProtectionRequiredStatusChecks"
    },
    "@cdktf/provider-github.branchProtection.BranchProtectionRequiredStatusChecksList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredStatusChecksList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/branch-protection/index.ts",
          "line": 497
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/branch-protection/index.ts",
        "line": 489
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 504
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredStatusChecksOutputReference"
            }
          }
        }
      ],
      "name": "BranchProtectionRequiredStatusChecksList",
      "namespace": "branchProtection",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 497
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 497
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 497
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 490
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredStatusChecks"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/branch-protection/index:BranchProtectionRequiredStatusChecksList"
    },
    "@cdktf/provider-github.branchProtection.BranchProtectionRequiredStatusChecksOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredStatusChecksOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/branch-protection/index.ts",
          "line": 416
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/branch-protection/index.ts",
        "line": 406
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 464
          },
          "name": "resetContexts"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 480
          },
          "name": "resetStrict"
        }
      ],
      "name": "BranchProtectionRequiredStatusChecksOutputReference",
      "namespace": "branchProtection",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 468
          },
          "name": "contextsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 484
          },
          "name": "strictInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 458
          },
          "name": "contexts",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 474
          },
          "name": "strict",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection/index.ts",
            "line": 420
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "fqn": "@cdktf/provider-github.branchProtection.BranchProtectionRequiredStatusChecks"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/branch-protection/index:BranchProtectionRequiredStatusChecksOutputReference"
    },
    "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3 github_branch_protection_v3}."
      },
      "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3 github_branch_protection_v3} Resource."
        },
        "locationInModule": {
          "filename": "src/branch-protection-v3/index.ts",
          "line": 740
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3Config"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/branch-protection-v3/index.ts",
        "line": 708
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a BranchProtectionV3 resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 725
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the BranchProtectionV3 to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing BranchProtectionV3 that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the BranchProtectionV3 to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 871
          },
          "name": "putRequiredPullRequestReviews",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviews"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 887
          },
          "name": "putRequiredStatusChecks",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredStatusChecks"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 903
          },
          "name": "putRestrictions",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3Restrictions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 792
          },
          "name": "resetEnforceAdmins"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 813
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 842
          },
          "name": "resetRequireConversationResolution"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 874
          },
          "name": "resetRequiredPullRequestReviews"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 890
          },
          "name": "resetRequiredStatusChecks"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 858
          },
          "name": "resetRequireSignedCommits"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 906
          },
          "name": "resetRestrictions"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 918
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "BranchProtectionV3",
      "namespace": "branchProtectionV3",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 713
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 801
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 868
          },
          "name": "requiredPullRequestReviews",
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviewsOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 884
          },
          "name": "requiredStatusChecks",
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredStatusChecksOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 900
          },
          "name": "restrictions",
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RestrictionsOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 780
          },
          "name": "branchInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 796
          },
          "name": "enforceAdminsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 817
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 830
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 846
          },
          "name": "requireConversationResolutionInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 878
          },
          "name": "requiredPullRequestReviewsInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviews"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 894
          },
          "name": "requiredStatusChecksInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredStatusChecks"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 862
          },
          "name": "requireSignedCommitsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 910
          },
          "name": "restrictionsInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3Restrictions"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 773
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 786
          },
          "name": "enforceAdmins",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 807
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 823
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 836
          },
          "name": "requireConversationResolution",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 852
          },
          "name": "requireSignedCommits",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/branch-protection-v3/index:BranchProtectionV3"
    },
    "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3Config": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3Config",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/branch-protection-v3/index.ts",
        "line": 14
      },
      "name": "BranchProtectionV3Config",
      "namespace": "branchProtectionV3",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#branch BranchProtectionV3#branch}",
            "stability": "stable",
            "summary": "The Git branch to protect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 20
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#repository BranchProtectionV3#repository}",
            "stability": "stable",
            "summary": "The GitHub repository name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 39
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#enforce_admins BranchProtectionV3#enforce_admins}",
            "stability": "stable",
            "summary": "Setting this to 'true' enforces status checks for repository administrators."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 26
          },
          "name": "enforceAdmins",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#id BranchProtectionV3#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#require_conversation_resolution BranchProtectionV3#require_conversation_resolution}",
            "stability": "stable",
            "summary": "Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 45
          },
          "name": "requireConversationResolution",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#required_pull_request_reviews BranchProtectionV3#required_pull_request_reviews}",
            "stability": "stable",
            "summary": "required_pull_request_reviews block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 57
          },
          "name": "requiredPullRequestReviews",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviews"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#required_status_checks BranchProtectionV3#required_status_checks}",
            "stability": "stable",
            "summary": "required_status_checks block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 63
          },
          "name": "requiredStatusChecks",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredStatusChecks"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#require_signed_commits BranchProtectionV3#require_signed_commits}",
            "stability": "stable",
            "summary": "Setting this to 'true' requires all commits to be signed with GPG."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 51
          },
          "name": "requireSignedCommits",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#restrictions BranchProtectionV3#restrictions}",
            "stability": "stable",
            "summary": "restrictions block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 69
          },
          "name": "restrictions",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3Restrictions"
          }
        }
      ],
      "symbolId": "src/branch-protection-v3/index:BranchProtectionV3Config"
    },
    "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviews": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviews",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/branch-protection-v3/index.ts",
        "line": 190
      },
      "name": "BranchProtectionV3RequiredPullRequestReviews",
      "namespace": "branchProtectionV3",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#bypass_pull_request_allowances BranchProtectionV3#bypass_pull_request_allowances}",
            "stability": "stable",
            "summary": "bypass_pull_request_allowances block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 230
          },
          "name": "bypassPullRequestAllowances",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviewsBypassPullRequestAllowances"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Always use slug of the team, not its name. Each team already has to have access to the repository.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#dismissal_teams BranchProtectionV3#dismissal_teams}",
            "stability": "stable",
            "summary": "The list of team slugs with dismissal access."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 202
          },
          "name": "dismissalTeams",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#dismissal_users BranchProtectionV3#dismissal_users}",
            "stability": "stable",
            "summary": "The list of user logins with dismissal access."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 208
          },
          "name": "dismissalUsers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#dismiss_stale_reviews BranchProtectionV3#dismiss_stale_reviews}",
            "stability": "stable",
            "summary": "Dismiss approved reviews automatically when a new commit is pushed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 196
          },
          "name": "dismissStaleReviews",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#include_admins BranchProtectionV3#include_admins}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 212
          },
          "name": "includeAdmins",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#require_code_owner_reviews BranchProtectionV3#require_code_owner_reviews}",
            "stability": "stable",
            "summary": "Require an approved review in pull requests including files with a designated code owner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 218
          },
          "name": "requireCodeOwnerReviews",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this is specified it must be a number between 0-6.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#required_approving_review_count BranchProtectionV3#required_approving_review_count}",
            "stability": "stable",
            "summary": "Require 'x' number of approvals to satisfy branch protection requirements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 224
          },
          "name": "requiredApprovingReviewCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/branch-protection-v3/index:BranchProtectionV3RequiredPullRequestReviews"
    },
    "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviewsBypassPullRequestAllowances": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviewsBypassPullRequestAllowances",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/branch-protection-v3/index.ts",
        "line": 71
      },
      "name": "BranchProtectionV3RequiredPullRequestReviewsBypassPullRequestAllowances",
      "namespace": "branchProtectionV3",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#apps BranchProtectionV3#apps}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 75
          },
          "name": "apps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#teams BranchProtectionV3#teams}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 79
          },
          "name": "teams",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#users BranchProtectionV3#users}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 83
          },
          "name": "users",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/branch-protection-v3/index:BranchProtectionV3RequiredPullRequestReviewsBypassPullRequestAllowances"
    },
    "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviewsBypassPullRequestAllowancesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviewsBypassPullRequestAllowancesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/branch-protection-v3/index.ts",
          "line": 105
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/branch-protection-v3/index.ts",
        "line": 98
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 150
          },
          "name": "resetApps"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 166
          },
          "name": "resetTeams"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 182
          },
          "name": "resetUsers"
        }
      ],
      "name": "BranchProtectionV3RequiredPullRequestReviewsBypassPullRequestAllowancesOutputReference",
      "namespace": "branchProtectionV3",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 154
          },
          "name": "appsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 170
          },
          "name": "teamsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 186
          },
          "name": "usersInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 144
          },
          "name": "apps",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 160
          },
          "name": "teams",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 176
          },
          "name": "users",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 109
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviewsBypassPullRequestAllowances"
          }
        }
      ],
      "symbolId": "src/branch-protection-v3/index:BranchProtectionV3RequiredPullRequestReviewsBypassPullRequestAllowancesOutputReference"
    },
    "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviewsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviewsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/branch-protection-v3/index.ts",
          "line": 256
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/branch-protection-v3/index.ts",
        "line": 249
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 418
          },
          "name": "putBypassPullRequestAllowances",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviewsBypassPullRequestAllowances"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 421
          },
          "name": "resetBypassPullRequestAllowances"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 341
          },
          "name": "resetDismissalTeams"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 357
          },
          "name": "resetDismissalUsers"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 325
          },
          "name": "resetDismissStaleReviews"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 373
          },
          "name": "resetIncludeAdmins"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 389
          },
          "name": "resetRequireCodeOwnerReviews"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 405
          },
          "name": "resetRequiredApprovingReviewCount"
        }
      ],
      "name": "BranchProtectionV3RequiredPullRequestReviewsOutputReference",
      "namespace": "branchProtectionV3",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 415
          },
          "name": "bypassPullRequestAllowances",
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviewsBypassPullRequestAllowancesOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 425
          },
          "name": "bypassPullRequestAllowancesInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviewsBypassPullRequestAllowances"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 345
          },
          "name": "dismissalTeamsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 361
          },
          "name": "dismissalUsersInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 329
          },
          "name": "dismissStaleReviewsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 377
          },
          "name": "includeAdminsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 393
          },
          "name": "requireCodeOwnerReviewsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 409
          },
          "name": "requiredApprovingReviewCountInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 335
          },
          "name": "dismissalTeams",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 351
          },
          "name": "dismissalUsers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 319
          },
          "name": "dismissStaleReviews",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 367
          },
          "name": "includeAdmins",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 383
          },
          "name": "requireCodeOwnerReviews",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 399
          },
          "name": "requiredApprovingReviewCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 260
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredPullRequestReviews"
          }
        }
      ],
      "symbolId": "src/branch-protection-v3/index:BranchProtectionV3RequiredPullRequestReviewsOutputReference"
    },
    "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredStatusChecks": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredStatusChecks",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/branch-protection-v3/index.ts",
        "line": 429
      },
      "name": "BranchProtectionV3RequiredStatusChecks",
      "namespace": "branchProtectionV3",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "No status checks are required by default. Checks should be strings containing the 'context' and 'app_id' like so 'context:app_id'\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#checks BranchProtectionV3#checks}",
            "stability": "stable",
            "summary": "The list of status checks to require in order to merge into this branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 435
          },
          "name": "checks",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#contexts BranchProtectionV3#contexts}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 439
          },
          "name": "contexts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#include_admins BranchProtectionV3#include_admins}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 443
          },
          "name": "includeAdmins",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#strict BranchProtectionV3#strict}",
            "stability": "stable",
            "summary": "Require branches to be up to date before merging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 449
          },
          "name": "strict",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/branch-protection-v3/index:BranchProtectionV3RequiredStatusChecks"
    },
    "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredStatusChecksOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredStatusChecksOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/branch-protection-v3/index.ts",
          "line": 472
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/branch-protection-v3/index.ts",
        "line": 465
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 523
          },
          "name": "resetChecks"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 539
          },
          "name": "resetContexts"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 555
          },
          "name": "resetIncludeAdmins"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 571
          },
          "name": "resetStrict"
        }
      ],
      "name": "BranchProtectionV3RequiredStatusChecksOutputReference",
      "namespace": "branchProtectionV3",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 527
          },
          "name": "checksInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 543
          },
          "name": "contextsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 559
          },
          "name": "includeAdminsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 575
          },
          "name": "strictInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 517
          },
          "name": "checks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 533
          },
          "name": "contexts",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 549
          },
          "name": "includeAdmins",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 565
          },
          "name": "strict",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 476
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RequiredStatusChecks"
          }
        }
      ],
      "symbolId": "src/branch-protection-v3/index:BranchProtectionV3RequiredStatusChecksOutputReference"
    },
    "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3Restrictions": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3Restrictions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/branch-protection-v3/index.ts",
        "line": 579
      },
      "name": "BranchProtectionV3Restrictions",
      "namespace": "branchProtectionV3",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#apps BranchProtectionV3#apps}",
            "stability": "stable",
            "summary": "The list of app slugs with push access."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 585
          },
          "name": "apps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Always use slug of the team, not its name. Each team already has to have access to the repository.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#teams BranchProtectionV3#teams}",
            "stability": "stable",
            "summary": "The list of team slugs with push access."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 591
          },
          "name": "teams",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/branch_protection_v3#users BranchProtectionV3#users}",
            "stability": "stable",
            "summary": "The list of user logins with push access."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 597
          },
          "name": "users",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/branch-protection-v3/index:BranchProtectionV3Restrictions"
    },
    "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RestrictionsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3RestrictionsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/branch-protection-v3/index.ts",
          "line": 619
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/branch-protection-v3/index.ts",
        "line": 612
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 664
          },
          "name": "resetApps"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 680
          },
          "name": "resetTeams"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 696
          },
          "name": "resetUsers"
        }
      ],
      "name": "BranchProtectionV3RestrictionsOutputReference",
      "namespace": "branchProtectionV3",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 668
          },
          "name": "appsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 684
          },
          "name": "teamsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 700
          },
          "name": "usersInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 658
          },
          "name": "apps",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 674
          },
          "name": "teams",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 690
          },
          "name": "users",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/branch-protection-v3/index.ts",
            "line": 623
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.branchProtectionV3.BranchProtectionV3Restrictions"
          }
        }
      ],
      "symbolId": "src/branch-protection-v3/index:BranchProtectionV3RestrictionsOutputReference"
    },
    "@cdktf/provider-github.codespacesOrganizationSecret.CodespacesOrganizationSecret": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret github_codespaces_organization_secret}."
      },
      "fqn": "@cdktf/provider-github.codespacesOrganizationSecret.CodespacesOrganizationSecret",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret github_codespaces_organization_secret} Resource."
        },
        "locationInModule": {
          "filename": "src/codespaces-organization-secret/index.ts",
          "line": 89
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.codespacesOrganizationSecret.CodespacesOrganizationSecretConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/codespaces-organization-secret/index.ts",
        "line": 57
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a CodespacesOrganizationSecret resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 74
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the CodespacesOrganizationSecret to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing CodespacesOrganizationSecret that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the CodespacesOrganizationSecret to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 130
          },
          "name": "resetEncryptedValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 146
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 162
          },
          "name": "resetPlaintextValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 191
          },
          "name": "resetSelectedRepositoryIds"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 221
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CodespacesOrganizationSecret",
      "namespace": "codespacesOrganizationSecret",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 62
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 118
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 200
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 134
          },
          "name": "encryptedValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 150
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 166
          },
          "name": "plaintextValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 179
          },
          "name": "secretNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 195
          },
          "name": "selectedRepositoryIdsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 213
          },
          "name": "visibilityInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 124
          },
          "name": "encryptedValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 140
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 156
          },
          "name": "plaintextValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 172
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 185
          },
          "name": "selectedRepositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 206
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/codespaces-organization-secret/index:CodespacesOrganizationSecret"
    },
    "@cdktf/provider-github.codespacesOrganizationSecret.CodespacesOrganizationSecretConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.codespacesOrganizationSecret.CodespacesOrganizationSecretConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/codespaces-organization-secret/index.ts",
        "line": 14
      },
      "name": "CodespacesOrganizationSecretConfig",
      "namespace": "codespacesOrganizationSecret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret#secret_name CodespacesOrganizationSecret#secret_name}",
            "stability": "stable",
            "summary": "Name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 39
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be one of 'all', 'private' or 'selected'. 'selected_repository_ids' is required if set to 'selected'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret#visibility CodespacesOrganizationSecret#visibility}",
            "stability": "stable",
            "summary": "Configures the access that repositories have to the organization secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 51
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret#encrypted_value CodespacesOrganizationSecret#encrypted_value}",
            "stability": "stable",
            "summary": "Encrypted value of the secret using the GitHub public key in Base64 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 20
          },
          "name": "encryptedValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret#id CodespacesOrganizationSecret#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret#plaintext_value CodespacesOrganizationSecret#plaintext_value}",
            "stability": "stable",
            "summary": "Plaintext value of the secret to be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 33
          },
          "name": "plaintextValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret#selected_repository_ids CodespacesOrganizationSecret#selected_repository_ids}",
            "stability": "stable",
            "summary": "An array of repository ids that can access the organization secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret/index.ts",
            "line": 45
          },
          "name": "selectedRepositoryIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/codespaces-organization-secret/index:CodespacesOrganizationSecretConfig"
    },
    "@cdktf/provider-github.codespacesOrganizationSecretRepositories.CodespacesOrganizationSecretRepositories": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret_repositories github_codespaces_organization_secret_repositories}."
      },
      "fqn": "@cdktf/provider-github.codespacesOrganizationSecretRepositories.CodespacesOrganizationSecretRepositories",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret_repositories github_codespaces_organization_secret_repositories} Resource."
        },
        "locationInModule": {
          "filename": "src/codespaces-organization-secret-repositories/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.codespacesOrganizationSecretRepositories.CodespacesOrganizationSecretRepositoriesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/codespaces-organization-secret-repositories/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a CodespacesOrganizationSecretRepositories resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret-repositories/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the CodespacesOrganizationSecretRepositories to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret_repositories#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing CodespacesOrganizationSecretRepositories that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the CodespacesOrganizationSecretRepositories to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret-repositories/index.ts",
            "line": 104
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret-repositories/index.ts",
            "line": 142
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CodespacesOrganizationSecretRepositories",
      "namespace": "codespacesOrganizationSecretRepositories",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret-repositories/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret-repositories/index.ts",
            "line": 108
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret-repositories/index.ts",
            "line": 121
          },
          "name": "secretNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret-repositories/index.ts",
            "line": 134
          },
          "name": "selectedRepositoryIdsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret-repositories/index.ts",
            "line": 98
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret-repositories/index.ts",
            "line": 114
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-organization-secret-repositories/index.ts",
            "line": 127
          },
          "name": "selectedRepositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/codespaces-organization-secret-repositories/index:CodespacesOrganizationSecretRepositories"
    },
    "@cdktf/provider-github.codespacesOrganizationSecretRepositories.CodespacesOrganizationSecretRepositoriesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.codespacesOrganizationSecretRepositories.CodespacesOrganizationSecretRepositoriesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/codespaces-organization-secret-repositories/index.ts",
        "line": 14
      },
      "name": "CodespacesOrganizationSecretRepositoriesConfig",
      "namespace": "codespacesOrganizationSecretRepositories",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret_repositories#secret_name CodespacesOrganizationSecretRepositories#secret_name}",
            "stability": "stable",
            "summary": "Name of the existing secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret-repositories/index.ts",
            "line": 27
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret_repositories#selected_repository_ids CodespacesOrganizationSecretRepositories#selected_repository_ids}",
            "stability": "stable",
            "summary": "An array of repository ids that can access the organization secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret-repositories/index.ts",
            "line": 33
          },
          "name": "selectedRepositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_organization_secret_repositories#id CodespacesOrganizationSecretRepositories#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-organization-secret-repositories/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/codespaces-organization-secret-repositories/index:CodespacesOrganizationSecretRepositoriesConfig"
    },
    "@cdktf/provider-github.codespacesSecret.CodespacesSecret": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_secret github_codespaces_secret}."
      },
      "fqn": "@cdktf/provider-github.codespacesSecret.CodespacesSecret",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_secret github_codespaces_secret} Resource."
        },
        "locationInModule": {
          "filename": "src/codespaces-secret/index.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.codespacesSecret.CodespacesSecretConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/codespaces-secret/index.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a CodespacesSecret resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 68
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the CodespacesSecret to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_secret#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing CodespacesSecret that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the CodespacesSecret to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 123
          },
          "name": "resetEncryptedValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 139
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 155
          },
          "name": "resetPlaintextValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 198
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CodespacesSecret",
      "namespace": "codespacesSecret",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 56
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 111
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 190
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 127
          },
          "name": "encryptedValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 143
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 159
          },
          "name": "plaintextValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 172
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 185
          },
          "name": "secretNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 117
          },
          "name": "encryptedValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 133
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 149
          },
          "name": "plaintextValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 165
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 178
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/codespaces-secret/index:CodespacesSecret"
    },
    "@cdktf/provider-github.codespacesSecret.CodespacesSecretConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.codespacesSecret.CodespacesSecretConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/codespaces-secret/index.ts",
        "line": 14
      },
      "name": "CodespacesSecretConfig",
      "namespace": "codespacesSecret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_secret#repository CodespacesSecret#repository}",
            "stability": "stable",
            "summary": "Name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 39
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_secret#secret_name CodespacesSecret#secret_name}",
            "stability": "stable",
            "summary": "Name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 45
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_secret#encrypted_value CodespacesSecret#encrypted_value}",
            "stability": "stable",
            "summary": "Encrypted value of the secret using the GitHub public key in Base64 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 20
          },
          "name": "encryptedValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_secret#id CodespacesSecret#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_secret#plaintext_value CodespacesSecret#plaintext_value}",
            "stability": "stable",
            "summary": "Plaintext value of the secret to be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-secret/index.ts",
            "line": 33
          },
          "name": "plaintextValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/codespaces-secret/index:CodespacesSecretConfig"
    },
    "@cdktf/provider-github.codespacesUserSecret.CodespacesUserSecret": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_user_secret github_codespaces_user_secret}."
      },
      "fqn": "@cdktf/provider-github.codespacesUserSecret.CodespacesUserSecret",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_user_secret github_codespaces_user_secret} Resource."
        },
        "locationInModule": {
          "filename": "src/codespaces-user-secret/index.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.codespacesUserSecret.CodespacesUserSecretConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/codespaces-user-secret/index.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a CodespacesUserSecret resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 68
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the CodespacesUserSecret to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_user_secret#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing CodespacesUserSecret that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the CodespacesUserSecret to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 123
          },
          "name": "resetEncryptedValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 139
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 155
          },
          "name": "resetPlaintextValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 184
          },
          "name": "resetSelectedRepositoryIds"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 201
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CodespacesUserSecret",
      "namespace": "codespacesUserSecret",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 56
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 111
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 193
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 127
          },
          "name": "encryptedValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 143
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 159
          },
          "name": "plaintextValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 172
          },
          "name": "secretNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 188
          },
          "name": "selectedRepositoryIdsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 117
          },
          "name": "encryptedValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 133
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 149
          },
          "name": "plaintextValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 165
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 178
          },
          "name": "selectedRepositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/codespaces-user-secret/index:CodespacesUserSecret"
    },
    "@cdktf/provider-github.codespacesUserSecret.CodespacesUserSecretConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.codespacesUserSecret.CodespacesUserSecretConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/codespaces-user-secret/index.ts",
        "line": 14
      },
      "name": "CodespacesUserSecretConfig",
      "namespace": "codespacesUserSecret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_user_secret#secret_name CodespacesUserSecret#secret_name}",
            "stability": "stable",
            "summary": "Name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 39
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_user_secret#encrypted_value CodespacesUserSecret#encrypted_value}",
            "stability": "stable",
            "summary": "Encrypted value of the secret using the GitHub public key in Base64 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 20
          },
          "name": "encryptedValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_user_secret#id CodespacesUserSecret#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_user_secret#plaintext_value CodespacesUserSecret#plaintext_value}",
            "stability": "stable",
            "summary": "Plaintext value of the secret to be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 33
          },
          "name": "plaintextValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/codespaces_user_secret#selected_repository_ids CodespacesUserSecret#selected_repository_ids}",
            "stability": "stable",
            "summary": "An array of repository ids that can access the user secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codespaces-user-secret/index.ts",
            "line": 45
          },
          "name": "selectedRepositoryIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/codespaces-user-secret/index:CodespacesUserSecretConfig"
    },
    "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecrets": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_secrets github_actions_environment_secrets}."
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecrets",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_secrets github_actions_environment_secrets} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-actions-environment-secrets/index.ts",
          "line": 145
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecretsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-environment-secrets/index.ts",
        "line": 113
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubActionsEnvironmentSecrets resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 130
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubActionsEnvironmentSecrets to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_secrets#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubActionsEnvironmentSecrets that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubActionsEnvironmentSecrets to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 192
          },
          "name": "resetFullName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 208
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 224
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 242
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubActionsEnvironmentSecrets",
      "namespace": "dataGithubActionsEnvironmentSecrets",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 118
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 234
          },
          "name": "secrets",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecretsSecretsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 180
          },
          "name": "environmentInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 196
          },
          "name": "fullNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 212
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 228
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 173
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 186
          },
          "name": "fullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 202
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 218
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-environment-secrets/index:DataGithubActionsEnvironmentSecrets"
    },
    "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecretsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecretsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-environment-secrets/index.ts",
        "line": 14
      },
      "name": "DataGithubActionsEnvironmentSecretsConfig",
      "namespace": "dataGithubActionsEnvironmentSecrets",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_secrets#environment DataGithubActionsEnvironmentSecrets#environment}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 18
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_secrets#full_name DataGithubActionsEnvironmentSecrets#full_name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 22
          },
          "name": "fullName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_secrets#id DataGithubActionsEnvironmentSecrets#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 29
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_secrets#name DataGithubActionsEnvironmentSecrets#name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 33
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-environment-secrets/index:DataGithubActionsEnvironmentSecretsConfig"
    },
    "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecretsSecrets": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecretsSecrets",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-environment-secrets/index.ts",
        "line": 35
      },
      "name": "DataGithubActionsEnvironmentSecretsSecrets",
      "namespace": "dataGithubActionsEnvironmentSecrets",
      "symbolId": "src/data-github-actions-environment-secrets/index:DataGithubActionsEnvironmentSecretsSecrets"
    },
    "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecretsSecretsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecretsSecretsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-actions-environment-secrets/index.ts",
          "line": 98
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-environment-secrets/index.ts",
        "line": 91
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 105
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecretsSecretsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubActionsEnvironmentSecretsSecretsList",
      "namespace": "dataGithubActionsEnvironmentSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 98
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 98
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 98
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-actions-environment-secrets/index:DataGithubActionsEnvironmentSecretsSecretsList"
    },
    "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecretsSecretsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecretsSecretsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-actions-environment-secrets/index.ts",
          "line": 56
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-environment-secrets/index.ts",
        "line": 47
      },
      "name": "DataGithubActionsEnvironmentSecretsSecretsOutputReference",
      "namespace": "dataGithubActionsEnvironmentSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 76
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 81
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 86
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-secrets/index.ts",
            "line": 60
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentSecrets.DataGithubActionsEnvironmentSecretsSecrets"
          }
        }
      ],
      "symbolId": "src/data-github-actions-environment-secrets/index:DataGithubActionsEnvironmentSecretsSecretsOutputReference"
    },
    "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariables": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_variables github_actions_environment_variables}."
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariables",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_variables github_actions_environment_variables} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-actions-environment-variables/index.ts",
          "line": 150
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariablesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-environment-variables/index.ts",
        "line": 118
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubActionsEnvironmentVariables resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 135
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubActionsEnvironmentVariables to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_variables#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubActionsEnvironmentVariables that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubActionsEnvironmentVariables to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 197
          },
          "name": "resetFullName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 213
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 229
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 247
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubActionsEnvironmentVariables",
      "namespace": "dataGithubActionsEnvironmentVariables",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 123
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 239
          },
          "name": "variables",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariablesVariablesList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 185
          },
          "name": "environmentInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 201
          },
          "name": "fullNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 217
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 233
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 178
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 191
          },
          "name": "fullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 207
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 223
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-environment-variables/index:DataGithubActionsEnvironmentVariables"
    },
    "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariablesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariablesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-environment-variables/index.ts",
        "line": 14
      },
      "name": "DataGithubActionsEnvironmentVariablesConfig",
      "namespace": "dataGithubActionsEnvironmentVariables",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_variables#environment DataGithubActionsEnvironmentVariables#environment}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 18
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_variables#full_name DataGithubActionsEnvironmentVariables#full_name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 22
          },
          "name": "fullName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_variables#id DataGithubActionsEnvironmentVariables#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 29
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_environment_variables#name DataGithubActionsEnvironmentVariables#name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 33
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-environment-variables/index:DataGithubActionsEnvironmentVariablesConfig"
    },
    "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariablesVariables": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariablesVariables",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-environment-variables/index.ts",
        "line": 35
      },
      "name": "DataGithubActionsEnvironmentVariablesVariables",
      "namespace": "dataGithubActionsEnvironmentVariables",
      "symbolId": "src/data-github-actions-environment-variables/index:DataGithubActionsEnvironmentVariablesVariables"
    },
    "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariablesVariablesList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariablesVariablesList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-actions-environment-variables/index.ts",
          "line": 103
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-environment-variables/index.ts",
        "line": 96
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 110
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariablesVariablesOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubActionsEnvironmentVariablesVariablesList",
      "namespace": "dataGithubActionsEnvironmentVariables",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 103
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 103
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 103
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-actions-environment-variables/index:DataGithubActionsEnvironmentVariablesVariablesList"
    },
    "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariablesVariablesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariablesVariablesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-actions-environment-variables/index.ts",
          "line": 56
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-environment-variables/index.ts",
        "line": 47
      },
      "name": "DataGithubActionsEnvironmentVariablesVariablesOutputReference",
      "namespace": "dataGithubActionsEnvironmentVariables",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 76
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 81
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 86
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 91
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-environment-variables/index.ts",
            "line": 60
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubActionsEnvironmentVariables.DataGithubActionsEnvironmentVariablesVariables"
          }
        }
      ],
      "symbolId": "src/data-github-actions-environment-variables/index:DataGithubActionsEnvironmentVariablesVariablesOutputReference"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate.DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_oidc_subject_claim_customization_template github_actions_organization_oidc_subject_claim_customization_template}."
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate.DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_oidc_subject_claim_customization_template github_actions_organization_oidc_subject_claim_customization_template} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index.ts",
          "line": 59
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate.DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplateConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 44
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_oidc_subject_claim_customization_template#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 90
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 107
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate",
      "namespace": "dataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 32
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 99
          },
          "name": "includeClaimKeys",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 94
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 84
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index:DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate.DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplateConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate.DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplateConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index.ts",
        "line": 14
      },
      "name": "DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplateConfig",
      "namespace": "dataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_oidc_subject_claim_customization_template#id DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplate#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-oidc-subject-claim-customization-template/index:DataGithubActionsOrganizationOidcSubjectClaimCustomizationTemplateConfig"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationPublicKey.DataGithubActionsOrganizationPublicKey": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_public_key github_actions_organization_public_key}."
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationPublicKey.DataGithubActionsOrganizationPublicKey",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_public_key github_actions_organization_public_key} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-actions-organization-public-key/index.ts",
          "line": 59
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationPublicKey.DataGithubActionsOrganizationPublicKeyConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-public-key/index.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubActionsOrganizationPublicKey resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-public-key/index.ts",
            "line": 44
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubActionsOrganizationPublicKey to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_public_key#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubActionsOrganizationPublicKey that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubActionsOrganizationPublicKey to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-public-key/index.ts",
            "line": 90
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-public-key/index.ts",
            "line": 112
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubActionsOrganizationPublicKey",
      "namespace": "dataGithubActionsOrganizationPublicKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-public-key/index.ts",
            "line": 32
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-public-key/index.ts",
            "line": 99
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-public-key/index.ts",
            "line": 104
          },
          "name": "keyId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-public-key/index.ts",
            "line": 94
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-public-key/index.ts",
            "line": 84
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-public-key/index:DataGithubActionsOrganizationPublicKey"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationPublicKey.DataGithubActionsOrganizationPublicKeyConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationPublicKey.DataGithubActionsOrganizationPublicKeyConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-public-key/index.ts",
        "line": 14
      },
      "name": "DataGithubActionsOrganizationPublicKeyConfig",
      "namespace": "dataGithubActionsOrganizationPublicKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_public_key#id DataGithubActionsOrganizationPublicKey#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-public-key/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-public-key/index:DataGithubActionsOrganizationPublicKeyConfig"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationRegistrationToken.DataGithubActionsOrganizationRegistrationToken": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_registration_token github_actions_organization_registration_token}."
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationRegistrationToken.DataGithubActionsOrganizationRegistrationToken",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_registration_token github_actions_organization_registration_token} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-actions-organization-registration-token/index.ts",
          "line": 59
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationRegistrationToken.DataGithubActionsOrganizationRegistrationTokenConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-registration-token/index.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubActionsOrganizationRegistrationToken resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-registration-token/index.ts",
            "line": 44
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubActionsOrganizationRegistrationToken to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_registration_token#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubActionsOrganizationRegistrationToken that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubActionsOrganizationRegistrationToken to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-registration-token/index.ts",
            "line": 95
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-registration-token/index.ts",
            "line": 112
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubActionsOrganizationRegistrationToken",
      "namespace": "dataGithubActionsOrganizationRegistrationToken",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-registration-token/index.ts",
            "line": 32
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-registration-token/index.ts",
            "line": 83
          },
          "name": "expiresAt",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-registration-token/index.ts",
            "line": 104
          },
          "name": "token",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-registration-token/index.ts",
            "line": 99
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-registration-token/index.ts",
            "line": 89
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-registration-token/index:DataGithubActionsOrganizationRegistrationToken"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationRegistrationToken.DataGithubActionsOrganizationRegistrationTokenConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationRegistrationToken.DataGithubActionsOrganizationRegistrationTokenConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-registration-token/index.ts",
        "line": 14
      },
      "name": "DataGithubActionsOrganizationRegistrationTokenConfig",
      "namespace": "dataGithubActionsOrganizationRegistrationToken",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_registration_token#id DataGithubActionsOrganizationRegistrationToken#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-registration-token/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-registration-token/index:DataGithubActionsOrganizationRegistrationTokenConfig"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecrets": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_secrets github_actions_organization_secrets}."
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecrets",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_secrets github_actions_organization_secrets} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-actions-organization-secrets/index.ts",
          "line": 138
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecretsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-secrets/index.ts",
        "line": 106
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubActionsOrganizationSecrets resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 123
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubActionsOrganizationSecrets to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_secrets#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubActionsOrganizationSecrets that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubActionsOrganizationSecrets to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 169
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 187
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubActionsOrganizationSecrets",
      "namespace": "dataGithubActionsOrganizationSecrets",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 111
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 179
          },
          "name": "secrets",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecretsSecretsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 173
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 163
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-secrets/index:DataGithubActionsOrganizationSecrets"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecretsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecretsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-secrets/index.ts",
        "line": 14
      },
      "name": "DataGithubActionsOrganizationSecretsConfig",
      "namespace": "dataGithubActionsOrganizationSecrets",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_secrets#id DataGithubActionsOrganizationSecrets#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-secrets/index:DataGithubActionsOrganizationSecretsConfig"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecretsSecrets": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecretsSecrets",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-secrets/index.ts",
        "line": 23
      },
      "name": "DataGithubActionsOrganizationSecretsSecrets",
      "namespace": "dataGithubActionsOrganizationSecrets",
      "symbolId": "src/data-github-actions-organization-secrets/index:DataGithubActionsOrganizationSecretsSecrets"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecretsSecretsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecretsSecretsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-actions-organization-secrets/index.ts",
          "line": 91
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-secrets/index.ts",
        "line": 84
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 98
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecretsSecretsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubActionsOrganizationSecretsSecretsList",
      "namespace": "dataGithubActionsOrganizationSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 91
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 91
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 91
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-secrets/index:DataGithubActionsOrganizationSecretsSecretsList"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecretsSecretsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecretsSecretsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-actions-organization-secrets/index.ts",
          "line": 44
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-secrets/index.ts",
        "line": 35
      },
      "name": "DataGithubActionsOrganizationSecretsSecretsOutputReference",
      "namespace": "dataGithubActionsOrganizationSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 64
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 69
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 74
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 79
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-secrets/index.ts",
            "line": 48
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationSecrets.DataGithubActionsOrganizationSecretsSecrets"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-secrets/index:DataGithubActionsOrganizationSecretsSecretsOutputReference"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariables": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_variables github_actions_organization_variables}."
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariables",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_variables github_actions_organization_variables} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-actions-organization-variables/index.ts",
          "line": 143
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariablesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-variables/index.ts",
        "line": 111
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubActionsOrganizationVariables resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 128
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubActionsOrganizationVariables to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_variables#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubActionsOrganizationVariables that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubActionsOrganizationVariables to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 174
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 192
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubActionsOrganizationVariables",
      "namespace": "dataGithubActionsOrganizationVariables",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 116
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 184
          },
          "name": "variables",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariablesVariablesList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 178
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 168
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-variables/index:DataGithubActionsOrganizationVariables"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariablesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariablesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-variables/index.ts",
        "line": 14
      },
      "name": "DataGithubActionsOrganizationVariablesConfig",
      "namespace": "dataGithubActionsOrganizationVariables",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_organization_variables#id DataGithubActionsOrganizationVariables#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-variables/index:DataGithubActionsOrganizationVariablesConfig"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariablesVariables": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariablesVariables",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-variables/index.ts",
        "line": 23
      },
      "name": "DataGithubActionsOrganizationVariablesVariables",
      "namespace": "dataGithubActionsOrganizationVariables",
      "symbolId": "src/data-github-actions-organization-variables/index:DataGithubActionsOrganizationVariablesVariables"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariablesVariablesList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariablesVariablesList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-actions-organization-variables/index.ts",
          "line": 96
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-variables/index.ts",
        "line": 89
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 103
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariablesVariablesOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubActionsOrganizationVariablesVariablesList",
      "namespace": "dataGithubActionsOrganizationVariables",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 96
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 96
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 96
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-variables/index:DataGithubActionsOrganizationVariablesVariablesList"
    },
    "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariablesVariablesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariablesVariablesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-actions-organization-variables/index.ts",
          "line": 44
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-organization-variables/index.ts",
        "line": 35
      },
      "name": "DataGithubActionsOrganizationVariablesVariablesOutputReference",
      "namespace": "dataGithubActionsOrganizationVariables",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 64
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 69
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 74
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 79
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 84
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-organization-variables/index.ts",
            "line": 48
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubActionsOrganizationVariables.DataGithubActionsOrganizationVariablesVariables"
          }
        }
      ],
      "symbolId": "src/data-github-actions-organization-variables/index:DataGithubActionsOrganizationVariablesVariablesOutputReference"
    },
    "@cdktf/provider-github.dataGithubActionsPublicKey.DataGithubActionsPublicKey": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_public_key github_actions_public_key}."
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsPublicKey.DataGithubActionsPublicKey",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_public_key github_actions_public_key} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-actions-public-key/index.ts",
          "line": 63
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsPublicKey.DataGithubActionsPublicKeyConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-public-key/index.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubActionsPublicKey resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-public-key/index.ts",
            "line": 48
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubActionsPublicKey to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_public_key#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubActionsPublicKey that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubActionsPublicKey to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-public-key/index.ts",
            "line": 95
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-public-key/index.ts",
            "line": 130
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubActionsPublicKey",
      "namespace": "dataGithubActionsPublicKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-public-key/index.ts",
            "line": 36
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-public-key/index.ts",
            "line": 104
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-public-key/index.ts",
            "line": 109
          },
          "name": "keyId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-public-key/index.ts",
            "line": 99
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-public-key/index.ts",
            "line": 122
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-public-key/index.ts",
            "line": 89
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-public-key/index.ts",
            "line": 115
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-public-key/index:DataGithubActionsPublicKey"
    },
    "@cdktf/provider-github.dataGithubActionsPublicKey.DataGithubActionsPublicKeyConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsPublicKey.DataGithubActionsPublicKeyConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-public-key/index.ts",
        "line": 14
      },
      "name": "DataGithubActionsPublicKeyConfig",
      "namespace": "dataGithubActionsPublicKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_public_key#repository DataGithubActionsPublicKey#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-public-key/index.ts",
            "line": 25
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_public_key#id DataGithubActionsPublicKey#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-public-key/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-public-key/index:DataGithubActionsPublicKeyConfig"
    },
    "@cdktf/provider-github.dataGithubActionsRegistrationToken.DataGithubActionsRegistrationToken": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_registration_token github_actions_registration_token}."
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsRegistrationToken.DataGithubActionsRegistrationToken",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_registration_token github_actions_registration_token} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-actions-registration-token/index.ts",
          "line": 63
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsRegistrationToken.DataGithubActionsRegistrationTokenConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-registration-token/index.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubActionsRegistrationToken resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-registration-token/index.ts",
            "line": 48
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubActionsRegistrationToken to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_registration_token#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubActionsRegistrationToken that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubActionsRegistrationToken to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-registration-token/index.ts",
            "line": 100
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-registration-token/index.ts",
            "line": 130
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubActionsRegistrationToken",
      "namespace": "dataGithubActionsRegistrationToken",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-registration-token/index.ts",
            "line": 36
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-registration-token/index.ts",
            "line": 88
          },
          "name": "expiresAt",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-registration-token/index.ts",
            "line": 122
          },
          "name": "token",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-registration-token/index.ts",
            "line": 104
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-registration-token/index.ts",
            "line": 117
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-registration-token/index.ts",
            "line": 94
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-registration-token/index.ts",
            "line": 110
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-registration-token/index:DataGithubActionsRegistrationToken"
    },
    "@cdktf/provider-github.dataGithubActionsRegistrationToken.DataGithubActionsRegistrationTokenConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsRegistrationToken.DataGithubActionsRegistrationTokenConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-registration-token/index.ts",
        "line": 14
      },
      "name": "DataGithubActionsRegistrationTokenConfig",
      "namespace": "dataGithubActionsRegistrationToken",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_registration_token#repository DataGithubActionsRegistrationToken#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-registration-token/index.ts",
            "line": 25
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_registration_token#id DataGithubActionsRegistrationToken#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-registration-token/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-registration-token/index:DataGithubActionsRegistrationTokenConfig"
    },
    "@cdktf/provider-github.dataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate.DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_repository_oidc_subject_claim_customization_template github_actions_repository_oidc_subject_claim_customization_template}."
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate.DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_repository_oidc_subject_claim_customization_template github_actions_repository_oidc_subject_claim_customization_template} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
          "line": 63
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate.DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplateConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 48
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_repository_oidc_subject_claim_customization_template#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 95
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 130
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate",
      "namespace": "dataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 36
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 104
          },
          "name": "includeClaimKeys",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 122
          },
          "name": "useDefault",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 99
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 117
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 89
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 110
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index:DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate"
    },
    "@cdktf/provider-github.dataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate.DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplateConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate.DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplateConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
        "line": 14
      },
      "name": "DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplateConfig",
      "namespace": "dataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_repository_oidc_subject_claim_customization_template#name DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate#name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 25
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_repository_oidc_subject_claim_customization_template#id DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplate#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-repository-oidc-subject-claim-customization-template/index:DataGithubActionsRepositoryOidcSubjectClaimCustomizationTemplateConfig"
    },
    "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecrets": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_secrets github_actions_secrets}."
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecrets",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_secrets github_actions_secrets} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-actions-secrets/index.ts",
          "line": 141
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecretsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-secrets/index.ts",
        "line": 109
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubActionsSecrets resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 126
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubActionsSecrets to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_secrets#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubActionsSecrets that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubActionsSecrets to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 174
          },
          "name": "resetFullName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 190
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 206
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 224
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubActionsSecrets",
      "namespace": "dataGithubActionsSecrets",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 114
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 216
          },
          "name": "secrets",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecretsSecretsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 178
          },
          "name": "fullNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 194
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 210
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 168
          },
          "name": "fullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 184
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 200
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-secrets/index:DataGithubActionsSecrets"
    },
    "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecretsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecretsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-secrets/index.ts",
        "line": 14
      },
      "name": "DataGithubActionsSecretsConfig",
      "namespace": "dataGithubActionsSecrets",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_secrets#full_name DataGithubActionsSecrets#full_name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 18
          },
          "name": "fullName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_secrets#id DataGithubActionsSecrets#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 25
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_secrets#name DataGithubActionsSecrets#name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 29
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-secrets/index:DataGithubActionsSecretsConfig"
    },
    "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecretsSecrets": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecretsSecrets",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-secrets/index.ts",
        "line": 31
      },
      "name": "DataGithubActionsSecretsSecrets",
      "namespace": "dataGithubActionsSecrets",
      "symbolId": "src/data-github-actions-secrets/index:DataGithubActionsSecretsSecrets"
    },
    "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecretsSecretsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecretsSecretsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-actions-secrets/index.ts",
          "line": 94
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-secrets/index.ts",
        "line": 87
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 101
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecretsSecretsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubActionsSecretsSecretsList",
      "namespace": "dataGithubActionsSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 94
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 94
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 94
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-actions-secrets/index:DataGithubActionsSecretsSecretsList"
    },
    "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecretsSecretsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecretsSecretsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-actions-secrets/index.ts",
          "line": 52
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-secrets/index.ts",
        "line": 43
      },
      "name": "DataGithubActionsSecretsSecretsOutputReference",
      "namespace": "dataGithubActionsSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 72
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 77
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 82
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-secrets/index.ts",
            "line": 56
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubActionsSecrets.DataGithubActionsSecretsSecrets"
          }
        }
      ],
      "symbolId": "src/data-github-actions-secrets/index:DataGithubActionsSecretsSecretsOutputReference"
    },
    "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariables": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_variables github_actions_variables}."
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariables",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_variables github_actions_variables} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-actions-variables/index.ts",
          "line": 146
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariablesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-variables/index.ts",
        "line": 114
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubActionsVariables resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 131
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubActionsVariables to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_variables#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubActionsVariables that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubActionsVariables to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 179
          },
          "name": "resetFullName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 195
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 211
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 229
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubActionsVariables",
      "namespace": "dataGithubActionsVariables",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 119
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 221
          },
          "name": "variables",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariablesVariablesList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 183
          },
          "name": "fullNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 199
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 215
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 173
          },
          "name": "fullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 189
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 205
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-variables/index:DataGithubActionsVariables"
    },
    "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariablesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariablesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-variables/index.ts",
        "line": 14
      },
      "name": "DataGithubActionsVariablesConfig",
      "namespace": "dataGithubActionsVariables",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_variables#full_name DataGithubActionsVariables#full_name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 18
          },
          "name": "fullName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_variables#id DataGithubActionsVariables#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 25
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/actions_variables#name DataGithubActionsVariables#name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 29
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-actions-variables/index:DataGithubActionsVariablesConfig"
    },
    "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariablesVariables": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariablesVariables",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-actions-variables/index.ts",
        "line": 31
      },
      "name": "DataGithubActionsVariablesVariables",
      "namespace": "dataGithubActionsVariables",
      "symbolId": "src/data-github-actions-variables/index:DataGithubActionsVariablesVariables"
    },
    "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariablesVariablesList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariablesVariablesList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-actions-variables/index.ts",
          "line": 99
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-variables/index.ts",
        "line": 92
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 106
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariablesVariablesOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubActionsVariablesVariablesList",
      "namespace": "dataGithubActionsVariables",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 99
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 99
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 99
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-actions-variables/index:DataGithubActionsVariablesVariablesList"
    },
    "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariablesVariablesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariablesVariablesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-actions-variables/index.ts",
          "line": 52
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-actions-variables/index.ts",
        "line": 43
      },
      "name": "DataGithubActionsVariablesVariablesOutputReference",
      "namespace": "dataGithubActionsVariables",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 72
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 77
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 82
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 87
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-actions-variables/index.ts",
            "line": 56
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubActionsVariables.DataGithubActionsVariablesVariables"
          }
        }
      ],
      "symbolId": "src/data-github-actions-variables/index:DataGithubActionsVariablesVariablesOutputReference"
    },
    "@cdktf/provider-github.dataGithubApp.DataGithubApp": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app github_app}."
      },
      "fqn": "@cdktf/provider-github.dataGithubApp.DataGithubApp",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app github_app} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-app/index.ts",
          "line": 63
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubApp.DataGithubAppConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-app/index.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubApp resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-app/index.ts",
            "line": 48
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubApp to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubApp that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubApp to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-app/index.ts",
            "line": 100
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-app/index.ts",
            "line": 135
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubApp",
      "namespace": "dataGithubApp",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app/index.ts",
            "line": 36
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app/index.ts",
            "line": 88
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app/index.ts",
            "line": 109
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app/index.ts",
            "line": 114
          },
          "name": "nodeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app/index.ts",
            "line": 104
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app/index.ts",
            "line": 127
          },
          "name": "slugInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-app/index.ts",
            "line": 94
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-app/index.ts",
            "line": 120
          },
          "name": "slug",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-app/index:DataGithubApp"
    },
    "@cdktf/provider-github.dataGithubApp.DataGithubAppConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubApp.DataGithubAppConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-app/index.ts",
        "line": 14
      },
      "name": "DataGithubAppConfig",
      "namespace": "dataGithubApp",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app#slug DataGithubApp#slug}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app/index.ts",
            "line": 25
          },
          "name": "slug",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app#id DataGithubApp#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-app/index:DataGithubAppConfig"
    },
    "@cdktf/provider-github.dataGithubAppToken.DataGithubAppToken": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app_token github_app_token}."
      },
      "fqn": "@cdktf/provider-github.dataGithubAppToken.DataGithubAppToken",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app_token github_app_token} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-app-token/index.ts",
          "line": 77
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubAppToken.DataGithubAppTokenConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-app-token/index.ts",
        "line": 45
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubAppToken resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 62
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubAppToken to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app_token#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubAppToken that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubAppToken to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 124
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 167
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubAppToken",
      "namespace": "dataGithubAppToken",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 50
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 159
          },
          "name": "token",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 112
          },
          "name": "appIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 128
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 141
          },
          "name": "installationIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 154
          },
          "name": "pemFileInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 105
          },
          "name": "appId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 118
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 134
          },
          "name": "installationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 147
          },
          "name": "pemFile",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-app-token/index:DataGithubAppToken"
    },
    "@cdktf/provider-github.dataGithubAppToken.DataGithubAppTokenConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubAppToken.DataGithubAppTokenConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-app-token/index.ts",
        "line": 14
      },
      "name": "DataGithubAppTokenConfig",
      "namespace": "dataGithubAppToken",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app_token#app_id DataGithubAppToken#app_id}",
            "stability": "stable",
            "summary": "The GitHub App ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 20
          },
          "name": "appId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app_token#installation_id DataGithubAppToken#installation_id}",
            "stability": "stable",
            "summary": "The GitHub App installation instance ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 33
          },
          "name": "installationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app_token#pem_file DataGithubAppToken#pem_file}",
            "stability": "stable",
            "summary": "The GitHub App PEM file contents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 39
          },
          "name": "pemFile",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/app_token#id DataGithubAppToken#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-app-token/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-app-token/index:DataGithubAppTokenConfig"
    },
    "@cdktf/provider-github.dataGithubBranch.DataGithubBranch": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/branch github_branch}."
      },
      "fqn": "@cdktf/provider-github.dataGithubBranch.DataGithubBranch",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/branch github_branch} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-branch/index.ts",
          "line": 67
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubBranch.DataGithubBranchConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-branch/index.ts",
        "line": 35
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubBranch resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 52
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubBranch to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/branch#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubBranch that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubBranch to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 118
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 153
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubBranch",
      "namespace": "dataGithubBranch",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 40
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 106
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 127
          },
          "name": "ref",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 145
          },
          "name": "sha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 101
          },
          "name": "branchInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 122
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 140
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 94
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 112
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 133
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-branch/index:DataGithubBranch"
    },
    "@cdktf/provider-github.dataGithubBranch.DataGithubBranchConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubBranch.DataGithubBranchConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-branch/index.ts",
        "line": 14
      },
      "name": "DataGithubBranchConfig",
      "namespace": "dataGithubBranch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/branch#branch DataGithubBranch#branch}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 18
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/branch#repository DataGithubBranch#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 29
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/branch#id DataGithubBranch#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch/index.ts",
            "line": 25
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-branch/index:DataGithubBranchConfig"
    },
    "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRules": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/branch_protection_rules github_branch_protection_rules}."
      },
      "fqn": "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRules",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/branch_protection_rules github_branch_protection_rules} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-branch-protection-rules/index.ts",
          "line": 127
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRulesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-branch-protection-rules/index.ts",
        "line": 95
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubBranchProtectionRules resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 112
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubBranchProtectionRules to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/branch_protection_rules#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubBranchProtectionRules that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubBranchProtectionRules to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 159
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 190
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubBranchProtectionRules",
      "namespace": "dataGithubBranchProtectionRules",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 100
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 182
          },
          "name": "rules",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRulesRulesList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 163
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 176
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 153
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 169
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-branch-protection-rules/index:DataGithubBranchProtectionRules"
    },
    "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRulesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRulesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-branch-protection-rules/index.ts",
        "line": 14
      },
      "name": "DataGithubBranchProtectionRulesConfig",
      "namespace": "dataGithubBranchProtectionRules",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/branch_protection_rules#repository DataGithubBranchProtectionRules#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 25
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/branch_protection_rules#id DataGithubBranchProtectionRules#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-branch-protection-rules/index:DataGithubBranchProtectionRulesConfig"
    },
    "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRulesRules": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRulesRules",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-branch-protection-rules/index.ts",
        "line": 27
      },
      "name": "DataGithubBranchProtectionRulesRules",
      "namespace": "dataGithubBranchProtectionRules",
      "symbolId": "src/data-github-branch-protection-rules/index:DataGithubBranchProtectionRulesRules"
    },
    "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRulesRulesList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRulesRulesList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-branch-protection-rules/index.ts",
          "line": 80
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-branch-protection-rules/index.ts",
        "line": 73
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 87
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRulesRulesOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubBranchProtectionRulesRulesList",
      "namespace": "dataGithubBranchProtectionRules",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 80
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 80
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 80
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-branch-protection-rules/index:DataGithubBranchProtectionRulesRulesList"
    },
    "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRulesRulesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRulesRulesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-branch-protection-rules/index.ts",
          "line": 48
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-branch-protection-rules/index.ts",
        "line": 39
      },
      "name": "DataGithubBranchProtectionRulesRulesOutputReference",
      "namespace": "dataGithubBranchProtectionRules",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 68
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-branch-protection-rules/index.ts",
            "line": 52
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubBranchProtectionRules.DataGithubBranchProtectionRulesRules"
          }
        }
      ],
      "symbolId": "src/data-github-branch-protection-rules/index:DataGithubBranchProtectionRulesRulesOutputReference"
    },
    "@cdktf/provider-github.dataGithubCodespacesOrganizationPublicKey.DataGithubCodespacesOrganizationPublicKey": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_organization_public_key github_codespaces_organization_public_key}."
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesOrganizationPublicKey.DataGithubCodespacesOrganizationPublicKey",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_organization_public_key github_codespaces_organization_public_key} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-codespaces-organization-public-key/index.ts",
          "line": 59
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubCodespacesOrganizationPublicKey.DataGithubCodespacesOrganizationPublicKeyConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-codespaces-organization-public-key/index.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubCodespacesOrganizationPublicKey resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-public-key/index.ts",
            "line": 44
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubCodespacesOrganizationPublicKey to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_organization_public_key#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubCodespacesOrganizationPublicKey that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubCodespacesOrganizationPublicKey to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-public-key/index.ts",
            "line": 90
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-public-key/index.ts",
            "line": 112
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubCodespacesOrganizationPublicKey",
      "namespace": "dataGithubCodespacesOrganizationPublicKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-public-key/index.ts",
            "line": 32
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-public-key/index.ts",
            "line": 99
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-public-key/index.ts",
            "line": 104
          },
          "name": "keyId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-public-key/index.ts",
            "line": 94
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-public-key/index.ts",
            "line": 84
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-organization-public-key/index:DataGithubCodespacesOrganizationPublicKey"
    },
    "@cdktf/provider-github.dataGithubCodespacesOrganizationPublicKey.DataGithubCodespacesOrganizationPublicKeyConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesOrganizationPublicKey.DataGithubCodespacesOrganizationPublicKeyConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-codespaces-organization-public-key/index.ts",
        "line": 14
      },
      "name": "DataGithubCodespacesOrganizationPublicKeyConfig",
      "namespace": "dataGithubCodespacesOrganizationPublicKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_organization_public_key#id DataGithubCodespacesOrganizationPublicKey#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-public-key/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-organization-public-key/index:DataGithubCodespacesOrganizationPublicKeyConfig"
    },
    "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecrets": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_organization_secrets github_codespaces_organization_secrets}."
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecrets",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_organization_secrets github_codespaces_organization_secrets} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-codespaces-organization-secrets/index.ts",
          "line": 138
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecretsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-codespaces-organization-secrets/index.ts",
        "line": 106
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubCodespacesOrganizationSecrets resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 123
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubCodespacesOrganizationSecrets to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_organization_secrets#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubCodespacesOrganizationSecrets that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubCodespacesOrganizationSecrets to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 169
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 187
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubCodespacesOrganizationSecrets",
      "namespace": "dataGithubCodespacesOrganizationSecrets",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 111
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 179
          },
          "name": "secrets",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecretsSecretsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 173
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 163
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-organization-secrets/index:DataGithubCodespacesOrganizationSecrets"
    },
    "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecretsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecretsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-codespaces-organization-secrets/index.ts",
        "line": 14
      },
      "name": "DataGithubCodespacesOrganizationSecretsConfig",
      "namespace": "dataGithubCodespacesOrganizationSecrets",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_organization_secrets#id DataGithubCodespacesOrganizationSecrets#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-organization-secrets/index:DataGithubCodespacesOrganizationSecretsConfig"
    },
    "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecretsSecrets": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecretsSecrets",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-codespaces-organization-secrets/index.ts",
        "line": 23
      },
      "name": "DataGithubCodespacesOrganizationSecretsSecrets",
      "namespace": "dataGithubCodespacesOrganizationSecrets",
      "symbolId": "src/data-github-codespaces-organization-secrets/index:DataGithubCodespacesOrganizationSecretsSecrets"
    },
    "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecretsSecretsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecretsSecretsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-codespaces-organization-secrets/index.ts",
          "line": 91
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-codespaces-organization-secrets/index.ts",
        "line": 84
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 98
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecretsSecretsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubCodespacesOrganizationSecretsSecretsList",
      "namespace": "dataGithubCodespacesOrganizationSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 91
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 91
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 91
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-organization-secrets/index:DataGithubCodespacesOrganizationSecretsSecretsList"
    },
    "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecretsSecretsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecretsSecretsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-codespaces-organization-secrets/index.ts",
          "line": 44
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-codespaces-organization-secrets/index.ts",
        "line": 35
      },
      "name": "DataGithubCodespacesOrganizationSecretsSecretsOutputReference",
      "namespace": "dataGithubCodespacesOrganizationSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 64
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 69
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 74
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 79
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-organization-secrets/index.ts",
            "line": 48
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubCodespacesOrganizationSecrets.DataGithubCodespacesOrganizationSecretsSecrets"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-organization-secrets/index:DataGithubCodespacesOrganizationSecretsSecretsOutputReference"
    },
    "@cdktf/provider-github.dataGithubCodespacesPublicKey.DataGithubCodespacesPublicKey": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_public_key github_codespaces_public_key}."
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesPublicKey.DataGithubCodespacesPublicKey",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_public_key github_codespaces_public_key} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-codespaces-public-key/index.ts",
          "line": 63
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubCodespacesPublicKey.DataGithubCodespacesPublicKeyConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-codespaces-public-key/index.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubCodespacesPublicKey resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-public-key/index.ts",
            "line": 48
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubCodespacesPublicKey to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_public_key#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubCodespacesPublicKey that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubCodespacesPublicKey to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-public-key/index.ts",
            "line": 95
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-public-key/index.ts",
            "line": 130
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubCodespacesPublicKey",
      "namespace": "dataGithubCodespacesPublicKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-public-key/index.ts",
            "line": 36
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-public-key/index.ts",
            "line": 104
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-public-key/index.ts",
            "line": 109
          },
          "name": "keyId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-public-key/index.ts",
            "line": 99
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-public-key/index.ts",
            "line": 122
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-public-key/index.ts",
            "line": 89
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-public-key/index.ts",
            "line": 115
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-public-key/index:DataGithubCodespacesPublicKey"
    },
    "@cdktf/provider-github.dataGithubCodespacesPublicKey.DataGithubCodespacesPublicKeyConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesPublicKey.DataGithubCodespacesPublicKeyConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-codespaces-public-key/index.ts",
        "line": 14
      },
      "name": "DataGithubCodespacesPublicKeyConfig",
      "namespace": "dataGithubCodespacesPublicKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_public_key#repository DataGithubCodespacesPublicKey#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-public-key/index.ts",
            "line": 25
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_public_key#id DataGithubCodespacesPublicKey#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-public-key/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-public-key/index:DataGithubCodespacesPublicKeyConfig"
    },
    "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecrets": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_secrets github_codespaces_secrets}."
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecrets",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_secrets github_codespaces_secrets} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-codespaces-secrets/index.ts",
          "line": 145
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecretsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-codespaces-secrets/index.ts",
        "line": 113
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubCodespacesSecrets resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 130
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubCodespacesSecrets to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_secrets#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubCodespacesSecrets that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubCodespacesSecrets to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 178
          },
          "name": "resetFullName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 194
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 210
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 228
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubCodespacesSecrets",
      "namespace": "dataGithubCodespacesSecrets",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 118
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 220
          },
          "name": "secrets",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecretsSecretsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 182
          },
          "name": "fullNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 198
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 214
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 172
          },
          "name": "fullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 188
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 204
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-secrets/index:DataGithubCodespacesSecrets"
    },
    "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecretsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecretsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-codespaces-secrets/index.ts",
        "line": 14
      },
      "name": "DataGithubCodespacesSecretsConfig",
      "namespace": "dataGithubCodespacesSecrets",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_secrets#full_name DataGithubCodespacesSecrets#full_name}",
            "stability": "stable",
            "summary": "Full name of the repository (in `org/name` format)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 20
          },
          "name": "fullName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_secrets#id DataGithubCodespacesSecrets#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_secrets#name DataGithubCodespacesSecrets#name}",
            "stability": "stable",
            "summary": "The name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 33
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-secrets/index:DataGithubCodespacesSecretsConfig"
    },
    "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecretsSecrets": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecretsSecrets",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-codespaces-secrets/index.ts",
        "line": 35
      },
      "name": "DataGithubCodespacesSecretsSecrets",
      "namespace": "dataGithubCodespacesSecrets",
      "symbolId": "src/data-github-codespaces-secrets/index:DataGithubCodespacesSecretsSecrets"
    },
    "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecretsSecretsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecretsSecretsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-codespaces-secrets/index.ts",
          "line": 98
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-codespaces-secrets/index.ts",
        "line": 91
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 105
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecretsSecretsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubCodespacesSecretsSecretsList",
      "namespace": "dataGithubCodespacesSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 98
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 98
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 98
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-secrets/index:DataGithubCodespacesSecretsSecretsList"
    },
    "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecretsSecretsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecretsSecretsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-codespaces-secrets/index.ts",
          "line": 56
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-codespaces-secrets/index.ts",
        "line": 47
      },
      "name": "DataGithubCodespacesSecretsSecretsOutputReference",
      "namespace": "dataGithubCodespacesSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 76
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 81
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 86
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-secrets/index.ts",
            "line": 60
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubCodespacesSecrets.DataGithubCodespacesSecretsSecrets"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-secrets/index:DataGithubCodespacesSecretsSecretsOutputReference"
    },
    "@cdktf/provider-github.dataGithubCodespacesUserPublicKey.DataGithubCodespacesUserPublicKey": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_user_public_key github_codespaces_user_public_key}."
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesUserPublicKey.DataGithubCodespacesUserPublicKey",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_user_public_key github_codespaces_user_public_key} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-codespaces-user-public-key/index.ts",
          "line": 59
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubCodespacesUserPublicKey.DataGithubCodespacesUserPublicKeyConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-codespaces-user-public-key/index.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubCodespacesUserPublicKey resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-public-key/index.ts",
            "line": 44
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubCodespacesUserPublicKey to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_user_public_key#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubCodespacesUserPublicKey that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubCodespacesUserPublicKey to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-public-key/index.ts",
            "line": 90
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-public-key/index.ts",
            "line": 112
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubCodespacesUserPublicKey",
      "namespace": "dataGithubCodespacesUserPublicKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-public-key/index.ts",
            "line": 32
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-public-key/index.ts",
            "line": 99
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-public-key/index.ts",
            "line": 104
          },
          "name": "keyId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-public-key/index.ts",
            "line": 94
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-public-key/index.ts",
            "line": 84
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-user-public-key/index:DataGithubCodespacesUserPublicKey"
    },
    "@cdktf/provider-github.dataGithubCodespacesUserPublicKey.DataGithubCodespacesUserPublicKeyConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesUserPublicKey.DataGithubCodespacesUserPublicKeyConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-codespaces-user-public-key/index.ts",
        "line": 14
      },
      "name": "DataGithubCodespacesUserPublicKeyConfig",
      "namespace": "dataGithubCodespacesUserPublicKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_user_public_key#id DataGithubCodespacesUserPublicKey#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-public-key/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-user-public-key/index:DataGithubCodespacesUserPublicKeyConfig"
    },
    "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecrets": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_user_secrets github_codespaces_user_secrets}."
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecrets",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_user_secrets github_codespaces_user_secrets} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-codespaces-user-secrets/index.ts",
          "line": 138
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecretsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-codespaces-user-secrets/index.ts",
        "line": 106
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubCodespacesUserSecrets resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 123
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubCodespacesUserSecrets to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_user_secrets#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubCodespacesUserSecrets that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubCodespacesUserSecrets to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 169
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 187
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubCodespacesUserSecrets",
      "namespace": "dataGithubCodespacesUserSecrets",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 111
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 179
          },
          "name": "secrets",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecretsSecretsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 173
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 163
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-user-secrets/index:DataGithubCodespacesUserSecrets"
    },
    "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecretsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecretsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-codespaces-user-secrets/index.ts",
        "line": 14
      },
      "name": "DataGithubCodespacesUserSecretsConfig",
      "namespace": "dataGithubCodespacesUserSecrets",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/codespaces_user_secrets#id DataGithubCodespacesUserSecrets#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-user-secrets/index:DataGithubCodespacesUserSecretsConfig"
    },
    "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecretsSecrets": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecretsSecrets",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-codespaces-user-secrets/index.ts",
        "line": 23
      },
      "name": "DataGithubCodespacesUserSecretsSecrets",
      "namespace": "dataGithubCodespacesUserSecrets",
      "symbolId": "src/data-github-codespaces-user-secrets/index:DataGithubCodespacesUserSecretsSecrets"
    },
    "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecretsSecretsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecretsSecretsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-codespaces-user-secrets/index.ts",
          "line": 91
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-codespaces-user-secrets/index.ts",
        "line": 84
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 98
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecretsSecretsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubCodespacesUserSecretsSecretsList",
      "namespace": "dataGithubCodespacesUserSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 91
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 91
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 91
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-user-secrets/index:DataGithubCodespacesUserSecretsSecretsList"
    },
    "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecretsSecretsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecretsSecretsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-codespaces-user-secrets/index.ts",
          "line": 44
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-codespaces-user-secrets/index.ts",
        "line": 35
      },
      "name": "DataGithubCodespacesUserSecretsSecretsOutputReference",
      "namespace": "dataGithubCodespacesUserSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 64
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 69
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 74
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 79
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-codespaces-user-secrets/index.ts",
            "line": 48
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubCodespacesUserSecrets.DataGithubCodespacesUserSecretsSecrets"
          }
        }
      ],
      "symbolId": "src/data-github-codespaces-user-secrets/index:DataGithubCodespacesUserSecretsSecretsOutputReference"
    },
    "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaborators": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/collaborators github_collaborators}."
      },
      "fqn": "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaborators",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/collaborators github_collaborators} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-collaborators/index.ts",
          "line": 210
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaboratorsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-collaborators/index.ts",
        "line": 178
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubCollaborators resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 195
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubCollaborators to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/collaborators#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubCollaborators that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubCollaborators to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 244
          },
          "name": "resetAffiliation"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 266
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 304
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubCollaborators",
      "namespace": "dataGithubCollaborators",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 183
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 254
          },
          "name": "collaborator",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaboratorsCollaboratorList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 248
          },
          "name": "affiliationInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 270
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 283
          },
          "name": "ownerInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 296
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 238
          },
          "name": "affiliation",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 260
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 276
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 289
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-collaborators/index:DataGithubCollaborators"
    },
    "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaboratorsCollaborator": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaboratorsCollaborator",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-collaborators/index.ts",
        "line": 35
      },
      "name": "DataGithubCollaboratorsCollaborator",
      "namespace": "dataGithubCollaborators",
      "symbolId": "src/data-github-collaborators/index:DataGithubCollaboratorsCollaborator"
    },
    "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaboratorsCollaboratorList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaboratorsCollaboratorList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-collaborators/index.ts",
          "line": 163
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-collaborators/index.ts",
        "line": 156
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 170
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaboratorsCollaboratorOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubCollaboratorsCollaboratorList",
      "namespace": "dataGithubCollaborators",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 163
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 163
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 163
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-collaborators/index:DataGithubCollaboratorsCollaboratorList"
    },
    "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaboratorsCollaboratorOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaboratorsCollaboratorOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-collaborators/index.ts",
          "line": 56
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-collaborators/index.ts",
        "line": 47
      },
      "name": "DataGithubCollaboratorsCollaboratorOutputReference",
      "namespace": "dataGithubCollaborators",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 76
          },
          "name": "eventsUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 81
          },
          "name": "followersUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 86
          },
          "name": "followingUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 91
          },
          "name": "gistsUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 96
          },
          "name": "htmlUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 101
          },
          "name": "id",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 106
          },
          "name": "login",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 111
          },
          "name": "organizationsUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 116
          },
          "name": "permission",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 121
          },
          "name": "receivedEventsUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 126
          },
          "name": "reposUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 131
          },
          "name": "siteAdmin",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 136
          },
          "name": "starredUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 141
          },
          "name": "subscriptionsUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 146
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 151
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 60
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaboratorsCollaborator"
          }
        }
      ],
      "symbolId": "src/data-github-collaborators/index:DataGithubCollaboratorsCollaboratorOutputReference"
    },
    "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaboratorsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubCollaborators.DataGithubCollaboratorsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-collaborators/index.ts",
        "line": 14
      },
      "name": "DataGithubCollaboratorsConfig",
      "namespace": "dataGithubCollaborators",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/collaborators#owner DataGithubCollaborators#owner}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 29
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/collaborators#repository DataGithubCollaborators#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/collaborators#affiliation DataGithubCollaborators#affiliation}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 18
          },
          "name": "affiliation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/collaborators#id DataGithubCollaborators#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-collaborators/index.ts",
            "line": 25
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-collaborators/index:DataGithubCollaboratorsConfig"
    },
    "@cdktf/provider-github.dataGithubDependabotOrganizationPublicKey.DataGithubDependabotOrganizationPublicKey": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_organization_public_key github_dependabot_organization_public_key}."
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotOrganizationPublicKey.DataGithubDependabotOrganizationPublicKey",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_organization_public_key github_dependabot_organization_public_key} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-dependabot-organization-public-key/index.ts",
          "line": 59
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubDependabotOrganizationPublicKey.DataGithubDependabotOrganizationPublicKeyConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-dependabot-organization-public-key/index.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubDependabotOrganizationPublicKey resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-public-key/index.ts",
            "line": 44
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubDependabotOrganizationPublicKey to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_organization_public_key#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubDependabotOrganizationPublicKey that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubDependabotOrganizationPublicKey to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-public-key/index.ts",
            "line": 90
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-public-key/index.ts",
            "line": 112
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubDependabotOrganizationPublicKey",
      "namespace": "dataGithubDependabotOrganizationPublicKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-public-key/index.ts",
            "line": 32
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-public-key/index.ts",
            "line": 99
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-public-key/index.ts",
            "line": 104
          },
          "name": "keyId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-public-key/index.ts",
            "line": 94
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-public-key/index.ts",
            "line": 84
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-dependabot-organization-public-key/index:DataGithubDependabotOrganizationPublicKey"
    },
    "@cdktf/provider-github.dataGithubDependabotOrganizationPublicKey.DataGithubDependabotOrganizationPublicKeyConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotOrganizationPublicKey.DataGithubDependabotOrganizationPublicKeyConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-dependabot-organization-public-key/index.ts",
        "line": 14
      },
      "name": "DataGithubDependabotOrganizationPublicKeyConfig",
      "namespace": "dataGithubDependabotOrganizationPublicKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_organization_public_key#id DataGithubDependabotOrganizationPublicKey#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-public-key/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-dependabot-organization-public-key/index:DataGithubDependabotOrganizationPublicKeyConfig"
    },
    "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecrets": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_organization_secrets github_dependabot_organization_secrets}."
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecrets",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_organization_secrets github_dependabot_organization_secrets} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-dependabot-organization-secrets/index.ts",
          "line": 138
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecretsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-dependabot-organization-secrets/index.ts",
        "line": 106
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubDependabotOrganizationSecrets resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 123
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubDependabotOrganizationSecrets to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_organization_secrets#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubDependabotOrganizationSecrets that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubDependabotOrganizationSecrets to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 169
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 187
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubDependabotOrganizationSecrets",
      "namespace": "dataGithubDependabotOrganizationSecrets",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 111
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 179
          },
          "name": "secrets",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecretsSecretsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 173
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 163
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-dependabot-organization-secrets/index:DataGithubDependabotOrganizationSecrets"
    },
    "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecretsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecretsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-dependabot-organization-secrets/index.ts",
        "line": 14
      },
      "name": "DataGithubDependabotOrganizationSecretsConfig",
      "namespace": "dataGithubDependabotOrganizationSecrets",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_organization_secrets#id DataGithubDependabotOrganizationSecrets#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-dependabot-organization-secrets/index:DataGithubDependabotOrganizationSecretsConfig"
    },
    "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecretsSecrets": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecretsSecrets",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-dependabot-organization-secrets/index.ts",
        "line": 23
      },
      "name": "DataGithubDependabotOrganizationSecretsSecrets",
      "namespace": "dataGithubDependabotOrganizationSecrets",
      "symbolId": "src/data-github-dependabot-organization-secrets/index:DataGithubDependabotOrganizationSecretsSecrets"
    },
    "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecretsSecretsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecretsSecretsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-dependabot-organization-secrets/index.ts",
          "line": 91
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-dependabot-organization-secrets/index.ts",
        "line": 84
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 98
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecretsSecretsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubDependabotOrganizationSecretsSecretsList",
      "namespace": "dataGithubDependabotOrganizationSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 91
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 91
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 91
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-dependabot-organization-secrets/index:DataGithubDependabotOrganizationSecretsSecretsList"
    },
    "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecretsSecretsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecretsSecretsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-dependabot-organization-secrets/index.ts",
          "line": 44
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-dependabot-organization-secrets/index.ts",
        "line": 35
      },
      "name": "DataGithubDependabotOrganizationSecretsSecretsOutputReference",
      "namespace": "dataGithubDependabotOrganizationSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 64
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 69
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 74
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 79
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-organization-secrets/index.ts",
            "line": 48
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubDependabotOrganizationSecrets.DataGithubDependabotOrganizationSecretsSecrets"
          }
        }
      ],
      "symbolId": "src/data-github-dependabot-organization-secrets/index:DataGithubDependabotOrganizationSecretsSecretsOutputReference"
    },
    "@cdktf/provider-github.dataGithubDependabotPublicKey.DataGithubDependabotPublicKey": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_public_key github_dependabot_public_key}."
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotPublicKey.DataGithubDependabotPublicKey",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_public_key github_dependabot_public_key} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-dependabot-public-key/index.ts",
          "line": 63
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubDependabotPublicKey.DataGithubDependabotPublicKeyConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-dependabot-public-key/index.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubDependabotPublicKey resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-public-key/index.ts",
            "line": 48
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubDependabotPublicKey to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_public_key#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubDependabotPublicKey that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubDependabotPublicKey to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-public-key/index.ts",
            "line": 95
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-public-key/index.ts",
            "line": 130
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubDependabotPublicKey",
      "namespace": "dataGithubDependabotPublicKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-public-key/index.ts",
            "line": 36
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-public-key/index.ts",
            "line": 104
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-public-key/index.ts",
            "line": 109
          },
          "name": "keyId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-public-key/index.ts",
            "line": 99
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-public-key/index.ts",
            "line": 122
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-public-key/index.ts",
            "line": 89
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-public-key/index.ts",
            "line": 115
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-dependabot-public-key/index:DataGithubDependabotPublicKey"
    },
    "@cdktf/provider-github.dataGithubDependabotPublicKey.DataGithubDependabotPublicKeyConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotPublicKey.DataGithubDependabotPublicKeyConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-dependabot-public-key/index.ts",
        "line": 14
      },
      "name": "DataGithubDependabotPublicKeyConfig",
      "namespace": "dataGithubDependabotPublicKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_public_key#repository DataGithubDependabotPublicKey#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-public-key/index.ts",
            "line": 25
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_public_key#id DataGithubDependabotPublicKey#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-public-key/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-dependabot-public-key/index:DataGithubDependabotPublicKeyConfig"
    },
    "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecrets": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_secrets github_dependabot_secrets}."
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecrets",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_secrets github_dependabot_secrets} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-dependabot-secrets/index.ts",
          "line": 141
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecretsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-dependabot-secrets/index.ts",
        "line": 109
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubDependabotSecrets resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 126
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubDependabotSecrets to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_secrets#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubDependabotSecrets that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubDependabotSecrets to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 174
          },
          "name": "resetFullName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 190
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 206
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 224
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubDependabotSecrets",
      "namespace": "dataGithubDependabotSecrets",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 114
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 216
          },
          "name": "secrets",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecretsSecretsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 178
          },
          "name": "fullNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 194
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 210
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 168
          },
          "name": "fullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 184
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 200
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-dependabot-secrets/index:DataGithubDependabotSecrets"
    },
    "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecretsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecretsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-dependabot-secrets/index.ts",
        "line": 14
      },
      "name": "DataGithubDependabotSecretsConfig",
      "namespace": "dataGithubDependabotSecrets",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_secrets#full_name DataGithubDependabotSecrets#full_name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 18
          },
          "name": "fullName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_secrets#id DataGithubDependabotSecrets#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 25
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/dependabot_secrets#name DataGithubDependabotSecrets#name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 29
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-dependabot-secrets/index:DataGithubDependabotSecretsConfig"
    },
    "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecretsSecrets": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecretsSecrets",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-dependabot-secrets/index.ts",
        "line": 31
      },
      "name": "DataGithubDependabotSecretsSecrets",
      "namespace": "dataGithubDependabotSecrets",
      "symbolId": "src/data-github-dependabot-secrets/index:DataGithubDependabotSecretsSecrets"
    },
    "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecretsSecretsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecretsSecretsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-dependabot-secrets/index.ts",
          "line": 94
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-dependabot-secrets/index.ts",
        "line": 87
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 101
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecretsSecretsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubDependabotSecretsSecretsList",
      "namespace": "dataGithubDependabotSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 94
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 94
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 94
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-dependabot-secrets/index:DataGithubDependabotSecretsSecretsList"
    },
    "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecretsSecretsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecretsSecretsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-dependabot-secrets/index.ts",
          "line": 52
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-dependabot-secrets/index.ts",
        "line": 43
      },
      "name": "DataGithubDependabotSecretsSecretsOutputReference",
      "namespace": "dataGithubDependabotSecrets",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 72
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 77
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 82
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-dependabot-secrets/index.ts",
            "line": 56
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubDependabotSecrets.DataGithubDependabotSecretsSecrets"
          }
        }
      ],
      "symbolId": "src/data-github-dependabot-secrets/index:DataGithubDependabotSecretsSecretsOutputReference"
    },
    "@cdktf/provider-github.dataGithubEnterprise.DataGithubEnterprise": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/enterprise github_enterprise}."
      },
      "fqn": "@cdktf/provider-github.dataGithubEnterprise.DataGithubEnterprise",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/enterprise github_enterprise} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-enterprise/index.ts",
          "line": 63
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubEnterprise.DataGithubEnterpriseConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-enterprise/index.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubEnterprise resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 48
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubEnterprise to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/enterprise#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubEnterprise that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubEnterprise to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 105
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 140
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubEnterprise",
      "namespace": "dataGithubEnterprise",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 36
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 88
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 93
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 114
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 132
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 109
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 127
          },
          "name": "slugInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 99
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 120
          },
          "name": "slug",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-enterprise/index:DataGithubEnterprise"
    },
    "@cdktf/provider-github.dataGithubEnterprise.DataGithubEnterpriseConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubEnterprise.DataGithubEnterpriseConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-enterprise/index.ts",
        "line": 14
      },
      "name": "DataGithubEnterpriseConfig",
      "namespace": "dataGithubEnterprise",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/enterprise#slug DataGithubEnterprise#slug}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 25
          },
          "name": "slug",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/enterprise#id DataGithubEnterprise#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-enterprise/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-enterprise/index:DataGithubEnterpriseConfig"
    },
    "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroups": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/external_groups github_external_groups}."
      },
      "fqn": "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroups",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/external_groups github_external_groups} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-external-groups/index.ts",
          "line": 133
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroupsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-external-groups/index.ts",
        "line": 101
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubExternalGroups resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 118
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubExternalGroups to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/external_groups#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubExternalGroups that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubExternalGroups to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 170
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 182
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubExternalGroups",
      "namespace": "dataGithubExternalGroups",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 106
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 158
          },
          "name": "externalGroups",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroupsExternalGroupsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 174
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 164
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-external-groups/index:DataGithubExternalGroups"
    },
    "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroupsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroupsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-external-groups/index.ts",
        "line": 14
      },
      "name": "DataGithubExternalGroupsConfig",
      "namespace": "dataGithubExternalGroups",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/external_groups#id DataGithubExternalGroups#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-external-groups/index:DataGithubExternalGroupsConfig"
    },
    "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroupsExternalGroups": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroupsExternalGroups",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-external-groups/index.ts",
        "line": 23
      },
      "name": "DataGithubExternalGroupsExternalGroups",
      "namespace": "dataGithubExternalGroups",
      "symbolId": "src/data-github-external-groups/index:DataGithubExternalGroupsExternalGroups"
    },
    "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroupsExternalGroupsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroupsExternalGroupsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-external-groups/index.ts",
          "line": 86
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-external-groups/index.ts",
        "line": 79
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 93
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroupsExternalGroupsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubExternalGroupsExternalGroupsList",
      "namespace": "dataGithubExternalGroups",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 86
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 86
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 86
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-external-groups/index:DataGithubExternalGroupsExternalGroupsList"
    },
    "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroupsExternalGroupsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroupsExternalGroupsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-external-groups/index.ts",
          "line": 44
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-external-groups/index.ts",
        "line": 35
      },
      "name": "DataGithubExternalGroupsExternalGroupsOutputReference",
      "namespace": "dataGithubExternalGroups",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 64
          },
          "name": "groupId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 69
          },
          "name": "groupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 74
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-external-groups/index.ts",
            "line": 48
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubExternalGroups.DataGithubExternalGroupsExternalGroups"
          }
        }
      ],
      "symbolId": "src/data-github-external-groups/index:DataGithubExternalGroupsExternalGroupsOutputReference"
    },
    "@cdktf/provider-github.dataGithubIpRanges.DataGithubIpRanges": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ip_ranges github_ip_ranges}."
      },
      "fqn": "@cdktf/provider-github.dataGithubIpRanges.DataGithubIpRanges",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ip_ranges github_ip_ranges} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-ip-ranges/index.ts",
          "line": 59
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubIpRanges.DataGithubIpRangesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-ip-ranges/index.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubIpRanges resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 44
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubIpRanges to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ip_ranges#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubIpRanges that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubIpRanges to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 165
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 222
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubIpRanges",
      "namespace": "dataGithubIpRanges",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 32
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 83
          },
          "name": "actions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 88
          },
          "name": "actionsIpv4",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 93
          },
          "name": "actionsIpv6",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 98
          },
          "name": "api",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 103
          },
          "name": "apiIpv4",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 108
          },
          "name": "apiIpv6",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 113
          },
          "name": "dependabot",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 118
          },
          "name": "dependabotIpv4",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 123
          },
          "name": "dependabotIpv6",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 128
          },
          "name": "git",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 133
          },
          "name": "gitIpv4",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 138
          },
          "name": "gitIpv6",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 143
          },
          "name": "hooks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 148
          },
          "name": "hooksIpv4",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 153
          },
          "name": "hooksIpv6",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 174
          },
          "name": "importer",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 179
          },
          "name": "importerIpv4",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 184
          },
          "name": "importerIpv6",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 189
          },
          "name": "pages",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 194
          },
          "name": "pagesIpv4",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 199
          },
          "name": "pagesIpv6",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 204
          },
          "name": "web",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 209
          },
          "name": "webIpv4",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 214
          },
          "name": "webIpv6",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 169
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 159
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-ip-ranges/index:DataGithubIpRanges"
    },
    "@cdktf/provider-github.dataGithubIpRanges.DataGithubIpRangesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubIpRanges.DataGithubIpRangesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-ip-ranges/index.ts",
        "line": 14
      },
      "name": "DataGithubIpRangesConfig",
      "namespace": "dataGithubIpRanges",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ip_ranges#id DataGithubIpRanges#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ip-ranges/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-ip-ranges/index:DataGithubIpRangesConfig"
    },
    "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabels": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/issue_labels github_issue_labels}."
      },
      "fqn": "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabels",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/issue_labels github_issue_labels} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-issue-labels/index.ts",
          "line": 142
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabelsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-issue-labels/index.ts",
        "line": 110
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubIssueLabels resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 127
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubIssueLabels to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/issue_labels#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubIssueLabels that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubIssueLabels to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 174
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 205
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubIssueLabels",
      "namespace": "dataGithubIssueLabels",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 115
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 184
          },
          "name": "labels",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabelsLabelsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 178
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 197
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 168
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 190
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-issue-labels/index:DataGithubIssueLabels"
    },
    "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabelsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabelsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-issue-labels/index.ts",
        "line": 14
      },
      "name": "DataGithubIssueLabelsConfig",
      "namespace": "dataGithubIssueLabels",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/issue_labels#repository DataGithubIssueLabels#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 25
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/issue_labels#id DataGithubIssueLabels#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-issue-labels/index:DataGithubIssueLabelsConfig"
    },
    "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabelsLabels": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabelsLabels",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-issue-labels/index.ts",
        "line": 27
      },
      "name": "DataGithubIssueLabelsLabels",
      "namespace": "dataGithubIssueLabels",
      "symbolId": "src/data-github-issue-labels/index:DataGithubIssueLabelsLabels"
    },
    "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabelsLabelsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabelsLabelsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-issue-labels/index.ts",
          "line": 95
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-issue-labels/index.ts",
        "line": 88
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 102
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabelsLabelsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubIssueLabelsLabelsList",
      "namespace": "dataGithubIssueLabels",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 95
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 95
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 95
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-issue-labels/index:DataGithubIssueLabelsLabelsList"
    },
    "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabelsLabelsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabelsLabelsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-issue-labels/index.ts",
          "line": 48
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-issue-labels/index.ts",
        "line": 39
      },
      "name": "DataGithubIssueLabelsLabelsOutputReference",
      "namespace": "dataGithubIssueLabels",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 68
          },
          "name": "color",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 73
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 78
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 83
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-issue-labels/index.ts",
            "line": 52
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubIssueLabels.DataGithubIssueLabelsLabels"
          }
        }
      ],
      "symbolId": "src/data-github-issue-labels/index:DataGithubIssueLabelsLabelsOutputReference"
    },
    "@cdktf/provider-github.dataGithubMembership.DataGithubMembership": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/membership github_membership}."
      },
      "fqn": "@cdktf/provider-github.dataGithubMembership.DataGithubMembership",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/membership github_membership} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-membership/index.ts",
          "line": 67
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubMembership.DataGithubMembershipConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-membership/index.ts",
        "line": 35
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubMembership resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 52
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubMembership to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/membership#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubMembership that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubMembership to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 105
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 121
          },
          "name": "resetOrganization"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 156
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubMembership",
      "namespace": "dataGithubMembership",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 40
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 93
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 130
          },
          "name": "role",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 135
          },
          "name": "state",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 109
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 125
          },
          "name": "organizationInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 148
          },
          "name": "usernameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 99
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 115
          },
          "name": "organization",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 141
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-membership/index:DataGithubMembership"
    },
    "@cdktf/provider-github.dataGithubMembership.DataGithubMembershipConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubMembership.DataGithubMembershipConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-membership/index.ts",
        "line": 14
      },
      "name": "DataGithubMembershipConfig",
      "namespace": "dataGithubMembership",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/membership#username DataGithubMembership#username}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 29
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/membership#id DataGithubMembership#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/membership#organization DataGithubMembership#organization}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-membership/index.ts",
            "line": 25
          },
          "name": "organization",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-membership/index:DataGithubMembershipConfig"
    },
    "@cdktf/provider-github.dataGithubOrganization.DataGithubOrganization": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization github_organization}."
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganization.DataGithubOrganization",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization github_organization} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-organization/index.ts",
          "line": 63
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubOrganization.DataGithubOrganizationConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization/index.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubOrganization resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 48
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubOrganization to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubOrganization that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubOrganization to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 125
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 251
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubOrganization",
      "namespace": "dataGithubOrganization",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 36
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 88
          },
          "name": "advancedSecurityEnabledForNewRepositories",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 93
          },
          "name": "defaultRepositoryPermission",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 98
          },
          "name": "dependabotAlertsEnabledForNewRepositories",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 103
          },
          "name": "dependabotSecurityUpdatesEnabledForNewRepositories",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 108
          },
          "name": "dependencyGraphEnabledForNewRepositories",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 113
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 134
          },
          "name": "login",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 139
          },
          "name": "members",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 144
          },
          "name": "membersAllowedRepositoryCreationType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 149
          },
          "name": "membersCanCreateInternalRepositories",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 154
          },
          "name": "membersCanCreatePages",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 159
          },
          "name": "membersCanCreatePrivatePages",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 164
          },
          "name": "membersCanCreatePrivateRepositories",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 169
          },
          "name": "membersCanCreatePublicPages",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 174
          },
          "name": "membersCanCreatePublicRepositories",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 179
          },
          "name": "membersCanCreateRepositories",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 184
          },
          "name": "membersCanForkPrivateRepositories",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 202
          },
          "name": "nodeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 207
          },
          "name": "orgname",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 212
          },
          "name": "plan",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 217
          },
          "name": "repositories",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 222
          },
          "name": "secretScanningEnabledForNewRepositories",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 227
          },
          "name": "secretScanningPushProtectionEnabledForNewRepositories",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 232
          },
          "name": "twoFactorRequirementEnabled",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 238
          },
          "name": "users",
          "type": {
            "fqn": "cdktf.StringMapList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 243
          },
          "name": "webCommitSignoffRequired",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 129
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 197
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 119
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 190
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-organization/index:DataGithubOrganization"
    },
    "@cdktf/provider-github.dataGithubOrganization.DataGithubOrganizationConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganization.DataGithubOrganizationConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-organization/index.ts",
        "line": 14
      },
      "name": "DataGithubOrganizationConfig",
      "namespace": "dataGithubOrganization",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization#name DataGithubOrganization#name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 25
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization#id DataGithubOrganization#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-organization/index:DataGithubOrganizationConfig"
    },
    "@cdktf/provider-github.dataGithubOrganizationCustomRole.DataGithubOrganizationCustomRole": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_custom_role github_organization_custom_role}."
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationCustomRole.DataGithubOrganizationCustomRole",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_custom_role github_organization_custom_role} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-organization-custom-role/index.ts",
          "line": 63
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubOrganizationCustomRole.DataGithubOrganizationCustomRoleConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-custom-role/index.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubOrganizationCustomRole resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-custom-role/index.ts",
            "line": 48
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubOrganizationCustomRole to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_custom_role#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubOrganizationCustomRole that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubOrganizationCustomRole to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-custom-role/index.ts",
            "line": 105
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-custom-role/index.ts",
            "line": 135
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubOrganizationCustomRole",
      "namespace": "dataGithubOrganizationCustomRole",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-custom-role/index.ts",
            "line": 36
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-custom-role/index.ts",
            "line": 88
          },
          "name": "baseRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-custom-role/index.ts",
            "line": 93
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-custom-role/index.ts",
            "line": 127
          },
          "name": "permissions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-custom-role/index.ts",
            "line": 109
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-custom-role/index.ts",
            "line": 122
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-custom-role/index.ts",
            "line": 99
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-custom-role/index.ts",
            "line": 115
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-organization-custom-role/index:DataGithubOrganizationCustomRole"
    },
    "@cdktf/provider-github.dataGithubOrganizationCustomRole.DataGithubOrganizationCustomRoleConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationCustomRole.DataGithubOrganizationCustomRoleConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-organization-custom-role/index.ts",
        "line": 14
      },
      "name": "DataGithubOrganizationCustomRoleConfig",
      "namespace": "dataGithubOrganizationCustomRole",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_custom_role#name DataGithubOrganizationCustomRole#name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-custom-role/index.ts",
            "line": 25
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_custom_role#id DataGithubOrganizationCustomRole#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-custom-role/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-organization-custom-role/index:DataGithubOrganizationCustomRoleConfig"
    },
    "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentities": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_external_identities github_organization_external_identities}."
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentities",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_external_identities github_organization_external_identities} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-organization-external-identities/index.ts",
          "line": 135
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentitiesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-external-identities/index.ts",
        "line": 103
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubOrganizationExternalIdentities resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 120
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubOrganizationExternalIdentities to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_external_identities#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubOrganizationExternalIdentities that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubOrganizationExternalIdentities to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 166
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 184
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubOrganizationExternalIdentities",
      "namespace": "dataGithubOrganizationExternalIdentities",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 108
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 176
          },
          "name": "identities",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentitiesIdentitiesList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 170
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 160
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-organization-external-identities/index:DataGithubOrganizationExternalIdentities"
    },
    "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentitiesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentitiesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-organization-external-identities/index.ts",
        "line": 14
      },
      "name": "DataGithubOrganizationExternalIdentitiesConfig",
      "namespace": "dataGithubOrganizationExternalIdentities",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_external_identities#id DataGithubOrganizationExternalIdentities#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-organization-external-identities/index:DataGithubOrganizationExternalIdentitiesConfig"
    },
    "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentitiesIdentities": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentitiesIdentities",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-organization-external-identities/index.ts",
        "line": 23
      },
      "name": "DataGithubOrganizationExternalIdentitiesIdentities",
      "namespace": "dataGithubOrganizationExternalIdentities",
      "symbolId": "src/data-github-organization-external-identities/index:DataGithubOrganizationExternalIdentitiesIdentities"
    },
    "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentitiesIdentitiesList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentitiesIdentitiesList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-organization-external-identities/index.ts",
          "line": 88
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-external-identities/index.ts",
        "line": 81
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 95
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentitiesIdentitiesOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubOrganizationExternalIdentitiesIdentitiesList",
      "namespace": "dataGithubOrganizationExternalIdentities",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 88
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 88
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 88
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-organization-external-identities/index:DataGithubOrganizationExternalIdentitiesIdentitiesList"
    },
    "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentitiesIdentitiesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentitiesIdentitiesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-organization-external-identities/index.ts",
          "line": 44
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-external-identities/index.ts",
        "line": 35
      },
      "name": "DataGithubOrganizationExternalIdentitiesIdentitiesOutputReference",
      "namespace": "dataGithubOrganizationExternalIdentities",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 64
          },
          "name": "login",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 70
          },
          "name": "samlIdentity",
          "type": {
            "fqn": "cdktf.StringMap"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 76
          },
          "name": "scimIdentity",
          "type": {
            "fqn": "cdktf.StringMap"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-external-identities/index.ts",
            "line": 48
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubOrganizationExternalIdentities.DataGithubOrganizationExternalIdentitiesIdentities"
          }
        }
      ],
      "symbolId": "src/data-github-organization-external-identities/index:DataGithubOrganizationExternalIdentitiesIdentitiesOutputReference"
    },
    "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_ip_allow_list github_organization_ip_allow_list}."
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_ip_allow_list github_organization_ip_allow_list} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-organization-ip-allow-list/index.ts",
          "line": 148
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowListConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-ip-allow-list/index.ts",
        "line": 116
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubOrganizationIpAllowList resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 133
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubOrganizationIpAllowList to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_ip_allow_list#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubOrganizationIpAllowList that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubOrganizationIpAllowList to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 179
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 197
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubOrganizationIpAllowList",
      "namespace": "dataGithubOrganizationIpAllowList",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 121
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 189
          },
          "name": "ipAllowList",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowListIpAllowListStructList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 183
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 173
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-organization-ip-allow-list/index:DataGithubOrganizationIpAllowList"
    },
    "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowListConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowListConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-organization-ip-allow-list/index.ts",
        "line": 14
      },
      "name": "DataGithubOrganizationIpAllowListConfig",
      "namespace": "dataGithubOrganizationIpAllowList",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_ip_allow_list#id DataGithubOrganizationIpAllowList#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-organization-ip-allow-list/index:DataGithubOrganizationIpAllowListConfig"
    },
    "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowListIpAllowListStruct": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowListIpAllowListStruct",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-organization-ip-allow-list/index.ts",
        "line": 23
      },
      "name": "DataGithubOrganizationIpAllowListIpAllowListStruct",
      "namespace": "dataGithubOrganizationIpAllowList",
      "symbolId": "src/data-github-organization-ip-allow-list/index:DataGithubOrganizationIpAllowListIpAllowListStruct"
    },
    "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowListIpAllowListStructList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowListIpAllowListStructList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-organization-ip-allow-list/index.ts",
          "line": 101
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-ip-allow-list/index.ts",
        "line": 94
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 108
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowListIpAllowListStructOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubOrganizationIpAllowListIpAllowListStructList",
      "namespace": "dataGithubOrganizationIpAllowList",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 101
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 101
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 101
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-organization-ip-allow-list/index:DataGithubOrganizationIpAllowListIpAllowListStructList"
    },
    "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowListIpAllowListStructOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowListIpAllowListStructOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-organization-ip-allow-list/index.ts",
          "line": 44
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-ip-allow-list/index.ts",
        "line": 35
      },
      "name": "DataGithubOrganizationIpAllowListIpAllowListStructOutputReference",
      "namespace": "dataGithubOrganizationIpAllowList",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 64
          },
          "name": "allowListValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 69
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 74
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 79
          },
          "name": "isActive",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 84
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 89
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-ip-allow-list/index.ts",
            "line": 48
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubOrganizationIpAllowList.DataGithubOrganizationIpAllowListIpAllowListStruct"
          }
        }
      ],
      "symbolId": "src/data-github-organization-ip-allow-list/index:DataGithubOrganizationIpAllowListIpAllowListStructOutputReference"
    },
    "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroups": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_team_sync_groups github_organization_team_sync_groups}."
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroups",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_team_sync_groups github_organization_team_sync_groups} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-organization-team-sync-groups/index.ts",
          "line": 133
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroupsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-team-sync-groups/index.ts",
        "line": 101
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubOrganizationTeamSyncGroups resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 118
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubOrganizationTeamSyncGroups to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_team_sync_groups#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubOrganizationTeamSyncGroups that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubOrganizationTeamSyncGroups to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 170
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 182
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubOrganizationTeamSyncGroups",
      "namespace": "dataGithubOrganizationTeamSyncGroups",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 106
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 158
          },
          "name": "groups",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroupsGroupsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 174
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 164
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-organization-team-sync-groups/index:DataGithubOrganizationTeamSyncGroups"
    },
    "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroupsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroupsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-organization-team-sync-groups/index.ts",
        "line": 14
      },
      "name": "DataGithubOrganizationTeamSyncGroupsConfig",
      "namespace": "dataGithubOrganizationTeamSyncGroups",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_team_sync_groups#id DataGithubOrganizationTeamSyncGroups#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-organization-team-sync-groups/index:DataGithubOrganizationTeamSyncGroupsConfig"
    },
    "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroupsGroups": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroupsGroups",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-organization-team-sync-groups/index.ts",
        "line": 23
      },
      "name": "DataGithubOrganizationTeamSyncGroupsGroups",
      "namespace": "dataGithubOrganizationTeamSyncGroups",
      "symbolId": "src/data-github-organization-team-sync-groups/index:DataGithubOrganizationTeamSyncGroupsGroups"
    },
    "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroupsGroupsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroupsGroupsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-organization-team-sync-groups/index.ts",
          "line": 86
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-team-sync-groups/index.ts",
        "line": 79
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 93
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroupsGroupsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubOrganizationTeamSyncGroupsGroupsList",
      "namespace": "dataGithubOrganizationTeamSyncGroups",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 86
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 86
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 86
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-organization-team-sync-groups/index:DataGithubOrganizationTeamSyncGroupsGroupsList"
    },
    "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroupsGroupsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroupsGroupsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-organization-team-sync-groups/index.ts",
          "line": 44
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-team-sync-groups/index.ts",
        "line": 35
      },
      "name": "DataGithubOrganizationTeamSyncGroupsGroupsOutputReference",
      "namespace": "dataGithubOrganizationTeamSyncGroups",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 64
          },
          "name": "groupDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 69
          },
          "name": "groupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 74
          },
          "name": "groupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-team-sync-groups/index.ts",
            "line": 48
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubOrganizationTeamSyncGroups.DataGithubOrganizationTeamSyncGroupsGroups"
          }
        }
      ],
      "symbolId": "src/data-github-organization-team-sync-groups/index:DataGithubOrganizationTeamSyncGroupsGroupsOutputReference"
    },
    "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeams": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_teams github_organization_teams}."
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeams",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_teams github_organization_teams} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-organization-teams/index.ts",
          "line": 176
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeamsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-teams/index.ts",
        "line": 144
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubOrganizationTeams resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 161
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubOrganizationTeams to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_teams#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubOrganizationTeams that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubOrganizationTeams to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 210
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 226
          },
          "name": "resetResultsPerPage"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 242
          },
          "name": "resetRootTeamsOnly"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 258
          },
          "name": "resetSummaryOnly"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 276
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubOrganizationTeams",
      "namespace": "dataGithubOrganizationTeams",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 149
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 268
          },
          "name": "teams",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeamsTeamsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 214
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 230
          },
          "name": "resultsPerPageInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 246
          },
          "name": "rootTeamsOnlyInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 262
          },
          "name": "summaryOnlyInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 204
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 220
          },
          "name": "resultsPerPage",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 236
          },
          "name": "rootTeamsOnly",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 252
          },
          "name": "summaryOnly",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/data-github-organization-teams/index:DataGithubOrganizationTeams"
    },
    "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeamsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeamsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-organization-teams/index.ts",
        "line": 14
      },
      "name": "DataGithubOrganizationTeamsConfig",
      "namespace": "dataGithubOrganizationTeams",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_teams#id DataGithubOrganizationTeams#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_teams#results_per_page DataGithubOrganizationTeams#results_per_page}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 25
          },
          "name": "resultsPerPage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_teams#root_teams_only DataGithubOrganizationTeams#root_teams_only}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 29
          },
          "name": "rootTeamsOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_teams#summary_only DataGithubOrganizationTeams#summary_only}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 33
          },
          "name": "summaryOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/data-github-organization-teams/index:DataGithubOrganizationTeamsConfig"
    },
    "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeamsTeams": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeamsTeams",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-organization-teams/index.ts",
        "line": 35
      },
      "name": "DataGithubOrganizationTeamsTeams",
      "namespace": "dataGithubOrganizationTeams",
      "symbolId": "src/data-github-organization-teams/index:DataGithubOrganizationTeamsTeams"
    },
    "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeamsTeamsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeamsTeamsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-organization-teams/index.ts",
          "line": 129
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-teams/index.ts",
        "line": 122
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 136
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeamsTeamsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubOrganizationTeamsTeamsList",
      "namespace": "dataGithubOrganizationTeams",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 129
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 129
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 129
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-organization-teams/index:DataGithubOrganizationTeamsTeamsList"
    },
    "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeamsTeamsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeamsTeamsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-organization-teams/index.ts",
          "line": 56
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-teams/index.ts",
        "line": 47
      },
      "name": "DataGithubOrganizationTeamsTeamsOutputReference",
      "namespace": "dataGithubOrganizationTeams",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 76
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 81
          },
          "name": "id",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 86
          },
          "name": "members",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 91
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 96
          },
          "name": "nodeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 102
          },
          "name": "parent",
          "type": {
            "fqn": "cdktf.StringMap"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 107
          },
          "name": "privacy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 112
          },
          "name": "repositories",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 117
          },
          "name": "slug",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-teams/index.ts",
            "line": 60
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubOrganizationTeams.DataGithubOrganizationTeamsTeams"
          }
        }
      ],
      "symbolId": "src/data-github-organization-teams/index:DataGithubOrganizationTeamsTeamsOutputReference"
    },
    "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooks": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_webhooks github_organization_webhooks}."
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooks",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_webhooks github_organization_webhooks} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-organization-webhooks/index.ts",
          "line": 143
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooksConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-webhooks/index.ts",
        "line": 111
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubOrganizationWebhooks resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 128
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubOrganizationWebhooks to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_webhooks#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubOrganizationWebhooks that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubOrganizationWebhooks to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 174
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 192
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubOrganizationWebhooks",
      "namespace": "dataGithubOrganizationWebhooks",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 116
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 184
          },
          "name": "webhooks",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooksWebhooksList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 178
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 168
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-organization-webhooks/index:DataGithubOrganizationWebhooks"
    },
    "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooksConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooksConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-organization-webhooks/index.ts",
        "line": 14
      },
      "name": "DataGithubOrganizationWebhooksConfig",
      "namespace": "dataGithubOrganizationWebhooks",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/organization_webhooks#id DataGithubOrganizationWebhooks#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-organization-webhooks/index:DataGithubOrganizationWebhooksConfig"
    },
    "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooksWebhooks": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooksWebhooks",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-organization-webhooks/index.ts",
        "line": 23
      },
      "name": "DataGithubOrganizationWebhooksWebhooks",
      "namespace": "dataGithubOrganizationWebhooks",
      "symbolId": "src/data-github-organization-webhooks/index:DataGithubOrganizationWebhooksWebhooks"
    },
    "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooksWebhooksList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooksWebhooksList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-organization-webhooks/index.ts",
          "line": 96
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-webhooks/index.ts",
        "line": 89
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 103
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooksWebhooksOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubOrganizationWebhooksWebhooksList",
      "namespace": "dataGithubOrganizationWebhooks",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 96
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 96
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 96
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-organization-webhooks/index:DataGithubOrganizationWebhooksWebhooksList"
    },
    "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooksWebhooksOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooksWebhooksOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-organization-webhooks/index.ts",
          "line": 44
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-organization-webhooks/index.ts",
        "line": 35
      },
      "name": "DataGithubOrganizationWebhooksWebhooksOutputReference",
      "namespace": "dataGithubOrganizationWebhooks",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 64
          },
          "name": "active",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 69
          },
          "name": "id",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 74
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 79
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 84
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-organization-webhooks/index.ts",
            "line": 48
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubOrganizationWebhooks.DataGithubOrganizationWebhooksWebhooks"
          }
        }
      ],
      "symbolId": "src/data-github-organization-webhooks/index:DataGithubOrganizationWebhooksWebhooksOutputReference"
    },
    "@cdktf/provider-github.dataGithubRef.DataGithubRef": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ref github_ref}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRef.DataGithubRef",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ref github_ref} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-ref/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRef.DataGithubRefConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-ref/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRef resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRef to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ref#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRef that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRef to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 110
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 126
          },
          "name": "resetOwner"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 169
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRef",
      "namespace": "dataGithubRef",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 98
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 161
          },
          "name": "sha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 114
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 130
          },
          "name": "ownerInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 143
          },
          "name": "refInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 156
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 104
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 120
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 136
          },
          "name": "ref",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 149
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-ref/index:DataGithubRef"
    },
    "@cdktf/provider-github.dataGithubRef.DataGithubRefConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRef.DataGithubRefConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-ref/index.ts",
        "line": 14
      },
      "name": "DataGithubRefConfig",
      "namespace": "dataGithubRef",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ref#ref DataGithubRef#ref}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 29
          },
          "name": "ref",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ref#repository DataGithubRef#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ref#id DataGithubRef#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ref#owner DataGithubRef#owner}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ref/index.ts",
            "line": 25
          },
          "name": "owner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-ref/index:DataGithubRefConfig"
    },
    "@cdktf/provider-github.dataGithubRelease.DataGithubRelease": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/release github_release}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRelease.DataGithubRelease",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/release github_release} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-release/index.ts",
          "line": 188
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRelease.DataGithubReleaseConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-release/index.ts",
        "line": 156
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRelease resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 173
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRelease to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/release#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRelease that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRelease to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 260
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 304
          },
          "name": "resetReleaseId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 320
          },
          "name": "resetReleaseTag"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 383
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRelease",
      "namespace": "dataGithubRelease",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 161
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 217
          },
          "name": "assertsUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 223
          },
          "name": "assets",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRelease.DataGithubReleaseAssetsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 228
          },
          "name": "assetsUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 233
          },
          "name": "body",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 238
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 243
          },
          "name": "draft",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 248
          },
          "name": "htmlUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 269
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 287
          },
          "name": "prerelease",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 292
          },
          "name": "publishedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 355
          },
          "name": "tarballUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 360
          },
          "name": "targetCommitish",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 365
          },
          "name": "uploadUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 370
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 375
          },
          "name": "zipballUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 264
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 282
          },
          "name": "ownerInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 308
          },
          "name": "releaseIdInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 324
          },
          "name": "releaseTagInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 337
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 350
          },
          "name": "retrieveByInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 254
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 275
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 298
          },
          "name": "releaseId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 314
          },
          "name": "releaseTag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 330
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 343
          },
          "name": "retrieveBy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-release/index:DataGithubRelease"
    },
    "@cdktf/provider-github.dataGithubRelease.DataGithubReleaseAssets": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRelease.DataGithubReleaseAssets",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-release/index.ts",
        "line": 43
      },
      "name": "DataGithubReleaseAssets",
      "namespace": "dataGithubRelease",
      "symbolId": "src/data-github-release/index:DataGithubReleaseAssets"
    },
    "@cdktf/provider-github.dataGithubRelease.DataGithubReleaseAssetsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRelease.DataGithubReleaseAssetsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-release/index.ts",
          "line": 141
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-release/index.ts",
        "line": 134
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 148
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRelease.DataGithubReleaseAssetsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubReleaseAssetsList",
      "namespace": "dataGithubRelease",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 141
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 141
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 141
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-release/index:DataGithubReleaseAssetsList"
    },
    "@cdktf/provider-github.dataGithubRelease.DataGithubReleaseAssetsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRelease.DataGithubReleaseAssetsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-release/index.ts",
          "line": 64
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-release/index.ts",
        "line": 55
      },
      "name": "DataGithubReleaseAssetsOutputReference",
      "namespace": "dataGithubRelease",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 84
          },
          "name": "browserDownloadUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 89
          },
          "name": "contentType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 94
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 99
          },
          "name": "id",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 104
          },
          "name": "label",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 109
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 114
          },
          "name": "nodeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 119
          },
          "name": "size",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 124
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 129
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 68
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRelease.DataGithubReleaseAssets"
          }
        }
      ],
      "symbolId": "src/data-github-release/index:DataGithubReleaseAssetsOutputReference"
    },
    "@cdktf/provider-github.dataGithubRelease.DataGithubReleaseConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRelease.DataGithubReleaseConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-release/index.ts",
        "line": 14
      },
      "name": "DataGithubReleaseConfig",
      "namespace": "dataGithubRelease",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/release#owner DataGithubRelease#owner}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 25
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/release#repository DataGithubRelease#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 37
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/release#retrieve_by DataGithubRelease#retrieve_by}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 41
          },
          "name": "retrieveBy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/release#id DataGithubRelease#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/release#release_id DataGithubRelease#release_id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 29
          },
          "name": "releaseId",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/release#release_tag DataGithubRelease#release_tag}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-release/index.ts",
            "line": 33
          },
          "name": "releaseTag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-release/index:DataGithubReleaseConfig"
    },
    "@cdktf/provider-github.dataGithubRepositories.DataGithubRepositories": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repositories github_repositories}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositories.DataGithubRepositories",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repositories github_repositories} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-repositories/index.ts",
          "line": 75
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositories.DataGithubRepositoriesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repositories/index.ts",
        "line": 43
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRepositories resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 60
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRepositories to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repositories#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRepositories that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRepositories to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 115
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 131
          },
          "name": "resetIncludeRepoId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 170
          },
          "name": "resetResultsPerPage"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 186
          },
          "name": "resetSort"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 198
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRepositories",
      "namespace": "dataGithubRepositories",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 48
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 103
          },
          "name": "fullNames",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 140
          },
          "name": "names",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 158
          },
          "name": "repoIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 119
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 135
          },
          "name": "includeRepoIdInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 153
          },
          "name": "queryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 174
          },
          "name": "resultsPerPageInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 190
          },
          "name": "sortInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 109
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 125
          },
          "name": "includeRepoId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 146
          },
          "name": "query",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 164
          },
          "name": "resultsPerPage",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 180
          },
          "name": "sort",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repositories/index:DataGithubRepositories"
    },
    "@cdktf/provider-github.dataGithubRepositories.DataGithubRepositoriesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositories.DataGithubRepositoriesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repositories/index.ts",
        "line": 14
      },
      "name": "DataGithubRepositoriesConfig",
      "namespace": "dataGithubRepositories",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repositories#query DataGithubRepositories#query}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 29
          },
          "name": "query",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repositories#id DataGithubRepositories#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repositories#include_repo_id DataGithubRepositories#include_repo_id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 25
          },
          "name": "includeRepoId",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repositories#results_per_page DataGithubRepositories#results_per_page}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 33
          },
          "name": "resultsPerPage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repositories#sort DataGithubRepositories#sort}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repositories/index.ts",
            "line": 37
          },
          "name": "sort",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repositories/index:DataGithubRepositoriesConfig"
    },
    "@cdktf/provider-github.dataGithubRepository.DataGithubRepository": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository github_repository}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepository",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository github_repository} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-repository/index.ts",
          "line": 308
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository/index.ts",
        "line": 276
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRepository resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 293
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRepository to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRepository that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRepository to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 373
          },
          "name": "resetDescription"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 394
          },
          "name": "resetFullName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 440
          },
          "name": "resetHomepageUrl"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 466
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 497
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 571
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRepository",
      "namespace": "dataGithubRepository",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 281
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 336
          },
          "name": "allowAutoMerge",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 341
          },
          "name": "allowMergeCommit",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 346
          },
          "name": "allowRebaseMerge",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 351
          },
          "name": "allowSquashMerge",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 356
          },
          "name": "archived",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 361
          },
          "name": "defaultBranch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 382
          },
          "name": "fork",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 403
          },
          "name": "gitCloneUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 408
          },
          "name": "hasDiscussions",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 413
          },
          "name": "hasDownloads",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 418
          },
          "name": "hasIssues",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 423
          },
          "name": "hasProjects",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 428
          },
          "name": "hasWiki",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 449
          },
          "name": "htmlUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 454
          },
          "name": "httpCloneUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 475
          },
          "name": "isTemplate",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 480
          },
          "name": "mergeCommitMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 485
          },
          "name": "mergeCommitTitle",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 506
          },
          "name": "nodeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 512
          },
          "name": "pages",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 517
          },
          "name": "primaryLanguage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 522
          },
          "name": "private",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 527
          },
          "name": "repoId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 532
          },
          "name": "squashMergeCommitMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 537
          },
          "name": "squashMergeCommitTitle",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 542
          },
          "name": "sshCloneUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 547
          },
          "name": "svnUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 553
          },
          "name": "template",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryTemplateList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 558
          },
          "name": "topics",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 563
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 377
          },
          "name": "descriptionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 398
          },
          "name": "fullNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 444
          },
          "name": "homepageUrlInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 470
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 501
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 367
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 388
          },
          "name": "fullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 434
          },
          "name": "homepageUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 460
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 491
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository/index:DataGithubRepository"
    },
    "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository/index.ts",
        "line": 14
      },
      "name": "DataGithubRepositoryConfig",
      "namespace": "dataGithubRepository",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository#description DataGithubRepository#description}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 18
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository#full_name DataGithubRepository#full_name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 22
          },
          "name": "fullName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository#homepage_url DataGithubRepository#homepage_url}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 26
          },
          "name": "homepageUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository#id DataGithubRepository#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository#name DataGithubRepository#name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 37
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository/index:DataGithubRepositoryConfig"
    },
    "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPages": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPages",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository/index.ts",
        "line": 108
      },
      "name": "DataGithubRepositoryPages",
      "namespace": "dataGithubRepository",
      "symbolId": "src/data-github-repository/index:DataGithubRepositoryPages"
    },
    "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository/index.ts",
          "line": 192
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository/index.ts",
        "line": 185
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 199
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubRepositoryPagesList",
      "namespace": "dataGithubRepository",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 192
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 192
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 192
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-repository/index:DataGithubRepositoryPagesList"
    },
    "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository/index.ts",
          "line": 129
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository/index.ts",
        "line": 120
      },
      "name": "DataGithubRepositoryPagesOutputReference",
      "namespace": "dataGithubRepository",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 149
          },
          "name": "buildType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 154
          },
          "name": "cname",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 159
          },
          "name": "custom404",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 164
          },
          "name": "htmlUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 170
          },
          "name": "source",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesSourceList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 175
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 180
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 133
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPages"
          }
        }
      ],
      "symbolId": "src/data-github-repository/index:DataGithubRepositoryPagesOutputReference"
    },
    "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesSource": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository/index.ts",
        "line": 39
      },
      "name": "DataGithubRepositoryPagesSource",
      "namespace": "dataGithubRepository",
      "symbolId": "src/data-github-repository/index:DataGithubRepositoryPagesSource"
    },
    "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesSourceList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesSourceList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository/index.ts",
          "line": 97
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository/index.ts",
        "line": 90
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 104
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesSourceOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubRepositoryPagesSourceList",
      "namespace": "dataGithubRepository",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 97
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 97
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 97
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-repository/index:DataGithubRepositoryPagesSourceList"
    },
    "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesSourceOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesSourceOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository/index.ts",
          "line": 60
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository/index.ts",
        "line": 51
      },
      "name": "DataGithubRepositoryPagesSourceOutputReference",
      "namespace": "dataGithubRepository",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 80
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 85
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 64
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryPagesSource"
          }
        }
      ],
      "symbolId": "src/data-github-repository/index:DataGithubRepositoryPagesSourceOutputReference"
    },
    "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryTemplate": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryTemplate",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository/index.ts",
        "line": 203
      },
      "name": "DataGithubRepositoryTemplate",
      "namespace": "dataGithubRepository",
      "symbolId": "src/data-github-repository/index:DataGithubRepositoryTemplate"
    },
    "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryTemplateList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryTemplateList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository/index.ts",
          "line": 261
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository/index.ts",
        "line": 254
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 268
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryTemplateOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubRepositoryTemplateList",
      "namespace": "dataGithubRepository",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 261
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 261
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 261
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-repository/index:DataGithubRepositoryTemplateList"
    },
    "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryTemplateOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryTemplateOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository/index.ts",
          "line": 224
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository/index.ts",
        "line": 215
      },
      "name": "DataGithubRepositoryTemplateOutputReference",
      "namespace": "dataGithubRepository",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 244
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 249
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository/index.ts",
            "line": 228
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepository.DataGithubRepositoryTemplate"
          }
        }
      ],
      "symbolId": "src/data-github-repository/index:DataGithubRepositoryTemplateOutputReference"
    },
    "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferences": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_autolink_references github_repository_autolink_references}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferences",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_autolink_references github_repository_autolink_references} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-repository-autolink-references/index.ts",
          "line": 137
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferencesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-autolink-references/index.ts",
        "line": 105
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRepositoryAutolinkReferences resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 122
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRepositoryAutolinkReferences to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_autolink_references#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRepositoryAutolinkReferences that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRepositoryAutolinkReferences to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 175
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 200
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRepositoryAutolinkReferences",
      "namespace": "dataGithubRepositoryAutolinkReferences",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 110
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 163
          },
          "name": "autolinkReferences",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferencesAutolinkReferencesList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 179
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 192
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 169
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 185
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-autolink-references/index:DataGithubRepositoryAutolinkReferences"
    },
    "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferencesAutolinkReferences": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferencesAutolinkReferences",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-autolink-references/index.ts",
        "line": 27
      },
      "name": "DataGithubRepositoryAutolinkReferencesAutolinkReferences",
      "namespace": "dataGithubRepositoryAutolinkReferences",
      "symbolId": "src/data-github-repository-autolink-references/index:DataGithubRepositoryAutolinkReferencesAutolinkReferences"
    },
    "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferencesAutolinkReferencesList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferencesAutolinkReferencesList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-autolink-references/index.ts",
          "line": 90
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-autolink-references/index.ts",
        "line": 83
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 97
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferencesAutolinkReferencesOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubRepositoryAutolinkReferencesAutolinkReferencesList",
      "namespace": "dataGithubRepositoryAutolinkReferences",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 90
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 90
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 90
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-repository-autolink-references/index:DataGithubRepositoryAutolinkReferencesAutolinkReferencesList"
    },
    "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferencesAutolinkReferencesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferencesAutolinkReferencesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-autolink-references/index.ts",
          "line": 48
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-autolink-references/index.ts",
        "line": 39
      },
      "name": "DataGithubRepositoryAutolinkReferencesAutolinkReferencesOutputReference",
      "namespace": "dataGithubRepositoryAutolinkReferences",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 68
          },
          "name": "isAlphanumeric",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 73
          },
          "name": "keyPrefix",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 78
          },
          "name": "targetUrlTemplate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 52
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferencesAutolinkReferences"
          }
        }
      ],
      "symbolId": "src/data-github-repository-autolink-references/index:DataGithubRepositoryAutolinkReferencesAutolinkReferencesOutputReference"
    },
    "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferencesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryAutolinkReferences.DataGithubRepositoryAutolinkReferencesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-autolink-references/index.ts",
        "line": 14
      },
      "name": "DataGithubRepositoryAutolinkReferencesConfig",
      "namespace": "dataGithubRepositoryAutolinkReferences",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_autolink_references#repository DataGithubRepositoryAutolinkReferences#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 25
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_autolink_references#id DataGithubRepositoryAutolinkReferences#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-autolink-references/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-autolink-references/index:DataGithubRepositoryAutolinkReferencesConfig"
    },
    "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranches": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_branches github_repository_branches}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranches",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_branches github_repository_branches} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-repository-branches/index.ts",
          "line": 140
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranchesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-branches/index.ts",
        "line": 108
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRepositoryBranches resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 125
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRepositoryBranches to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_branches#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRepositoryBranches that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRepositoryBranches to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 180
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 196
          },
          "name": "resetOnlyNonProtectedBranches"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 212
          },
          "name": "resetOnlyProtectedBranches"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 237
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRepositoryBranches",
      "namespace": "dataGithubRepositoryBranches",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 113
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 168
          },
          "name": "branches",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranchesBranchesList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 184
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 200
          },
          "name": "onlyNonProtectedBranchesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 216
          },
          "name": "onlyProtectedBranchesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 229
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 174
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 190
          },
          "name": "onlyNonProtectedBranches",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 206
          },
          "name": "onlyProtectedBranches",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 222
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-branches/index:DataGithubRepositoryBranches"
    },
    "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranchesBranches": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranchesBranches",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-branches/index.ts",
        "line": 35
      },
      "name": "DataGithubRepositoryBranchesBranches",
      "namespace": "dataGithubRepositoryBranches",
      "symbolId": "src/data-github-repository-branches/index:DataGithubRepositoryBranchesBranches"
    },
    "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranchesBranchesList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranchesBranchesList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-branches/index.ts",
          "line": 93
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-branches/index.ts",
        "line": 86
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 100
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranchesBranchesOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubRepositoryBranchesBranchesList",
      "namespace": "dataGithubRepositoryBranches",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 93
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 93
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 93
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-repository-branches/index:DataGithubRepositoryBranchesBranchesList"
    },
    "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranchesBranchesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranchesBranchesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-branches/index.ts",
          "line": 56
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-branches/index.ts",
        "line": 47
      },
      "name": "DataGithubRepositoryBranchesBranchesOutputReference",
      "namespace": "dataGithubRepositoryBranches",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 76
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 81
          },
          "name": "protected",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 60
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranchesBranches"
          }
        }
      ],
      "symbolId": "src/data-github-repository-branches/index:DataGithubRepositoryBranchesBranchesOutputReference"
    },
    "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranchesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryBranches.DataGithubRepositoryBranchesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-branches/index.ts",
        "line": 14
      },
      "name": "DataGithubRepositoryBranchesConfig",
      "namespace": "dataGithubRepositoryBranches",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_branches#repository DataGithubRepositoryBranches#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_branches#id DataGithubRepositoryBranches#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_branches#only_non_protected_branches DataGithubRepositoryBranches#only_non_protected_branches}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 25
          },
          "name": "onlyNonProtectedBranches",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_branches#only_protected_branches DataGithubRepositoryBranches#only_protected_branches}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-branches/index.ts",
            "line": 29
          },
          "name": "onlyProtectedBranches",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/data-github-repository-branches/index:DataGithubRepositoryBranchesConfig"
    },
    "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeys": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_deploy_keys github_repository_deploy_keys}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeys",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_deploy_keys github_repository_deploy_keys} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-repository-deploy-keys/index.ts",
          "line": 142
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeysConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-deploy-keys/index.ts",
        "line": 110
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRepositoryDeployKeys resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 127
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRepositoryDeployKeys to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_deploy_keys#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRepositoryDeployKeys that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRepositoryDeployKeys to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 174
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 205
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRepositoryDeployKeys",
      "namespace": "dataGithubRepositoryDeployKeys",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 115
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 184
          },
          "name": "keys",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeysKeysList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 178
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 197
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 168
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 190
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-deploy-keys/index:DataGithubRepositoryDeployKeys"
    },
    "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeysConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeysConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-deploy-keys/index.ts",
        "line": 14
      },
      "name": "DataGithubRepositoryDeployKeysConfig",
      "namespace": "dataGithubRepositoryDeployKeys",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_deploy_keys#repository DataGithubRepositoryDeployKeys#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 25
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_deploy_keys#id DataGithubRepositoryDeployKeys#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-deploy-keys/index:DataGithubRepositoryDeployKeysConfig"
    },
    "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeysKeys": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeysKeys",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-deploy-keys/index.ts",
        "line": 27
      },
      "name": "DataGithubRepositoryDeployKeysKeys",
      "namespace": "dataGithubRepositoryDeployKeys",
      "symbolId": "src/data-github-repository-deploy-keys/index:DataGithubRepositoryDeployKeysKeys"
    },
    "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeysKeysList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeysKeysList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-deploy-keys/index.ts",
          "line": 95
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-deploy-keys/index.ts",
        "line": 88
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 102
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeysKeysOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubRepositoryDeployKeysKeysList",
      "namespace": "dataGithubRepositoryDeployKeys",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 95
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 95
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 95
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-repository-deploy-keys/index:DataGithubRepositoryDeployKeysKeysList"
    },
    "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeysKeysOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeysKeysOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-deploy-keys/index.ts",
          "line": 48
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-deploy-keys/index.ts",
        "line": 39
      },
      "name": "DataGithubRepositoryDeployKeysKeysOutputReference",
      "namespace": "dataGithubRepositoryDeployKeys",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 68
          },
          "name": "id",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 73
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 78
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 83
          },
          "name": "verified",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deploy-keys/index.ts",
            "line": 52
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryDeployKeys.DataGithubRepositoryDeployKeysKeys"
          }
        }
      ],
      "symbolId": "src/data-github-repository-deploy-keys/index:DataGithubRepositoryDeployKeysKeysOutputReference"
    },
    "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPolicies": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_deployment_branch_policies github_repository_deployment_branch_policies}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPolicies",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_deployment_branch_policies github_repository_deployment_branch_policies} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
          "line": 140
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPoliciesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
        "line": 108
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRepositoryDeploymentBranchPolicies resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 125
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRepositoryDeploymentBranchPolicies to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_deployment_branch_policies#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRepositoryDeploymentBranchPolicies that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRepositoryDeploymentBranchPolicies to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 192
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 217
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRepositoryDeploymentBranchPolicies",
      "namespace": "dataGithubRepositoryDeploymentBranchPolicies",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 113
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 167
          },
          "name": "deploymentBranchPolicies",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPoliciesList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 180
          },
          "name": "environmentNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 196
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 209
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 173
          },
          "name": "environmentName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 186
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 202
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-deployment-branch-policies/index:DataGithubRepositoryDeploymentBranchPolicies"
    },
    "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPoliciesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPoliciesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
        "line": 14
      },
      "name": "DataGithubRepositoryDeploymentBranchPoliciesConfig",
      "namespace": "dataGithubRepositoryDeploymentBranchPolicies",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_deployment_branch_policies#environment_name DataGithubRepositoryDeploymentBranchPolicies#environment_name}",
            "stability": "stable",
            "summary": "The target environment name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 20
          },
          "name": "environmentName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_deployment_branch_policies#repository DataGithubRepositoryDeploymentBranchPolicies#repository}",
            "stability": "stable",
            "summary": "The GitHub repository name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_deployment_branch_policies#id DataGithubRepositoryDeploymentBranchPolicies#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-deployment-branch-policies/index:DataGithubRepositoryDeploymentBranchPoliciesConfig"
    },
    "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPolicies": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPolicies",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
        "line": 35
      },
      "name": "DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPolicies",
      "namespace": "dataGithubRepositoryDeploymentBranchPolicies",
      "symbolId": "src/data-github-repository-deployment-branch-policies/index:DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPolicies"
    },
    "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPoliciesList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPoliciesList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
          "line": 93
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
        "line": 86
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 100
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPoliciesOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPoliciesList",
      "namespace": "dataGithubRepositoryDeploymentBranchPolicies",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 93
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 93
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 93
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-repository-deployment-branch-policies/index:DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPoliciesList"
    },
    "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPoliciesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPoliciesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
          "line": 56
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
        "line": 47
      },
      "name": "DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPoliciesOutputReference",
      "namespace": "dataGithubRepositoryDeploymentBranchPolicies",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 76
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 81
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-deployment-branch-policies/index.ts",
            "line": 60
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryDeploymentBranchPolicies.DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPolicies"
          }
        }
      ],
      "symbolId": "src/data-github-repository-deployment-branch-policies/index:DataGithubRepositoryDeploymentBranchPoliciesDeploymentBranchPoliciesOutputReference"
    },
    "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironments": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_environments github_repository_environments}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironments",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_environments github_repository_environments} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-repository-environments/index.ts",
          "line": 132
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironmentsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-environments/index.ts",
        "line": 100
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRepositoryEnvironments resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 117
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRepositoryEnvironments to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_environments#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRepositoryEnvironments that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRepositoryEnvironments to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 170
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 195
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRepositoryEnvironments",
      "namespace": "dataGithubRepositoryEnvironments",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 105
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 158
          },
          "name": "environments",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironmentsEnvironmentsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 174
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 187
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 164
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 180
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-environments/index:DataGithubRepositoryEnvironments"
    },
    "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironmentsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironmentsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-environments/index.ts",
        "line": 14
      },
      "name": "DataGithubRepositoryEnvironmentsConfig",
      "namespace": "dataGithubRepositoryEnvironments",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_environments#repository DataGithubRepositoryEnvironments#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 25
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_environments#id DataGithubRepositoryEnvironments#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-environments/index:DataGithubRepositoryEnvironmentsConfig"
    },
    "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironmentsEnvironments": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironmentsEnvironments",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-environments/index.ts",
        "line": 27
      },
      "name": "DataGithubRepositoryEnvironmentsEnvironments",
      "namespace": "dataGithubRepositoryEnvironments",
      "symbolId": "src/data-github-repository-environments/index:DataGithubRepositoryEnvironmentsEnvironments"
    },
    "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironmentsEnvironmentsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironmentsEnvironmentsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-environments/index.ts",
          "line": 85
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-environments/index.ts",
        "line": 78
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 92
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironmentsEnvironmentsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubRepositoryEnvironmentsEnvironmentsList",
      "namespace": "dataGithubRepositoryEnvironments",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 85
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 85
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 85
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-repository-environments/index:DataGithubRepositoryEnvironmentsEnvironmentsList"
    },
    "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironmentsEnvironmentsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironmentsEnvironmentsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-environments/index.ts",
          "line": 48
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-environments/index.ts",
        "line": 39
      },
      "name": "DataGithubRepositoryEnvironmentsEnvironmentsOutputReference",
      "namespace": "dataGithubRepositoryEnvironments",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 68
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 73
          },
          "name": "nodeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-environments/index.ts",
            "line": 52
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryEnvironments.DataGithubRepositoryEnvironmentsEnvironments"
          }
        }
      ],
      "symbolId": "src/data-github-repository-environments/index:DataGithubRepositoryEnvironmentsEnvironmentsOutputReference"
    },
    "@cdktf/provider-github.dataGithubRepositoryFile.DataGithubRepositoryFile": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_file github_repository_file}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryFile.DataGithubRepositoryFile",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_file github_repository_file} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-repository-file/index.ts",
          "line": 77
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryFile.DataGithubRepositoryFileConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-file/index.ts",
        "line": 45
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRepositoryFile resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 62
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRepositoryFile to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_file#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRepositoryFile that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRepositoryFile to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 111
          },
          "name": "resetBranch"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 165
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 200
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRepositoryFile",
      "namespace": "dataGithubRepositoryFile",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 50
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 120
          },
          "name": "commitAuthor",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 125
          },
          "name": "commitEmail",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 130
          },
          "name": "commitMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 135
          },
          "name": "commitSha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 140
          },
          "name": "content",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 174
          },
          "name": "ref",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 192
          },
          "name": "sha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 115
          },
          "name": "branchInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 153
          },
          "name": "fileInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 169
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 187
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 105
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 146
          },
          "name": "file",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 159
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 180
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-file/index:DataGithubRepositoryFile"
    },
    "@cdktf/provider-github.dataGithubRepositoryFile.DataGithubRepositoryFileConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryFile.DataGithubRepositoryFileConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-file/index.ts",
        "line": 14
      },
      "name": "DataGithubRepositoryFileConfig",
      "namespace": "dataGithubRepositoryFile",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_file#file DataGithubRepositoryFile#file}",
            "stability": "stable",
            "summary": "The file path to manage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 26
          },
          "name": "file",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_file#repository DataGithubRepositoryFile#repository}",
            "stability": "stable",
            "summary": "The repository name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 39
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_file#branch DataGithubRepositoryFile#branch}",
            "stability": "stable",
            "summary": "The branch name, defaults to the repository's default branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 20
          },
          "name": "branch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_file#id DataGithubRepositoryFile#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-file/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-file/index:DataGithubRepositoryFileConfig"
    },
    "@cdktf/provider-github.dataGithubRepositoryMilestone.DataGithubRepositoryMilestone": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_milestone github_repository_milestone}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryMilestone.DataGithubRepositoryMilestone",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_milestone github_repository_milestone} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-repository-milestone/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryMilestone.DataGithubRepositoryMilestoneConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-milestone/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRepositoryMilestone resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRepositoryMilestone to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_milestone#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRepositoryMilestone that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRepositoryMilestone to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 115
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 176
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRepositoryMilestone",
      "namespace": "dataGithubRepositoryMilestone",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 98
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 103
          },
          "name": "dueDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 163
          },
          "name": "state",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 168
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 119
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 132
          },
          "name": "numberInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 145
          },
          "name": "ownerInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 158
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 109
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 125
          },
          "name": "number",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 138
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 151
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-milestone/index:DataGithubRepositoryMilestone"
    },
    "@cdktf/provider-github.dataGithubRepositoryMilestone.DataGithubRepositoryMilestoneConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryMilestone.DataGithubRepositoryMilestoneConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-milestone/index.ts",
        "line": 14
      },
      "name": "DataGithubRepositoryMilestoneConfig",
      "namespace": "dataGithubRepositoryMilestone",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_milestone#number DataGithubRepositoryMilestone#number}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 25
          },
          "name": "number",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_milestone#owner DataGithubRepositoryMilestone#owner}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 29
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_milestone#repository DataGithubRepositoryMilestone#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_milestone#id DataGithubRepositoryMilestone#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-milestone/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-milestone/index:DataGithubRepositoryMilestoneConfig"
    },
    "@cdktf/provider-github.dataGithubRepositoryPullRequest.DataGithubRepositoryPullRequest": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_request github_repository_pull_request}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryPullRequest.DataGithubRepositoryPullRequest",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_request github_repository_pull_request} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-repository-pull-request/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryPullRequest.DataGithubRepositoryPullRequestConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-pull-request/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRepositoryPullRequest resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRepositoryPullRequest to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_request#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRepositoryPullRequest that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRepositoryPullRequest to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 158
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 207
          },
          "name": "resetOwner"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 234
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRepositoryPullRequest",
      "namespace": "dataGithubRepositoryPullRequest",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 98
          },
          "name": "baseRef",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 116
          },
          "name": "baseSha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 121
          },
          "name": "body",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 126
          },
          "name": "draft",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 131
          },
          "name": "headOwner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 136
          },
          "name": "headRef",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 141
          },
          "name": "headRepository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 146
          },
          "name": "headSha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 167
          },
          "name": "labels",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 172
          },
          "name": "maintainerCanModify",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 190
          },
          "name": "openedAt",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 195
          },
          "name": "openedBy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 216
          },
          "name": "state",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 221
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 226
          },
          "name": "updatedAt",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 111
          },
          "name": "baseRepositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 162
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 185
          },
          "name": "numberInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 211
          },
          "name": "ownerInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 104
          },
          "name": "baseRepository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 152
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 178
          },
          "name": "number",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 201
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-pull-request/index:DataGithubRepositoryPullRequest"
    },
    "@cdktf/provider-github.dataGithubRepositoryPullRequest.DataGithubRepositoryPullRequestConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryPullRequest.DataGithubRepositoryPullRequestConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-pull-request/index.ts",
        "line": 14
      },
      "name": "DataGithubRepositoryPullRequestConfig",
      "namespace": "dataGithubRepositoryPullRequest",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_request#base_repository DataGithubRepositoryPullRequest#base_repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 18
          },
          "name": "baseRepository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_request#number DataGithubRepositoryPullRequest#number}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 29
          },
          "name": "number",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_request#id DataGithubRepositoryPullRequest#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 25
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_request#owner DataGithubRepositoryPullRequest#owner}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-request/index.ts",
            "line": 33
          },
          "name": "owner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-pull-request/index:DataGithubRepositoryPullRequestConfig"
    },
    "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequests": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_requests github_repository_pull_requests}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequests",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_requests github_repository_pull_requests} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-repository-pull-requests/index.ts",
          "line": 226
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequestsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-pull-requests/index.ts",
        "line": 194
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRepositoryPullRequests resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 211
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRepositoryPullRequests to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_requests#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRepositoryPullRequests that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRepositoryPullRequests to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 264
          },
          "name": "resetBaseRef"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 293
          },
          "name": "resetHeadRef"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 309
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 325
          },
          "name": "resetOwner"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 347
          },
          "name": "resetSortBy"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 363
          },
          "name": "resetSortDirection"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 379
          },
          "name": "resetState"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 391
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRepositoryPullRequests",
      "namespace": "dataGithubRepositoryPullRequests",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 199
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 335
          },
          "name": "results",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequestsResultsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 268
          },
          "name": "baseRefInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 281
          },
          "name": "baseRepositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 297
          },
          "name": "headRefInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 313
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 329
          },
          "name": "ownerInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 351
          },
          "name": "sortByInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 367
          },
          "name": "sortDirectionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 383
          },
          "name": "stateInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 258
          },
          "name": "baseRef",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 274
          },
          "name": "baseRepository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 287
          },
          "name": "headRef",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 303
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 319
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 341
          },
          "name": "sortBy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 357
          },
          "name": "sortDirection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 373
          },
          "name": "state",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-pull-requests/index:DataGithubRepositoryPullRequests"
    },
    "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequestsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequestsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-pull-requests/index.ts",
        "line": 14
      },
      "name": "DataGithubRepositoryPullRequestsConfig",
      "namespace": "dataGithubRepositoryPullRequests",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_requests#base_repository DataGithubRepositoryPullRequests#base_repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 22
          },
          "name": "baseRepository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_requests#base_ref DataGithubRepositoryPullRequests#base_ref}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 18
          },
          "name": "baseRef",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_requests#head_ref DataGithubRepositoryPullRequests#head_ref}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 26
          },
          "name": "headRef",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_requests#id DataGithubRepositoryPullRequests#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_requests#owner DataGithubRepositoryPullRequests#owner}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 37
          },
          "name": "owner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_requests#sort_by DataGithubRepositoryPullRequests#sort_by}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 41
          },
          "name": "sortBy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_requests#sort_direction DataGithubRepositoryPullRequests#sort_direction}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 45
          },
          "name": "sortDirection",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_pull_requests#state DataGithubRepositoryPullRequests#state}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 49
          },
          "name": "state",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-pull-requests/index:DataGithubRepositoryPullRequestsConfig"
    },
    "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequestsResults": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequestsResults",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-pull-requests/index.ts",
        "line": 51
      },
      "name": "DataGithubRepositoryPullRequestsResults",
      "namespace": "dataGithubRepositoryPullRequests",
      "symbolId": "src/data-github-repository-pull-requests/index:DataGithubRepositoryPullRequestsResults"
    },
    "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequestsResultsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequestsResultsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-pull-requests/index.ts",
          "line": 179
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-pull-requests/index.ts",
        "line": 172
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 186
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequestsResultsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubRepositoryPullRequestsResultsList",
      "namespace": "dataGithubRepositoryPullRequests",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 179
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 179
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 179
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-repository-pull-requests/index:DataGithubRepositoryPullRequestsResultsList"
    },
    "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequestsResultsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequestsResultsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-pull-requests/index.ts",
          "line": 72
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-pull-requests/index.ts",
        "line": 63
      },
      "name": "DataGithubRepositoryPullRequestsResultsOutputReference",
      "namespace": "dataGithubRepositoryPullRequests",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 92
          },
          "name": "baseRef",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 97
          },
          "name": "baseSha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 102
          },
          "name": "body",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 107
          },
          "name": "draft",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 112
          },
          "name": "headOwner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 117
          },
          "name": "headRef",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 122
          },
          "name": "headRepository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 127
          },
          "name": "headSha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 132
          },
          "name": "labels",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 137
          },
          "name": "maintainerCanModify",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 142
          },
          "name": "number",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 147
          },
          "name": "openedAt",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 152
          },
          "name": "openedBy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 157
          },
          "name": "state",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 162
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 167
          },
          "name": "updatedAt",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-pull-requests/index.ts",
            "line": 76
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryPullRequests.DataGithubRepositoryPullRequestsResults"
          }
        }
      ],
      "symbolId": "src/data-github-repository-pull-requests/index:DataGithubRepositoryPullRequestsResultsOutputReference"
    },
    "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeams": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_teams github_repository_teams}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeams",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_teams github_repository_teams} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-repository-teams/index.ts",
          "line": 141
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeamsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-teams/index.ts",
        "line": 109
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRepositoryTeams resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 126
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRepositoryTeams to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_teams#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRepositoryTeams that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRepositoryTeams to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 174
          },
          "name": "resetFullName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 190
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 206
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 224
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRepositoryTeams",
      "namespace": "dataGithubRepositoryTeams",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 114
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 216
          },
          "name": "teams",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeamsTeamsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 178
          },
          "name": "fullNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 194
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 210
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 168
          },
          "name": "fullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 184
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 200
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-teams/index:DataGithubRepositoryTeams"
    },
    "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeamsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeamsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-teams/index.ts",
        "line": 14
      },
      "name": "DataGithubRepositoryTeamsConfig",
      "namespace": "dataGithubRepositoryTeams",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_teams#full_name DataGithubRepositoryTeams#full_name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 18
          },
          "name": "fullName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_teams#id DataGithubRepositoryTeams#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 25
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_teams#name DataGithubRepositoryTeams#name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 29
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-teams/index:DataGithubRepositoryTeamsConfig"
    },
    "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeamsTeams": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeamsTeams",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-teams/index.ts",
        "line": 31
      },
      "name": "DataGithubRepositoryTeamsTeams",
      "namespace": "dataGithubRepositoryTeams",
      "symbolId": "src/data-github-repository-teams/index:DataGithubRepositoryTeamsTeams"
    },
    "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeamsTeamsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeamsTeamsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-teams/index.ts",
          "line": 94
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-teams/index.ts",
        "line": 87
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 101
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeamsTeamsOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubRepositoryTeamsTeamsList",
      "namespace": "dataGithubRepositoryTeams",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 94
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 94
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 94
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-repository-teams/index:DataGithubRepositoryTeamsTeamsList"
    },
    "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeamsTeamsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeamsTeamsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-teams/index.ts",
          "line": 52
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-teams/index.ts",
        "line": 43
      },
      "name": "DataGithubRepositoryTeamsTeamsOutputReference",
      "namespace": "dataGithubRepositoryTeams",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 72
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 77
          },
          "name": "permission",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 82
          },
          "name": "slug",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-teams/index.ts",
            "line": 56
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryTeams.DataGithubRepositoryTeamsTeams"
          }
        }
      ],
      "symbolId": "src/data-github-repository-teams/index:DataGithubRepositoryTeamsTeamsOutputReference"
    },
    "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooks": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_webhooks github_repository_webhooks}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooks",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_webhooks github_repository_webhooks} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-repository-webhooks/index.ts",
          "line": 147
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooksConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-webhooks/index.ts",
        "line": 115
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRepositoryWebhooks resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 132
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRepositoryWebhooks to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_webhooks#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRepositoryWebhooks that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRepositoryWebhooks to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 179
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 210
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRepositoryWebhooks",
      "namespace": "dataGithubRepositoryWebhooks",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 120
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 202
          },
          "name": "webhooks",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooksWebhooksList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 183
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 196
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 173
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 189
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-webhooks/index:DataGithubRepositoryWebhooks"
    },
    "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooksConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooksConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-webhooks/index.ts",
        "line": 14
      },
      "name": "DataGithubRepositoryWebhooksConfig",
      "namespace": "dataGithubRepositoryWebhooks",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_webhooks#repository DataGithubRepositoryWebhooks#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 25
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/repository_webhooks#id DataGithubRepositoryWebhooks#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-repository-webhooks/index:DataGithubRepositoryWebhooksConfig"
    },
    "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooksWebhooks": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooksWebhooks",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-repository-webhooks/index.ts",
        "line": 27
      },
      "name": "DataGithubRepositoryWebhooksWebhooks",
      "namespace": "dataGithubRepositoryWebhooks",
      "symbolId": "src/data-github-repository-webhooks/index:DataGithubRepositoryWebhooksWebhooks"
    },
    "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooksWebhooksList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooksWebhooksList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-webhooks/index.ts",
          "line": 100
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-webhooks/index.ts",
        "line": 93
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 107
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooksWebhooksOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubRepositoryWebhooksWebhooksList",
      "namespace": "dataGithubRepositoryWebhooks",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 100
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 100
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 100
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-repository-webhooks/index:DataGithubRepositoryWebhooksWebhooksList"
    },
    "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooksWebhooksOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooksWebhooksOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-repository-webhooks/index.ts",
          "line": 48
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-repository-webhooks/index.ts",
        "line": 39
      },
      "name": "DataGithubRepositoryWebhooksWebhooksOutputReference",
      "namespace": "dataGithubRepositoryWebhooks",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 68
          },
          "name": "active",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 73
          },
          "name": "id",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 78
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 83
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 88
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-repository-webhooks/index.ts",
            "line": 52
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubRepositoryWebhooks.DataGithubRepositoryWebhooksWebhooks"
          }
        }
      ],
      "symbolId": "src/data-github-repository-webhooks/index:DataGithubRepositoryWebhooksWebhooksOutputReference"
    },
    "@cdktf/provider-github.dataGithubRestApi.DataGithubRestApi": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/rest_api github_rest_api}."
      },
      "fqn": "@cdktf/provider-github.dataGithubRestApi.DataGithubRestApi",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/rest_api github_rest_api} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-rest-api/index.ts",
          "line": 63
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubRestApi.DataGithubRestApiConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-rest-api/index.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubRestApi resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 48
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubRestApi to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/rest_api#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubRestApi that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubRestApi to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 125
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 142
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubRestApi",
      "namespace": "dataGithubRestApi",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 36
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 89
          },
          "name": "body",
          "type": {
            "fqn": "cdktf.StringMap"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 94
          },
          "name": "code",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 113
          },
          "name": "headers",
          "type": {
            "fqn": "cdktf.StringMap"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 134
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 107
          },
          "name": "endpointInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 129
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 100
          },
          "name": "endpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 119
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-rest-api/index:DataGithubRestApi"
    },
    "@cdktf/provider-github.dataGithubRestApi.DataGithubRestApiConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubRestApi.DataGithubRestApiConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-rest-api/index.ts",
        "line": 14
      },
      "name": "DataGithubRestApiConfig",
      "namespace": "dataGithubRestApi",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/rest_api#endpoint DataGithubRestApi#endpoint}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 18
          },
          "name": "endpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/rest_api#id DataGithubRestApi#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-rest-api/index.ts",
            "line": 25
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-rest-api/index:DataGithubRestApiConfig"
    },
    "@cdktf/provider-github.dataGithubSshKeys.DataGithubSshKeys": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ssh_keys github_ssh_keys}."
      },
      "fqn": "@cdktf/provider-github.dataGithubSshKeys.DataGithubSshKeys",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ssh_keys github_ssh_keys} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-ssh-keys/index.ts",
          "line": 59
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubSshKeys.DataGithubSshKeysConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-ssh-keys/index.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubSshKeys resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-ssh-keys/index.ts",
            "line": 44
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubSshKeys to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ssh_keys#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubSshKeys that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubSshKeys to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-ssh-keys/index.ts",
            "line": 90
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-ssh-keys/index.ts",
            "line": 107
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubSshKeys",
      "namespace": "dataGithubSshKeys",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ssh-keys/index.ts",
            "line": 32
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ssh-keys/index.ts",
            "line": 99
          },
          "name": "keys",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ssh-keys/index.ts",
            "line": 94
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-ssh-keys/index.ts",
            "line": 84
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-ssh-keys/index:DataGithubSshKeys"
    },
    "@cdktf/provider-github.dataGithubSshKeys.DataGithubSshKeysConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubSshKeys.DataGithubSshKeysConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-ssh-keys/index.ts",
        "line": 14
      },
      "name": "DataGithubSshKeysConfig",
      "namespace": "dataGithubSshKeys",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/ssh_keys#id DataGithubSshKeys#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-ssh-keys/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-ssh-keys/index:DataGithubSshKeysConfig"
    },
    "@cdktf/provider-github.dataGithubTeam.DataGithubTeam": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/team github_team}."
      },
      "fqn": "@cdktf/provider-github.dataGithubTeam.DataGithubTeam",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/team github_team} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-team/index.ts",
          "line": 144
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubTeam.DataGithubTeamConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-team/index.ts",
        "line": 112
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubTeam resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 129
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubTeam to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/team#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubTeam that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubTeam to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 184
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 205
          },
          "name": "resetMembershipType"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 252
          },
          "name": "resetResultsPerPage"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 281
          },
          "name": "resetSummaryOnly"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 293
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubTeam",
      "namespace": "dataGithubTeam",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 117
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 172
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 193
          },
          "name": "members",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 214
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 219
          },
          "name": "nodeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 224
          },
          "name": "permission",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 229
          },
          "name": "privacy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 234
          },
          "name": "repositories",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 240
          },
          "name": "repositoriesDetailed",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubTeam.DataGithubTeamRepositoriesDetailedList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 188
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 209
          },
          "name": "membershipTypeInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 256
          },
          "name": "resultsPerPageInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 269
          },
          "name": "slugInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 285
          },
          "name": "summaryOnlyInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 178
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 199
          },
          "name": "membershipType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 246
          },
          "name": "resultsPerPage",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 262
          },
          "name": "slug",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 275
          },
          "name": "summaryOnly",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/data-github-team/index:DataGithubTeam"
    },
    "@cdktf/provider-github.dataGithubTeam.DataGithubTeamConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubTeam.DataGithubTeamConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-team/index.ts",
        "line": 14
      },
      "name": "DataGithubTeamConfig",
      "namespace": "dataGithubTeam",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/team#slug DataGithubTeam#slug}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 33
          },
          "name": "slug",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/team#id DataGithubTeam#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/team#membership_type DataGithubTeam#membership_type}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 25
          },
          "name": "membershipType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/team#results_per_page DataGithubTeam#results_per_page}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 29
          },
          "name": "resultsPerPage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/team#summary_only DataGithubTeam#summary_only}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 37
          },
          "name": "summaryOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/data-github-team/index:DataGithubTeamConfig"
    },
    "@cdktf/provider-github.dataGithubTeam.DataGithubTeamRepositoriesDetailed": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubTeam.DataGithubTeamRepositoriesDetailed",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-team/index.ts",
        "line": 39
      },
      "name": "DataGithubTeamRepositoriesDetailed",
      "namespace": "dataGithubTeam",
      "symbolId": "src/data-github-team/index:DataGithubTeamRepositoriesDetailed"
    },
    "@cdktf/provider-github.dataGithubTeam.DataGithubTeamRepositoriesDetailedList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubTeam.DataGithubTeamRepositoriesDetailedList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-team/index.ts",
          "line": 97
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-team/index.ts",
        "line": 90
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 104
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubTeam.DataGithubTeamRepositoriesDetailedOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubTeamRepositoriesDetailedList",
      "namespace": "dataGithubTeam",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 97
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 97
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 97
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-team/index:DataGithubTeamRepositoriesDetailedList"
    },
    "@cdktf/provider-github.dataGithubTeam.DataGithubTeamRepositoriesDetailedOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubTeam.DataGithubTeamRepositoriesDetailedOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-team/index.ts",
          "line": 60
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-team/index.ts",
        "line": 51
      },
      "name": "DataGithubTeamRepositoriesDetailedOutputReference",
      "namespace": "dataGithubTeam",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 80
          },
          "name": "repoId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 85
          },
          "name": "roleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-team/index.ts",
            "line": 64
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubTeam.DataGithubTeamRepositoriesDetailed"
          }
        }
      ],
      "symbolId": "src/data-github-team/index:DataGithubTeamRepositoriesDetailedOutputReference"
    },
    "@cdktf/provider-github.dataGithubTree.DataGithubTree": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/tree github_tree}."
      },
      "fqn": "@cdktf/provider-github.dataGithubTree.DataGithubTree",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/tree github_tree} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-tree/index.ts",
          "line": 155
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubTree.DataGithubTreeConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-tree/index.ts",
        "line": 123
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubTree resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 140
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubTree to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/tree#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubTree that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubTree to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 195
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 211
          },
          "name": "resetRecursive"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 249
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubTree",
      "namespace": "dataGithubTree",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 128
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 183
          },
          "name": "entries",
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubTree.DataGithubTreeEntriesList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 199
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 215
          },
          "name": "recursiveInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 228
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 241
          },
          "name": "treeShaInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 189
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 205
          },
          "name": "recursive",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 221
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 234
          },
          "name": "treeSha",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-tree/index:DataGithubTree"
    },
    "@cdktf/provider-github.dataGithubTree.DataGithubTreeConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubTree.DataGithubTreeConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-tree/index.ts",
        "line": 14
      },
      "name": "DataGithubTreeConfig",
      "namespace": "dataGithubTree",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/tree#repository DataGithubTree#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 29
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/tree#tree_sha DataGithubTree#tree_sha}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 33
          },
          "name": "treeSha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/tree#id DataGithubTree#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/tree#recursive DataGithubTree#recursive}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 25
          },
          "name": "recursive",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/data-github-tree/index:DataGithubTreeConfig"
    },
    "@cdktf/provider-github.dataGithubTree.DataGithubTreeEntries": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubTree.DataGithubTreeEntries",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-tree/index.ts",
        "line": 35
      },
      "name": "DataGithubTreeEntries",
      "namespace": "dataGithubTree",
      "symbolId": "src/data-github-tree/index:DataGithubTreeEntries"
    },
    "@cdktf/provider-github.dataGithubTree.DataGithubTreeEntriesList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubTree.DataGithubTreeEntriesList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-tree/index.ts",
          "line": 108
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-tree/index.ts",
        "line": 101
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 115
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubTree.DataGithubTreeEntriesOutputReference"
            }
          }
        }
      ],
      "name": "DataGithubTreeEntriesList",
      "namespace": "dataGithubTree",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 108
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 108
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 108
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/data-github-tree/index:DataGithubTreeEntriesList"
    },
    "@cdktf/provider-github.dataGithubTree.DataGithubTreeEntriesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubTree.DataGithubTreeEntriesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/data-github-tree/index.ts",
          "line": 56
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-tree/index.ts",
        "line": 47
      },
      "name": "DataGithubTreeEntriesOutputReference",
      "namespace": "dataGithubTree",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 76
          },
          "name": "mode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 81
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 86
          },
          "name": "sha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 91
          },
          "name": "size",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 96
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-tree/index.ts",
            "line": 60
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.dataGithubTree.DataGithubTreeEntries"
          }
        }
      ],
      "symbolId": "src/data-github-tree/index:DataGithubTreeEntriesOutputReference"
    },
    "@cdktf/provider-github.dataGithubUser.DataGithubUser": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/user github_user}."
      },
      "fqn": "@cdktf/provider-github.dataGithubUser.DataGithubUser",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/user github_user} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-user/index.ts",
          "line": 63
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubUser.DataGithubUserConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-user/index.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubUser resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 48
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubUser to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/user#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubUser that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubUser to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 145
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 220
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubUser",
      "namespace": "dataGithubUser",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 36
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 88
          },
          "name": "avatarUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 93
          },
          "name": "bio",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 98
          },
          "name": "blog",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 103
          },
          "name": "company",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 108
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 113
          },
          "name": "email",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 118
          },
          "name": "followers",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 123
          },
          "name": "following",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 128
          },
          "name": "gpgKeys",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 133
          },
          "name": "gravatarId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 154
          },
          "name": "location",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 159
          },
          "name": "login",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 164
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 169
          },
          "name": "nodeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 174
          },
          "name": "publicGists",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 179
          },
          "name": "publicRepos",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 184
          },
          "name": "siteAdmin",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 189
          },
          "name": "sshKeys",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 194
          },
          "name": "suspendedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 199
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 149
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 212
          },
          "name": "usernameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 139
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 205
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-user/index:DataGithubUser"
    },
    "@cdktf/provider-github.dataGithubUser.DataGithubUserConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubUser.DataGithubUserConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-user/index.ts",
        "line": 14
      },
      "name": "DataGithubUserConfig",
      "namespace": "dataGithubUser",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/user#username DataGithubUser#username}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 25
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/user#id DataGithubUser#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-user/index:DataGithubUserConfig"
    },
    "@cdktf/provider-github.dataGithubUserExternalIdentity.DataGithubUserExternalIdentity": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/user_external_identity github_user_external_identity}."
      },
      "fqn": "@cdktf/provider-github.dataGithubUserExternalIdentity.DataGithubUserExternalIdentity",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/user_external_identity github_user_external_identity} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-user-external-identity/index.ts",
          "line": 63
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubUserExternalIdentity.DataGithubUserExternalIdentityConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-user-external-identity/index.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubUserExternalIdentity resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-user-external-identity/index.ts",
            "line": 48
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubUserExternalIdentity to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/user_external_identity#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubUserExternalIdentity that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubUserExternalIdentity to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-user-external-identity/index.ts",
            "line": 95
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-user-external-identity/index.ts",
            "line": 137
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubUserExternalIdentity",
      "namespace": "dataGithubUserExternalIdentity",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user-external-identity/index.ts",
            "line": 36
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user-external-identity/index.ts",
            "line": 104
          },
          "name": "login",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user-external-identity/index.ts",
            "line": 110
          },
          "name": "samlIdentity",
          "type": {
            "fqn": "cdktf.StringMap"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user-external-identity/index.ts",
            "line": 116
          },
          "name": "scimIdentity",
          "type": {
            "fqn": "cdktf.StringMap"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user-external-identity/index.ts",
            "line": 99
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user-external-identity/index.ts",
            "line": 129
          },
          "name": "usernameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-user-external-identity/index.ts",
            "line": 89
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-user-external-identity/index.ts",
            "line": 122
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-user-external-identity/index:DataGithubUserExternalIdentity"
    },
    "@cdktf/provider-github.dataGithubUserExternalIdentity.DataGithubUserExternalIdentityConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubUserExternalIdentity.DataGithubUserExternalIdentityConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-user-external-identity/index.ts",
        "line": 14
      },
      "name": "DataGithubUserExternalIdentityConfig",
      "namespace": "dataGithubUserExternalIdentity",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/user_external_identity#username DataGithubUserExternalIdentity#username}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user-external-identity/index.ts",
            "line": 25
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/user_external_identity#id DataGithubUserExternalIdentity#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-user-external-identity/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-user-external-identity/index:DataGithubUserExternalIdentityConfig"
    },
    "@cdktf/provider-github.dataGithubUsers.DataGithubUsers": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/users github_users}."
      },
      "fqn": "@cdktf/provider-github.dataGithubUsers.DataGithubUsers",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/users github_users} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-github-users/index.ts",
          "line": 63
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dataGithubUsers.DataGithubUsersConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-github-users/index.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DataGithubUsers resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 48
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DataGithubUsers to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/users#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DataGithubUsers that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DataGithubUsers to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 100
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 140
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataGithubUsers",
      "namespace": "dataGithubUsers",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 36
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 88
          },
          "name": "emails",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 109
          },
          "name": "logins",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 114
          },
          "name": "nodeIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 119
          },
          "name": "unknownLogins",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 104
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 132
          },
          "name": "usernamesInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 94
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 125
          },
          "name": "usernames",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/data-github-users/index:DataGithubUsers"
    },
    "@cdktf/provider-github.dataGithubUsers.DataGithubUsersConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dataGithubUsers.DataGithubUsersConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-github-users/index.ts",
        "line": 14
      },
      "name": "DataGithubUsersConfig",
      "namespace": "dataGithubUsers",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/users#usernames DataGithubUsers#usernames}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 25
          },
          "name": "usernames",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/data-sources/users#id DataGithubUsers#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-github-users/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/data-github-users/index:DataGithubUsersConfig"
    },
    "@cdktf/provider-github.dependabotOrganizationSecret.DependabotOrganizationSecret": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret github_dependabot_organization_secret}."
      },
      "fqn": "@cdktf/provider-github.dependabotOrganizationSecret.DependabotOrganizationSecret",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret github_dependabot_organization_secret} Resource."
        },
        "locationInModule": {
          "filename": "src/dependabot-organization-secret/index.ts",
          "line": 89
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dependabotOrganizationSecret.DependabotOrganizationSecretConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/dependabot-organization-secret/index.ts",
        "line": 57
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DependabotOrganizationSecret resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 74
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DependabotOrganizationSecret to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DependabotOrganizationSecret that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DependabotOrganizationSecret to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 130
          },
          "name": "resetEncryptedValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 146
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 162
          },
          "name": "resetPlaintextValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 191
          },
          "name": "resetSelectedRepositoryIds"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 221
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DependabotOrganizationSecret",
      "namespace": "dependabotOrganizationSecret",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 62
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 118
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 200
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 134
          },
          "name": "encryptedValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 150
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 166
          },
          "name": "plaintextValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 179
          },
          "name": "secretNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 195
          },
          "name": "selectedRepositoryIdsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 213
          },
          "name": "visibilityInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 124
          },
          "name": "encryptedValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 140
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 156
          },
          "name": "plaintextValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 172
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 185
          },
          "name": "selectedRepositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 206
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/dependabot-organization-secret/index:DependabotOrganizationSecret"
    },
    "@cdktf/provider-github.dependabotOrganizationSecret.DependabotOrganizationSecretConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dependabotOrganizationSecret.DependabotOrganizationSecretConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/dependabot-organization-secret/index.ts",
        "line": 14
      },
      "name": "DependabotOrganizationSecretConfig",
      "namespace": "dependabotOrganizationSecret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret#secret_name DependabotOrganizationSecret#secret_name}",
            "stability": "stable",
            "summary": "Name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 39
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be one of 'all', 'private' or 'selected'. 'selected_repository_ids' is required if set to 'selected'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret#visibility DependabotOrganizationSecret#visibility}",
            "stability": "stable",
            "summary": "Configures the access that repositories have to the organization secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 51
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret#encrypted_value DependabotOrganizationSecret#encrypted_value}",
            "stability": "stable",
            "summary": "Encrypted value of the secret using the GitHub public key in Base64 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 20
          },
          "name": "encryptedValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret#id DependabotOrganizationSecret#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret#plaintext_value DependabotOrganizationSecret#plaintext_value}",
            "stability": "stable",
            "summary": "Plaintext value of the secret to be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 33
          },
          "name": "plaintextValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret#selected_repository_ids DependabotOrganizationSecret#selected_repository_ids}",
            "stability": "stable",
            "summary": "An array of repository ids that can access the organization secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret/index.ts",
            "line": 45
          },
          "name": "selectedRepositoryIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/dependabot-organization-secret/index:DependabotOrganizationSecretConfig"
    },
    "@cdktf/provider-github.dependabotOrganizationSecretRepositories.DependabotOrganizationSecretRepositories": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret_repositories github_dependabot_organization_secret_repositories}."
      },
      "fqn": "@cdktf/provider-github.dependabotOrganizationSecretRepositories.DependabotOrganizationSecretRepositories",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret_repositories github_dependabot_organization_secret_repositories} Resource."
        },
        "locationInModule": {
          "filename": "src/dependabot-organization-secret-repositories/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dependabotOrganizationSecretRepositories.DependabotOrganizationSecretRepositoriesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/dependabot-organization-secret-repositories/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DependabotOrganizationSecretRepositories resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret-repositories/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DependabotOrganizationSecretRepositories to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret_repositories#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DependabotOrganizationSecretRepositories that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DependabotOrganizationSecretRepositories to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret-repositories/index.ts",
            "line": 104
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret-repositories/index.ts",
            "line": 142
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DependabotOrganizationSecretRepositories",
      "namespace": "dependabotOrganizationSecretRepositories",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret-repositories/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret-repositories/index.ts",
            "line": 108
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret-repositories/index.ts",
            "line": 121
          },
          "name": "secretNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret-repositories/index.ts",
            "line": 134
          },
          "name": "selectedRepositoryIdsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret-repositories/index.ts",
            "line": 98
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret-repositories/index.ts",
            "line": 114
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-organization-secret-repositories/index.ts",
            "line": 127
          },
          "name": "selectedRepositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/dependabot-organization-secret-repositories/index:DependabotOrganizationSecretRepositories"
    },
    "@cdktf/provider-github.dependabotOrganizationSecretRepositories.DependabotOrganizationSecretRepositoriesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dependabotOrganizationSecretRepositories.DependabotOrganizationSecretRepositoriesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/dependabot-organization-secret-repositories/index.ts",
        "line": 14
      },
      "name": "DependabotOrganizationSecretRepositoriesConfig",
      "namespace": "dependabotOrganizationSecretRepositories",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret_repositories#secret_name DependabotOrganizationSecretRepositories#secret_name}",
            "stability": "stable",
            "summary": "Name of the existing secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret-repositories/index.ts",
            "line": 27
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret_repositories#selected_repository_ids DependabotOrganizationSecretRepositories#selected_repository_ids}",
            "stability": "stable",
            "summary": "An array of repository ids that can access the organization secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret-repositories/index.ts",
            "line": 33
          },
          "name": "selectedRepositoryIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_organization_secret_repositories#id DependabotOrganizationSecretRepositories#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-organization-secret-repositories/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/dependabot-organization-secret-repositories/index:DependabotOrganizationSecretRepositoriesConfig"
    },
    "@cdktf/provider-github.dependabotSecret.DependabotSecret": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_secret github_dependabot_secret}."
      },
      "fqn": "@cdktf/provider-github.dependabotSecret.DependabotSecret",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_secret github_dependabot_secret} Resource."
        },
        "locationInModule": {
          "filename": "src/dependabot-secret/index.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.dependabotSecret.DependabotSecretConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/dependabot-secret/index.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a DependabotSecret resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 68
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the DependabotSecret to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_secret#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing DependabotSecret that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the DependabotSecret to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 123
          },
          "name": "resetEncryptedValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 139
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 155
          },
          "name": "resetPlaintextValue"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 198
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DependabotSecret",
      "namespace": "dependabotSecret",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 56
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 111
          },
          "name": "createdAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 190
          },
          "name": "updatedAt",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 127
          },
          "name": "encryptedValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 143
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 159
          },
          "name": "plaintextValueInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 172
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 185
          },
          "name": "secretNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 117
          },
          "name": "encryptedValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 133
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 149
          },
          "name": "plaintextValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 165
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 178
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/dependabot-secret/index:DependabotSecret"
    },
    "@cdktf/provider-github.dependabotSecret.DependabotSecretConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.dependabotSecret.DependabotSecretConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/dependabot-secret/index.ts",
        "line": 14
      },
      "name": "DependabotSecretConfig",
      "namespace": "dependabotSecret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_secret#repository DependabotSecret#repository}",
            "stability": "stable",
            "summary": "Name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 39
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_secret#secret_name DependabotSecret#secret_name}",
            "stability": "stable",
            "summary": "Name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 45
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_secret#encrypted_value DependabotSecret#encrypted_value}",
            "stability": "stable",
            "summary": "Encrypted value of the secret using the GitHub public key in Base64 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 20
          },
          "name": "encryptedValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_secret#id DependabotSecret#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/dependabot_secret#plaintext_value DependabotSecret#plaintext_value}",
            "stability": "stable",
            "summary": "Plaintext value of the secret to be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependabot-secret/index.ts",
            "line": 33
          },
          "name": "plaintextValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/dependabot-secret/index:DependabotSecretConfig"
    },
    "@cdktf/provider-github.emuGroupMapping.EmuGroupMapping": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/emu_group_mapping github_emu_group_mapping}."
      },
      "fqn": "@cdktf/provider-github.emuGroupMapping.EmuGroupMapping",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/emu_group_mapping github_emu_group_mapping} Resource."
        },
        "locationInModule": {
          "filename": "src/emu-group-mapping/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.emuGroupMapping.EmuGroupMappingConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/emu-group-mapping/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a EmuGroupMapping resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the EmuGroupMapping to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/emu_group_mapping#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing EmuGroupMapping that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the EmuGroupMapping to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 122
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 147
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "EmuGroupMapping",
      "namespace": "emuGroupMapping",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 97
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 110
          },
          "name": "groupIdInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 126
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 139
          },
          "name": "teamSlugInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 103
          },
          "name": "groupId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 116
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 132
          },
          "name": "teamSlug",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/emu-group-mapping/index:EmuGroupMapping"
    },
    "@cdktf/provider-github.emuGroupMapping.EmuGroupMappingConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.emuGroupMapping.EmuGroupMappingConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emu-group-mapping/index.ts",
        "line": 14
      },
      "name": "EmuGroupMappingConfig",
      "namespace": "emuGroupMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/emu_group_mapping#group_id EmuGroupMapping#group_id}",
            "stability": "stable",
            "summary": "Integer corresponding to the external group ID to be linked."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 20
          },
          "name": "groupId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/emu_group_mapping#team_slug EmuGroupMapping#team_slug}",
            "stability": "stable",
            "summary": "Slug of the GitHub team."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 33
          },
          "name": "teamSlug",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/emu_group_mapping#id EmuGroupMapping#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emu-group-mapping/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/emu-group-mapping/index:EmuGroupMappingConfig"
    },
    "@cdktf/provider-github.enterpriseOrganization.EnterpriseOrganization": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/enterprise_organization github_enterprise_organization}."
      },
      "fqn": "@cdktf/provider-github.enterpriseOrganization.EnterpriseOrganization",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/enterprise_organization github_enterprise_organization} Resource."
        },
        "locationInModule": {
          "filename": "src/enterprise-organization/index.ts",
          "line": 95
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.enterpriseOrganization.EnterpriseOrganizationConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/enterprise-organization/index.ts",
        "line": 63
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a EnterpriseOrganization resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 80
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the EnterpriseOrganization to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/enterprise_organization#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing EnterpriseOrganization that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the EnterpriseOrganization to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 158
          },
          "name": "resetDescription"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 174
          },
          "name": "resetDisplayName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 203
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 228
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "EnterpriseOrganization",
      "namespace": "enterpriseOrganization",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 68
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 133
          },
          "name": "adminLoginsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 146
          },
          "name": "billingEmailInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 162
          },
          "name": "descriptionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 178
          },
          "name": "displayNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 191
          },
          "name": "enterpriseIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 207
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 220
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 126
          },
          "name": "adminLogins",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 139
          },
          "name": "billingEmail",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 152
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 168
          },
          "name": "displayName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 184
          },
          "name": "enterpriseId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 197
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 213
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/enterprise-organization/index:EnterpriseOrganization"
    },
    "@cdktf/provider-github.enterpriseOrganization.EnterpriseOrganizationConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.enterpriseOrganization.EnterpriseOrganizationConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/enterprise-organization/index.ts",
        "line": 14
      },
      "name": "EnterpriseOrganizationConfig",
      "namespace": "enterpriseOrganization",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/enterprise_organization#admin_logins EnterpriseOrganization#admin_logins}",
            "stability": "stable",
            "summary": "List of organization owner usernames."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 20
          },
          "name": "adminLogins",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/enterprise_organization#billing_email EnterpriseOrganization#billing_email}",
            "stability": "stable",
            "summary": "The billing email address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 26
          },
          "name": "billingEmail",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/enterprise_organization#enterprise_id EnterpriseOrganization#enterprise_id}",
            "stability": "stable",
            "summary": "The ID of the enterprise."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 44
          },
          "name": "enterpriseId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/enterprise_organization#name EnterpriseOrganization#name}",
            "stability": "stable",
            "summary": "The name of the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 57
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/enterprise_organization#description EnterpriseOrganization#description}",
            "stability": "stable",
            "summary": "The description of the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 32
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/enterprise_organization#display_name EnterpriseOrganization#display_name}",
            "stability": "stable",
            "summary": "The display name of the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 38
          },
          "name": "displayName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/enterprise_organization#id EnterpriseOrganization#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/enterprise-organization/index.ts",
            "line": 51
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/enterprise-organization/index:EnterpriseOrganizationConfig"
    },
    "@cdktf/provider-github.issue.Issue": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue github_issue}."
      },
      "fqn": "@cdktf/provider-github.issue.Issue",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue github_issue} Resource."
        },
        "locationInModule": {
          "filename": "src/issue/index.ts",
          "line": 95
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.issue.IssueConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/issue/index.ts",
        "line": 63
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a Issue resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 80
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the Issue to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing Issue that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the Issue to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 132
          },
          "name": "resetAssignees"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 148
          },
          "name": "resetBody"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 169
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 190
          },
          "name": "resetLabels"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 206
          },
          "name": "resetMilestoneNumber"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 249
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Issue",
      "namespace": "issue",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 68
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 157
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 178
          },
          "name": "issueId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 215
          },
          "name": "number",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 136
          },
          "name": "assigneesInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 152
          },
          "name": "bodyInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 173
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 194
          },
          "name": "labelsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 210
          },
          "name": "milestoneNumberInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 228
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 241
          },
          "name": "titleInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 126
          },
          "name": "assignees",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 142
          },
          "name": "body",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 163
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 184
          },
          "name": "labels",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 200
          },
          "name": "milestoneNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 221
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 234
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/issue/index:Issue"
    },
    "@cdktf/provider-github.issue.IssueConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.issue.IssueConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/issue/index.ts",
        "line": 14
      },
      "name": "IssueConfig",
      "namespace": "issue",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue#repository Issue#repository}",
            "stability": "stable",
            "summary": "The GitHub repository name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 51
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue#title Issue#title}",
            "stability": "stable",
            "summary": "Title of the issue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 57
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue#assignees Issue#assignees}",
            "stability": "stable",
            "summary": "List of Logins to assign to the issue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 20
          },
          "name": "assignees",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue#body Issue#body}",
            "stability": "stable",
            "summary": "Body of the issue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 26
          },
          "name": "body",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue#id Issue#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue#labels Issue#labels}",
            "stability": "stable",
            "summary": "List of labels to attach to the issue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 39
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue#milestone_number Issue#milestone_number}",
            "stability": "stable",
            "summary": "Milestone number to assign to the issue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue/index.ts",
            "line": 45
          },
          "name": "milestoneNumber",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/issue/index:IssueConfig"
    },
    "@cdktf/provider-github.issueLabel.IssueLabel": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue_label github_issue_label}."
      },
      "fqn": "@cdktf/provider-github.issueLabel.IssueLabel",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue_label github_issue_label} Resource."
        },
        "locationInModule": {
          "filename": "src/issue-label/index.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.issueLabel.IssueLabelConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/issue-label/index.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a IssueLabel resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 68
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the IssueLabel to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue_label#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing IssueLabel that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the IssueLabel to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 131
          },
          "name": "resetDescription"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 152
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 195
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "IssueLabel",
      "namespace": "issueLabel",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 56
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 140
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 187
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 119
          },
          "name": "colorInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 135
          },
          "name": "descriptionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 156
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 169
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 182
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 112
          },
          "name": "color",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 125
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 146
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 162
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 175
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/issue-label/index:IssueLabel"
    },
    "@cdktf/provider-github.issueLabel.IssueLabelConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.issueLabel.IssueLabelConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/issue-label/index.ts",
        "line": 14
      },
      "name": "IssueLabelConfig",
      "namespace": "issueLabel",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue_label#color IssueLabel#color}",
            "stability": "stable",
            "summary": "A 6 character hex code, without the leading '#', identifying the color of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 20
          },
          "name": "color",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue_label#name IssueLabel#name}",
            "stability": "stable",
            "summary": "The name of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 39
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue_label#repository IssueLabel#repository}",
            "stability": "stable",
            "summary": "The GitHub repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 45
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue_label#description IssueLabel#description}",
            "stability": "stable",
            "summary": "A short description of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 26
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/issue_label#id IssueLabel#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/issue-label/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/issue-label/index:IssueLabelConfig"
    },
    "@cdktf/provider-github.membership.Membership": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/membership github_membership}."
      },
      "fqn": "@cdktf/provider-github.membership.Membership",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/membership github_membership} Resource."
        },
        "locationInModule": {
          "filename": "src/membership/index.ts",
          "line": 77
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.membership.MembershipConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/membership/index.ts",
        "line": 45
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a Membership resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 62
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the Membership to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/membership#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing Membership that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the Membership to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 111
          },
          "name": "resetDowngradeOnDestroy"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 132
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 148
          },
          "name": "resetRole"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 173
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Membership",
      "namespace": "membership",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 50
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 120
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 115
          },
          "name": "downgradeOnDestroyInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 136
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 152
          },
          "name": "roleInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 165
          },
          "name": "usernameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 105
          },
          "name": "downgradeOnDestroy",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 126
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 142
          },
          "name": "role",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 158
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/membership/index:Membership"
    },
    "@cdktf/provider-github.membership.MembershipConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.membership.MembershipConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/membership/index.ts",
        "line": 14
      },
      "name": "MembershipConfig",
      "namespace": "membership",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/membership#username Membership#username}",
            "stability": "stable",
            "summary": "The user to add to the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 39
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is useful when wanting to downgrade admins while keeping them in the organization\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/membership#downgrade_on_destroy Membership#downgrade_on_destroy}",
            "stability": "stable",
            "summary": "Instead of removing the member from the org, you can choose to downgrade their membership to 'member' when this resource is destroyed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 20
          },
          "name": "downgradeOnDestroy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/membership#id Membership#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/membership#role Membership#role}",
            "stability": "stable",
            "summary": "The role of the user within the organization. Must be one of 'member' or 'admin'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/membership/index.ts",
            "line": 33
          },
          "name": "role",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/membership/index:MembershipConfig"
    },
    "@cdktf/provider-github.organizationBlock.OrganizationBlock": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_block github_organization_block}."
      },
      "fqn": "@cdktf/provider-github.organizationBlock.OrganizationBlock",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_block github_organization_block} Resource."
        },
        "locationInModule": {
          "filename": "src/organization-block/index.ts",
          "line": 65
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.organizationBlock.OrganizationBlockConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-block/index.ts",
        "line": 33
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a OrganizationBlock resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/organization-block/index.ts",
            "line": 50
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the OrganizationBlock to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_block#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing OrganizationBlock that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the OrganizationBlock to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-block/index.ts",
            "line": 102
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-block/index.ts",
            "line": 127
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "OrganizationBlock",
      "namespace": "organizationBlock",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-block/index.ts",
            "line": 38
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-block/index.ts",
            "line": 90
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-block/index.ts",
            "line": 106
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-block/index.ts",
            "line": 119
          },
          "name": "usernameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-block/index.ts",
            "line": 96
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-block/index.ts",
            "line": 112
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/organization-block/index:OrganizationBlock"
    },
    "@cdktf/provider-github.organizationBlock.OrganizationBlockConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationBlock.OrganizationBlockConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-block/index.ts",
        "line": 14
      },
      "name": "OrganizationBlockConfig",
      "namespace": "organizationBlock",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_block#username OrganizationBlock#username}",
            "stability": "stable",
            "summary": "The name of the user to block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-block/index.ts",
            "line": 27
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_block#id OrganizationBlock#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-block/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/organization-block/index:OrganizationBlockConfig"
    },
    "@cdktf/provider-github.organizationCustomRole.OrganizationCustomRole": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_custom_role github_organization_custom_role}."
      },
      "fqn": "@cdktf/provider-github.organizationCustomRole.OrganizationCustomRole",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_custom_role github_organization_custom_role} Resource."
        },
        "locationInModule": {
          "filename": "src/organization-custom-role/index.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.organizationCustomRole.OrganizationCustomRoleConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-custom-role/index.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a OrganizationCustomRole resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 68
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the OrganizationCustomRole to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_custom_role#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing OrganizationCustomRole that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the OrganizationCustomRole to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 131
          },
          "name": "resetDescription"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 147
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 185
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "OrganizationCustomRole",
      "namespace": "organizationCustomRole",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 56
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 119
          },
          "name": "baseRoleInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 135
          },
          "name": "descriptionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 151
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 164
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 177
          },
          "name": "permissionsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 112
          },
          "name": "baseRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 125
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 141
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 157
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 170
          },
          "name": "permissions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/organization-custom-role/index:OrganizationCustomRole"
    },
    "@cdktf/provider-github.organizationCustomRole.OrganizationCustomRoleConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationCustomRole.OrganizationCustomRoleConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-custom-role/index.ts",
        "line": 14
      },
      "name": "OrganizationCustomRoleConfig",
      "namespace": "organizationCustomRole",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_custom_role#base_role OrganizationCustomRole#base_role}",
            "stability": "stable",
            "summary": "The base role for the custom repository role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 20
          },
          "name": "baseRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_custom_role#name OrganizationCustomRole#name}",
            "stability": "stable",
            "summary": "The organization custom repository role to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 39
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_custom_role#permissions OrganizationCustomRole#permissions}",
            "stability": "stable",
            "summary": "The permissions for the custom repository role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 45
          },
          "name": "permissions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_custom_role#description OrganizationCustomRole#description}",
            "stability": "stable",
            "summary": "The description of the custom repository role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 26
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_custom_role#id OrganizationCustomRole#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-custom-role/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/organization-custom-role/index:OrganizationCustomRoleConfig"
    },
    "@cdktf/provider-github.organizationProject.OrganizationProject": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_project github_organization_project}."
      },
      "fqn": "@cdktf/provider-github.organizationProject.OrganizationProject",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_project github_organization_project} Resource."
        },
        "locationInModule": {
          "filename": "src/organization-project/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.organizationProject.OrganizationProjectConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-project/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a OrganizationProject resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the OrganizationProject to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_project#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing OrganizationProject that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the OrganizationProject to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 104
          },
          "name": "resetBody"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 125
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 155
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "OrganizationProject",
      "namespace": "organizationProject",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 113
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 147
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 108
          },
          "name": "bodyInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 129
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 142
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 98
          },
          "name": "body",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 119
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 135
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/organization-project/index:OrganizationProject"
    },
    "@cdktf/provider-github.organizationProject.OrganizationProjectConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationProject.OrganizationProjectConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-project/index.ts",
        "line": 14
      },
      "name": "OrganizationProjectConfig",
      "namespace": "organizationProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_project#name OrganizationProject#name}",
            "stability": "stable",
            "summary": "The name of the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 33
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_project#body OrganizationProject#body}",
            "stability": "stable",
            "summary": "The body of the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 20
          },
          "name": "body",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_project#id OrganizationProject#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-project/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/organization-project/index:OrganizationProjectConfig"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRuleset": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset github_organization_ruleset}."
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRuleset",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset github_organization_ruleset} Resource."
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 2130
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 2098
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a OrganizationRuleset resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2115
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the OrganizationRuleset to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing OrganizationRuleset that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the OrganizationRuleset to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2234
          },
          "name": "putBypassActors",
          "parameters": [
            {
              "name": "value",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "cdktf.IResolvable"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetBypassActors"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2250
          },
          "name": "putConditions",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2266
          },
          "name": "putRules",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRules"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2237
          },
          "name": "resetBypassActors"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2253
          },
          "name": "resetConditions"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2185
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2278
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "OrganizationRuleset",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2103
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2231
          },
          "name": "bypassActors",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetBypassActorsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2247
          },
          "name": "conditions",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2173
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2207
          },
          "name": "nodeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2263
          },
          "name": "rules",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2212
          },
          "name": "rulesetId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2241
          },
          "name": "bypassActorsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetBypassActors"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2257
          },
          "name": "conditionsInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditions"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2168
          },
          "name": "enforcementInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2189
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2202
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2270
          },
          "name": "rulesInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRules"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2225
          },
          "name": "targetInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2161
          },
          "name": "enforcement",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2179
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2195
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2218
          },
          "name": "target",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRuleset"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetBypassActors": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetBypassActors",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 59
      },
      "name": "OrganizationRulesetBypassActors",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "When `actor_type` is `OrganizationAdmin`, this should be set to `1`.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#actor_id OrganizationRuleset#actor_id}",
            "stability": "stable",
            "summary": "The ID of the actor that can bypass a ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 65
          },
          "name": "actorId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#actor_type OrganizationRuleset#actor_type}",
            "stability": "stable",
            "summary": "The type of actor that can bypass a ruleset. Can be one of: `RepositoryRole`, `Team`, `Integration`, `OrganizationAdmin`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 71
          },
          "name": "actorType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "pull_request means that an actor can only bypass rules on pull requests. Can be one of: `always`, `pull_request`.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#bypass_mode OrganizationRuleset#bypass_mode}",
            "stability": "stable",
            "summary": "When the specified actor can bypass the ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 77
          },
          "name": "bypassMode",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetBypassActors"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetBypassActorsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetBypassActorsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 196
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 188
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 203
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetBypassActorsOutputReference"
            }
          }
        }
      ],
      "name": "OrganizationRulesetBypassActorsList",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 196
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 196
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 196
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 189
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetBypassActors"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetBypassActorsList"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetBypassActorsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetBypassActorsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 102
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 92
      },
      "name": "OrganizationRulesetBypassActorsOutputReference",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 157
          },
          "name": "actorIdInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 170
          },
          "name": "actorTypeInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 183
          },
          "name": "bypassModeInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 150
          },
          "name": "actorId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 163
          },
          "name": "actorType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 176
          },
          "name": "bypassMode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 106
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetBypassActors"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetBypassActorsOutputReference"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditions": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 416
      },
      "name": "OrganizationRulesetConditions",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#ref_name OrganizationRuleset#ref_name}",
            "stability": "stable",
            "summary": "ref_name block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 428
          },
          "name": "refName",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRefName"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#repository_id OrganizationRuleset#repository_id}",
            "stability": "stable",
            "summary": "The repository IDs that the ruleset applies to. One of these IDs must match for the condition to pass."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 422
          },
          "name": "repositoryId",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#repository_name OrganizationRuleset#repository_name}",
            "stability": "stable",
            "summary": "repository_name block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 434
          },
          "name": "repositoryName",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRepositoryName"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetConditions"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 456
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 449
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 514
          },
          "name": "putRefName",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRefName"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 527
          },
          "name": "putRepositoryName",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRepositoryName"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 501
          },
          "name": "resetRepositoryId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 530
          },
          "name": "resetRepositoryName"
        }
      ],
      "name": "OrganizationRulesetConditionsOutputReference",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 511
          },
          "name": "refName",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRefNameOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 524
          },
          "name": "repositoryName",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRepositoryNameOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 518
          },
          "name": "refNameInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRefName"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 505
          },
          "name": "repositoryIdInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 534
          },
          "name": "repositoryNameInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRepositoryName"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 495
          },
          "name": "repositoryId",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 460
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditions"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetConditionsOutputReference"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRefName": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRefName",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 207
      },
      "name": "OrganizationRulesetConditionsRefName",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#exclude OrganizationRuleset#exclude}",
            "stability": "stable",
            "summary": "Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 213
          },
          "name": "exclude",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#include OrganizationRuleset#include}",
            "stability": "stable",
            "summary": "Array of ref names or patterns to include."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 219
          },
          "name": "include",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetConditionsRefName"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRefNameOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRefNameOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 240
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 233
      },
      "name": "OrganizationRulesetConditionsRefNameOutputReference",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 280
          },
          "name": "excludeInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 293
          },
          "name": "includeInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 273
          },
          "name": "exclude",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 286
          },
          "name": "include",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 244
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRefName"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetConditionsRefNameOutputReference"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRepositoryName": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRepositoryName",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 297
      },
      "name": "OrganizationRulesetConditionsRepositoryName",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#exclude OrganizationRuleset#exclude}",
            "stability": "stable",
            "summary": "Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 303
          },
          "name": "exclude",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "One of these patterns must match for the condition to pass. Also accepts `~ALL` to include all repositories.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#include OrganizationRuleset#include}",
            "stability": "stable",
            "summary": "Array of repository names or patterns to include."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 309
          },
          "name": "include",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#protected OrganizationRuleset#protected}",
            "stability": "stable",
            "summary": "Whether renaming of target repositories is prevented."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 315
          },
          "name": "protected",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetConditionsRepositoryName"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRepositoryNameOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRepositoryNameOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 337
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 330
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 408
          },
          "name": "resetProtected"
        }
      ],
      "name": "OrganizationRulesetConditionsRepositoryNameOutputReference",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 383
          },
          "name": "excludeInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 396
          },
          "name": "includeInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 412
          },
          "name": "protectedInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 376
          },
          "name": "exclude",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 389
          },
          "name": "include",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 402
          },
          "name": "protected",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 341
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditionsRepositoryName"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetConditionsRepositoryNameOutputReference"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 14
      },
      "name": "OrganizationRulesetConfig",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#enforcement OrganizationRuleset#enforcement}",
            "stability": "stable",
            "summary": "Possible values for Enforcement are `disabled`, `active`, `evaluate`. Note: `evaluate` is currently only supported for owners of type `organization`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 20
          },
          "name": "enforcement",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#name OrganizationRuleset#name}",
            "stability": "stable",
            "summary": "The name of the ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 33
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#rules OrganizationRuleset#rules}",
            "stability": "stable",
            "summary": "rules block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 57
          },
          "name": "rules",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRules"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#target OrganizationRuleset#target}",
            "stability": "stable",
            "summary": "Possible values are `branch` and `tag`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 39
          },
          "name": "target",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#bypass_actors OrganizationRuleset#bypass_actors}",
            "stability": "stable",
            "summary": "bypass_actors block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 45
          },
          "name": "bypassActors",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetBypassActors"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#conditions OrganizationRuleset#conditions}",
            "stability": "stable",
            "summary": "conditions block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 51
          },
          "name": "conditions",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetConditions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#id OrganizationRuleset#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetConfig"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRules": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRules",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 1679
      },
      "name": "OrganizationRulesetRules",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#branch_name_pattern OrganizationRuleset#branch_name_pattern}",
            "stability": "stable",
            "summary": "branch_name_pattern block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1721
          },
          "name": "branchNamePattern",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesBranchNamePattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#commit_author_email_pattern OrganizationRuleset#commit_author_email_pattern}",
            "stability": "stable",
            "summary": "commit_author_email_pattern block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1727
          },
          "name": "commitAuthorEmailPattern",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitAuthorEmailPattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#commit_message_pattern OrganizationRuleset#commit_message_pattern}",
            "stability": "stable",
            "summary": "commit_message_pattern block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1733
          },
          "name": "commitMessagePattern",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitMessagePattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#committer_email_pattern OrganizationRuleset#committer_email_pattern}",
            "stability": "stable",
            "summary": "committer_email_pattern block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1739
          },
          "name": "committerEmailPattern",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitterEmailPattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#creation OrganizationRuleset#creation}",
            "stability": "stable",
            "summary": "Only allow users with bypass permission to create matching refs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1685
          },
          "name": "creation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#deletion OrganizationRuleset#deletion}",
            "stability": "stable",
            "summary": "Only allow users with bypass permissions to delete matching refs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1691
          },
          "name": "deletion",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#non_fast_forward OrganizationRuleset#non_fast_forward}",
            "stability": "stable",
            "summary": "Prevent users with push access from force pushing to branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1697
          },
          "name": "nonFastForward",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#pull_request OrganizationRuleset#pull_request}",
            "stability": "stable",
            "summary": "pull_request block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1745
          },
          "name": "pullRequest",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesPullRequest"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#required_linear_history OrganizationRuleset#required_linear_history}",
            "stability": "stable",
            "summary": "Prevent merge commits from being pushed to matching branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1703
          },
          "name": "requiredLinearHistory",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#required_signatures OrganizationRuleset#required_signatures}",
            "stability": "stable",
            "summary": "Commits pushed to matching branches must have verified signatures."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1709
          },
          "name": "requiredSignatures",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#required_status_checks OrganizationRuleset#required_status_checks}",
            "stability": "stable",
            "summary": "required_status_checks block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1751
          },
          "name": "requiredStatusChecks",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecks"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#tag_name_pattern OrganizationRuleset#tag_name_pattern}",
            "stability": "stable",
            "summary": "tag_name_pattern block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1757
          },
          "name": "tagNamePattern",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesTagNamePattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#update OrganizationRuleset#update}",
            "stability": "stable",
            "summary": "Only allow users with bypass permission to update matching refs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1715
          },
          "name": "update",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRules"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesBranchNamePattern": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesBranchNamePattern",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 538
      },
      "name": "OrganizationRulesetRulesBranchNamePattern",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#operator OrganizationRuleset#operator}",
            "stability": "stable",
            "summary": "The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 556
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#pattern OrganizationRuleset#pattern}",
            "stability": "stable",
            "summary": "The pattern to match with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 562
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#name OrganizationRuleset#name}",
            "stability": "stable",
            "summary": "How this rule will appear to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 544
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#negate OrganizationRuleset#negate}",
            "stability": "stable",
            "summary": "If true, the rule will fail if the pattern matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 550
          },
          "name": "negate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesBranchNamePattern"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesBranchNamePatternOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesBranchNamePatternOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 585
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 578
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 636
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 652
          },
          "name": "resetNegate"
        }
      ],
      "name": "OrganizationRulesetRulesBranchNamePatternOutputReference",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 640
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 656
          },
          "name": "negateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 669
          },
          "name": "operatorInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 682
          },
          "name": "patternInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 630
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 646
          },
          "name": "negate",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 662
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 675
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 589
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesBranchNamePattern"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesBranchNamePatternOutputReference"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitAuthorEmailPattern": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitAuthorEmailPattern",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 686
      },
      "name": "OrganizationRulesetRulesCommitAuthorEmailPattern",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#operator OrganizationRuleset#operator}",
            "stability": "stable",
            "summary": "The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 704
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#pattern OrganizationRuleset#pattern}",
            "stability": "stable",
            "summary": "The pattern to match with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 710
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#name OrganizationRuleset#name}",
            "stability": "stable",
            "summary": "How this rule will appear to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 692
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#negate OrganizationRuleset#negate}",
            "stability": "stable",
            "summary": "If true, the rule will fail if the pattern matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 698
          },
          "name": "negate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesCommitAuthorEmailPattern"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitAuthorEmailPatternOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitAuthorEmailPatternOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 733
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 726
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 784
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 800
          },
          "name": "resetNegate"
        }
      ],
      "name": "OrganizationRulesetRulesCommitAuthorEmailPatternOutputReference",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 788
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 804
          },
          "name": "negateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 817
          },
          "name": "operatorInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 830
          },
          "name": "patternInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 778
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 794
          },
          "name": "negate",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 810
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 823
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 737
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitAuthorEmailPattern"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesCommitAuthorEmailPatternOutputReference"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitMessagePattern": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitMessagePattern",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 834
      },
      "name": "OrganizationRulesetRulesCommitMessagePattern",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#operator OrganizationRuleset#operator}",
            "stability": "stable",
            "summary": "The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 852
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#pattern OrganizationRuleset#pattern}",
            "stability": "stable",
            "summary": "The pattern to match with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 858
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#name OrganizationRuleset#name}",
            "stability": "stable",
            "summary": "How this rule will appear to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 840
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#negate OrganizationRuleset#negate}",
            "stability": "stable",
            "summary": "If true, the rule will fail if the pattern matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 846
          },
          "name": "negate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesCommitMessagePattern"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitMessagePatternOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitMessagePatternOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 881
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 874
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 932
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 948
          },
          "name": "resetNegate"
        }
      ],
      "name": "OrganizationRulesetRulesCommitMessagePatternOutputReference",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 936
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 952
          },
          "name": "negateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 965
          },
          "name": "operatorInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 978
          },
          "name": "patternInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 926
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 942
          },
          "name": "negate",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 958
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 971
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 885
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitMessagePattern"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesCommitMessagePatternOutputReference"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitterEmailPattern": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitterEmailPattern",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 982
      },
      "name": "OrganizationRulesetRulesCommitterEmailPattern",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#operator OrganizationRuleset#operator}",
            "stability": "stable",
            "summary": "The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1000
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#pattern OrganizationRuleset#pattern}",
            "stability": "stable",
            "summary": "The pattern to match with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1006
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#name OrganizationRuleset#name}",
            "stability": "stable",
            "summary": "How this rule will appear to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 988
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#negate OrganizationRuleset#negate}",
            "stability": "stable",
            "summary": "If true, the rule will fail if the pattern matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 994
          },
          "name": "negate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesCommitterEmailPattern"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitterEmailPatternOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitterEmailPatternOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 1029
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 1022
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1080
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1096
          },
          "name": "resetNegate"
        }
      ],
      "name": "OrganizationRulesetRulesCommitterEmailPatternOutputReference",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1084
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1100
          },
          "name": "negateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1113
          },
          "name": "operatorInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1126
          },
          "name": "patternInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1074
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1090
          },
          "name": "negate",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1106
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1119
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1033
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitterEmailPattern"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesCommitterEmailPatternOutputReference"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 1789
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 1782
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1987
          },
          "name": "putBranchNamePattern",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesBranchNamePattern"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2003
          },
          "name": "putCommitAuthorEmailPattern",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitAuthorEmailPattern"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2019
          },
          "name": "putCommitMessagePattern",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitMessagePattern"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2035
          },
          "name": "putCommitterEmailPattern",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitterEmailPattern"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2051
          },
          "name": "putPullRequest",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesPullRequest"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2067
          },
          "name": "putRequiredStatusChecks",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecks"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2083
          },
          "name": "putTagNamePattern",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesTagNamePattern"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1990
          },
          "name": "resetBranchNamePattern"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2006
          },
          "name": "resetCommitAuthorEmailPattern"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2022
          },
          "name": "resetCommitMessagePattern"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2038
          },
          "name": "resetCommitterEmailPattern"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1894
          },
          "name": "resetCreation"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1910
          },
          "name": "resetDeletion"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1926
          },
          "name": "resetNonFastForward"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2054
          },
          "name": "resetPullRequest"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1942
          },
          "name": "resetRequiredLinearHistory"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1958
          },
          "name": "resetRequiredSignatures"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2070
          },
          "name": "resetRequiredStatusChecks"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2086
          },
          "name": "resetTagNamePattern"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1974
          },
          "name": "resetUpdate"
        }
      ],
      "name": "OrganizationRulesetRulesOutputReference",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1984
          },
          "name": "branchNamePattern",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesBranchNamePatternOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2000
          },
          "name": "commitAuthorEmailPattern",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitAuthorEmailPatternOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2016
          },
          "name": "commitMessagePattern",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitMessagePatternOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2032
          },
          "name": "committerEmailPattern",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitterEmailPatternOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2048
          },
          "name": "pullRequest",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesPullRequestOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2064
          },
          "name": "requiredStatusChecks",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2080
          },
          "name": "tagNamePattern",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesTagNamePatternOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1994
          },
          "name": "branchNamePatternInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesBranchNamePattern"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2010
          },
          "name": "commitAuthorEmailPatternInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitAuthorEmailPattern"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2026
          },
          "name": "commitMessagePatternInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitMessagePattern"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2042
          },
          "name": "committerEmailPatternInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesCommitterEmailPattern"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1898
          },
          "name": "creationInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1914
          },
          "name": "deletionInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1930
          },
          "name": "nonFastForwardInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2058
          },
          "name": "pullRequestInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesPullRequest"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1946
          },
          "name": "requiredLinearHistoryInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1962
          },
          "name": "requiredSignaturesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2074
          },
          "name": "requiredStatusChecksInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecks"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 2090
          },
          "name": "tagNamePatternInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesTagNamePattern"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1978
          },
          "name": "updateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1888
          },
          "name": "creation",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1904
          },
          "name": "deletion",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1920
          },
          "name": "nonFastForward",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1936
          },
          "name": "requiredLinearHistory",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1952
          },
          "name": "requiredSignatures",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1968
          },
          "name": "update",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1793
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRules"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesOutputReference"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesPullRequest": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesPullRequest",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 1130
      },
      "name": "OrganizationRulesetRulesPullRequest",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#dismiss_stale_reviews_on_push OrganizationRuleset#dismiss_stale_reviews_on_push}",
            "stability": "stable",
            "summary": "New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1136
          },
          "name": "dismissStaleReviewsOnPush",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#require_code_owner_review OrganizationRuleset#require_code_owner_review}",
            "stability": "stable",
            "summary": "Require an approving review in pull requests that modify files that have a designated code owner. Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1142
          },
          "name": "requireCodeOwnerReview",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#required_approving_review_count OrganizationRuleset#required_approving_review_count}",
            "stability": "stable",
            "summary": "The number of approving reviews that are required before a pull request can be merged. Defaults to `0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1154
          },
          "name": "requiredApprovingReviewCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#required_review_thread_resolution OrganizationRuleset#required_review_thread_resolution}",
            "stability": "stable",
            "summary": "All conversations on code must be resolved before a pull request can be merged. Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1160
          },
          "name": "requiredReviewThreadResolution",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Defaults to `false`.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#require_last_push_approval OrganizationRuleset#require_last_push_approval}",
            "stability": "stable",
            "summary": "Whether the most recent reviewable push must be approved by someone other than the person who pushed it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1148
          },
          "name": "requireLastPushApproval",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesPullRequest"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesPullRequestOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesPullRequestOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 1184
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 1177
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1241
          },
          "name": "resetDismissStaleReviewsOnPush"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1257
          },
          "name": "resetRequireCodeOwnerReview"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1289
          },
          "name": "resetRequiredApprovingReviewCount"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1305
          },
          "name": "resetRequiredReviewThreadResolution"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1273
          },
          "name": "resetRequireLastPushApproval"
        }
      ],
      "name": "OrganizationRulesetRulesPullRequestOutputReference",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1245
          },
          "name": "dismissStaleReviewsOnPushInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1261
          },
          "name": "requireCodeOwnerReviewInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1293
          },
          "name": "requiredApprovingReviewCountInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1309
          },
          "name": "requiredReviewThreadResolutionInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1277
          },
          "name": "requireLastPushApprovalInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1235
          },
          "name": "dismissStaleReviewsOnPush",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1251
          },
          "name": "requireCodeOwnerReview",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1283
          },
          "name": "requiredApprovingReviewCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1299
          },
          "name": "requiredReviewThreadResolution",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1267
          },
          "name": "requireLastPushApproval",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1188
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesPullRequest"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesPullRequestOutputReference"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecks": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecks",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 1438
      },
      "name": "OrganizationRulesetRulesRequiredStatusChecks",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#required_check OrganizationRuleset#required_check}",
            "stability": "stable",
            "summary": "required_check block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1450
          },
          "name": "requiredCheck",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksRequiredCheck"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This setting will not take effect unless at least one status check is enabled. Defaults to `false`.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#strict_required_status_checks_policy OrganizationRuleset#strict_required_status_checks_policy}",
            "stability": "stable",
            "summary": "Whether pull requests targeting a matching branch must be tested with the latest code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1444
          },
          "name": "strictRequiredStatusChecksPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesRequiredStatusChecks"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 1471
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 1464
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1523
          },
          "name": "putRequiredCheck",
          "parameters": [
            {
              "name": "value",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "cdktf.IResolvable"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksRequiredCheck"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1510
          },
          "name": "resetStrictRequiredStatusChecksPolicy"
        }
      ],
      "name": "OrganizationRulesetRulesRequiredStatusChecksOutputReference",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1520
          },
          "name": "requiredCheck",
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksRequiredCheckList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1527
          },
          "name": "requiredCheckInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksRequiredCheck"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1514
          },
          "name": "strictRequiredStatusChecksPolicyInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1504
          },
          "name": "strictRequiredStatusChecksPolicy",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1475
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecks"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesRequiredStatusChecksOutputReference"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksRequiredCheck": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksRequiredCheck",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 1313
      },
      "name": "OrganizationRulesetRulesRequiredStatusChecksRequiredCheck",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#context OrganizationRuleset#context}",
            "stability": "stable",
            "summary": "The status check context name that must be present on the commit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1319
          },
          "name": "context",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#integration_id OrganizationRuleset#integration_id}",
            "stability": "stable",
            "summary": "The optional integration ID that this status check must originate from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1325
          },
          "name": "integrationId",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesRequiredStatusChecksRequiredCheck"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksRequiredCheckList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksRequiredCheckList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 1427
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 1419
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1434
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksRequiredCheckOutputReference"
            }
          }
        }
      ],
      "name": "OrganizationRulesetRulesRequiredStatusChecksRequiredCheckList",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1427
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1427
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1427
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1420
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksRequiredCheck"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesRequiredStatusChecksRequiredCheckList"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksRequiredCheckOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksRequiredCheckOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 1349
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 1339
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1410
          },
          "name": "resetIntegrationId"
        }
      ],
      "name": "OrganizationRulesetRulesRequiredStatusChecksRequiredCheckOutputReference",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1398
          },
          "name": "contextInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1414
          },
          "name": "integrationIdInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1391
          },
          "name": "context",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1404
          },
          "name": "integrationId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1353
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesRequiredStatusChecksRequiredCheck"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesRequiredStatusChecksRequiredCheckOutputReference"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesTagNamePattern": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesTagNamePattern",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 1531
      },
      "name": "OrganizationRulesetRulesTagNamePattern",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#operator OrganizationRuleset#operator}",
            "stability": "stable",
            "summary": "The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1549
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#pattern OrganizationRuleset#pattern}",
            "stability": "stable",
            "summary": "The pattern to match with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1555
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#name OrganizationRuleset#name}",
            "stability": "stable",
            "summary": "How this rule will appear to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1537
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_ruleset#negate OrganizationRuleset#negate}",
            "stability": "stable",
            "summary": "If true, the rule will fail if the pattern matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1543
          },
          "name": "negate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesTagNamePattern"
    },
    "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesTagNamePatternOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesTagNamePatternOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-ruleset/index.ts",
          "line": 1578
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-ruleset/index.ts",
        "line": 1571
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1629
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1645
          },
          "name": "resetNegate"
        }
      ],
      "name": "OrganizationRulesetRulesTagNamePatternOutputReference",
      "namespace": "organizationRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1633
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1649
          },
          "name": "negateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1662
          },
          "name": "operatorInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1675
          },
          "name": "patternInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1623
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1639
          },
          "name": "negate",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1655
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1668
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-ruleset/index.ts",
            "line": 1582
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationRuleset.OrganizationRulesetRulesTagNamePattern"
          }
        }
      ],
      "symbolId": "src/organization-ruleset/index:OrganizationRulesetRulesTagNamePatternOutputReference"
    },
    "@cdktf/provider-github.organizationSecurityManager.OrganizationSecurityManager": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_security_manager github_organization_security_manager}."
      },
      "fqn": "@cdktf/provider-github.organizationSecurityManager.OrganizationSecurityManager",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_security_manager github_organization_security_manager} Resource."
        },
        "locationInModule": {
          "filename": "src/organization-security-manager/index.ts",
          "line": 65
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.organizationSecurityManager.OrganizationSecurityManagerConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-security-manager/index.ts",
        "line": 33
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a OrganizationSecurityManager resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/organization-security-manager/index.ts",
            "line": 50
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the OrganizationSecurityManager to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_security_manager#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing OrganizationSecurityManager that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the OrganizationSecurityManager to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-security-manager/index.ts",
            "line": 97
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-security-manager/index.ts",
            "line": 122
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "OrganizationSecurityManager",
      "namespace": "organizationSecurityManager",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-security-manager/index.ts",
            "line": 38
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-security-manager/index.ts",
            "line": 101
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-security-manager/index.ts",
            "line": 114
          },
          "name": "teamSlugInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-security-manager/index.ts",
            "line": 91
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-security-manager/index.ts",
            "line": 107
          },
          "name": "teamSlug",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/organization-security-manager/index:OrganizationSecurityManager"
    },
    "@cdktf/provider-github.organizationSecurityManager.OrganizationSecurityManagerConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationSecurityManager.OrganizationSecurityManagerConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-security-manager/index.ts",
        "line": 14
      },
      "name": "OrganizationSecurityManagerConfig",
      "namespace": "organizationSecurityManager",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_security_manager#team_slug OrganizationSecurityManager#team_slug}",
            "stability": "stable",
            "summary": "The slug of the team to manage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-security-manager/index.ts",
            "line": 27
          },
          "name": "teamSlug",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_security_manager#id OrganizationSecurityManager#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-security-manager/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/organization-security-manager/index:OrganizationSecurityManagerConfig"
    },
    "@cdktf/provider-github.organizationSettings.OrganizationSettings": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings github_organization_settings}."
      },
      "fqn": "@cdktf/provider-github.organizationSettings.OrganizationSettings",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings github_organization_settings} Resource."
        },
        "locationInModule": {
          "filename": "src/organization-settings/index.ts",
          "line": 215
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.organizationSettings.OrganizationSettingsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-settings/index.ts",
        "line": 183
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a OrganizationSettings resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 200
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the OrganizationSettings to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing OrganizationSettings that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the OrganizationSettings to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 272
          },
          "name": "resetAdvancedSecurityEnabledForNewRepositories"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 301
          },
          "name": "resetBlog"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 317
          },
          "name": "resetCompany"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 333
          },
          "name": "resetDefaultRepositoryPermission"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 349
          },
          "name": "resetDependabotAlertsEnabledForNewRepositories"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 365
          },
          "name": "resetDependabotSecurityUpdatesEnabledForNewRepositories"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 381
          },
          "name": "resetDependencyGraphEnabledForNewRepositories"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 397
          },
          "name": "resetDescription"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 413
          },
          "name": "resetEmail"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 429
          },
          "name": "resetHasOrganizationProjects"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 445
          },
          "name": "resetHasRepositoryProjects"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 461
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 477
          },
          "name": "resetLocation"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 493
          },
          "name": "resetMembersCanCreateInternalRepositories"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 509
          },
          "name": "resetMembersCanCreatePages"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 525
          },
          "name": "resetMembersCanCreatePrivatePages"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 541
          },
          "name": "resetMembersCanCreatePrivateRepositories"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 557
          },
          "name": "resetMembersCanCreatePublicPages"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 573
          },
          "name": "resetMembersCanCreatePublicRepositories"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 589
          },
          "name": "resetMembersCanCreateRepositories"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 605
          },
          "name": "resetMembersCanForkPrivateRepositories"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 621
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 637
          },
          "name": "resetSecretScanningEnabledForNewRepositories"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 653
          },
          "name": "resetSecretScanningPushProtectionEnabledForNewRepositories"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 669
          },
          "name": "resetTwitterUsername"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 685
          },
          "name": "resetWebCommitSignoffRequired"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 697
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "OrganizationSettings",
      "namespace": "organizationSettings",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 188
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 276
          },
          "name": "advancedSecurityEnabledForNewRepositoriesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 289
          },
          "name": "billingEmailInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 305
          },
          "name": "blogInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 321
          },
          "name": "companyInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 337
          },
          "name": "defaultRepositoryPermissionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 353
          },
          "name": "dependabotAlertsEnabledForNewRepositoriesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 369
          },
          "name": "dependabotSecurityUpdatesEnabledForNewRepositoriesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 385
          },
          "name": "dependencyGraphEnabledForNewRepositoriesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 401
          },
          "name": "descriptionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 417
          },
          "name": "emailInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 433
          },
          "name": "hasOrganizationProjectsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 449
          },
          "name": "hasRepositoryProjectsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 465
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 481
          },
          "name": "locationInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 497
          },
          "name": "membersCanCreateInternalRepositoriesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 513
          },
          "name": "membersCanCreatePagesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 529
          },
          "name": "membersCanCreatePrivatePagesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 545
          },
          "name": "membersCanCreatePrivateRepositoriesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 561
          },
          "name": "membersCanCreatePublicPagesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 577
          },
          "name": "membersCanCreatePublicRepositoriesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 593
          },
          "name": "membersCanCreateRepositoriesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 609
          },
          "name": "membersCanForkPrivateRepositoriesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 625
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 641
          },
          "name": "secretScanningEnabledForNewRepositoriesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 657
          },
          "name": "secretScanningPushProtectionEnabledForNewRepositoriesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 673
          },
          "name": "twitterUsernameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 689
          },
          "name": "webCommitSignoffRequiredInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 266
          },
          "name": "advancedSecurityEnabledForNewRepositories",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 282
          },
          "name": "billingEmail",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 295
          },
          "name": "blog",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 311
          },
          "name": "company",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 327
          },
          "name": "defaultRepositoryPermission",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 343
          },
          "name": "dependabotAlertsEnabledForNewRepositories",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 359
          },
          "name": "dependabotSecurityUpdatesEnabledForNewRepositories",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 375
          },
          "name": "dependencyGraphEnabledForNewRepositories",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 391
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 407
          },
          "name": "email",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 423
          },
          "name": "hasOrganizationProjects",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 439
          },
          "name": "hasRepositoryProjects",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 455
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 471
          },
          "name": "location",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 487
          },
          "name": "membersCanCreateInternalRepositories",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 503
          },
          "name": "membersCanCreatePages",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 519
          },
          "name": "membersCanCreatePrivatePages",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 535
          },
          "name": "membersCanCreatePrivateRepositories",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 551
          },
          "name": "membersCanCreatePublicPages",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 567
          },
          "name": "membersCanCreatePublicRepositories",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 583
          },
          "name": "membersCanCreateRepositories",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 599
          },
          "name": "membersCanForkPrivateRepositories",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 615
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 631
          },
          "name": "secretScanningEnabledForNewRepositories",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 647
          },
          "name": "secretScanningPushProtectionEnabledForNewRepositories",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 663
          },
          "name": "twitterUsername",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 679
          },
          "name": "webCommitSignoffRequired",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-settings/index:OrganizationSettings"
    },
    "@cdktf/provider-github.organizationSettings.OrganizationSettingsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationSettings.OrganizationSettingsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-settings/index.ts",
        "line": 14
      },
      "name": "OrganizationSettingsConfig",
      "namespace": "organizationSettings",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#billing_email OrganizationSettings#billing_email}",
            "stability": "stable",
            "summary": "The billing email address for the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 26
          },
          "name": "billingEmail",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#advanced_security_enabled_for_new_repositories OrganizationSettings#advanced_security_enabled_for_new_repositories}",
            "stability": "stable",
            "summary": "Whether or not advanced security is enabled for new repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 20
          },
          "name": "advancedSecurityEnabledForNewRepositories",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#blog OrganizationSettings#blog}",
            "stability": "stable",
            "summary": "The blog URL for the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 32
          },
          "name": "blog",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#company OrganizationSettings#company}",
            "stability": "stable",
            "summary": "The company name for the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 38
          },
          "name": "company",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#default_repository_permission OrganizationSettings#default_repository_permission}",
            "stability": "stable",
            "summary": "The default permission for organization members to create new repositories. Can be one of 'read', 'write', 'admin' or 'none'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 44
          },
          "name": "defaultRepositoryPermission",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#dependabot_alerts_enabled_for_new_repositories OrganizationSettings#dependabot_alerts_enabled_for_new_repositories}",
            "stability": "stable",
            "summary": "Whether or not dependabot alerts are enabled for new repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 50
          },
          "name": "dependabotAlertsEnabledForNewRepositories",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#dependabot_security_updates_enabled_for_new_repositories OrganizationSettings#dependabot_security_updates_enabled_for_new_repositories}",
            "stability": "stable",
            "summary": "Whether or not dependabot security updates are enabled for new repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 56
          },
          "name": "dependabotSecurityUpdatesEnabledForNewRepositories",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#dependency_graph_enabled_for_new_repositories OrganizationSettings#dependency_graph_enabled_for_new_repositories}",
            "stability": "stable",
            "summary": "Whether or not dependency graph is enabled for new repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 62
          },
          "name": "dependencyGraphEnabledForNewRepositories",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#description OrganizationSettings#description}",
            "stability": "stable",
            "summary": "The description for the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 68
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#email OrganizationSettings#email}",
            "stability": "stable",
            "summary": "The email address for the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 74
          },
          "name": "email",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#has_organization_projects OrganizationSettings#has_organization_projects}",
            "stability": "stable",
            "summary": "Whether or not organization projects are enabled for the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 80
          },
          "name": "hasOrganizationProjects",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#has_repository_projects OrganizationSettings#has_repository_projects}",
            "stability": "stable",
            "summary": "Whether or not repository projects are enabled for the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 86
          },
          "name": "hasRepositoryProjects",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#id OrganizationSettings#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 93
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#location OrganizationSettings#location}",
            "stability": "stable",
            "summary": "The location for the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 99
          },
          "name": "location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#members_can_create_internal_repositories OrganizationSettings#members_can_create_internal_repositories}",
            "stability": "stable",
            "summary": "Whether or not organization members can create new internal repositories. For Enterprise Organizations only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 105
          },
          "name": "membersCanCreateInternalRepositories",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#members_can_create_pages OrganizationSettings#members_can_create_pages}",
            "stability": "stable",
            "summary": "Whether or not organization members can create new pages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 111
          },
          "name": "membersCanCreatePages",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#members_can_create_private_pages OrganizationSettings#members_can_create_private_pages}",
            "stability": "stable",
            "summary": "Whether or not organization members can create new private pages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 117
          },
          "name": "membersCanCreatePrivatePages",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#members_can_create_private_repositories OrganizationSettings#members_can_create_private_repositories}",
            "stability": "stable",
            "summary": "Whether or not organization members can create new private repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 123
          },
          "name": "membersCanCreatePrivateRepositories",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#members_can_create_public_pages OrganizationSettings#members_can_create_public_pages}",
            "stability": "stable",
            "summary": "Whether or not organization members can create new public pages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 129
          },
          "name": "membersCanCreatePublicPages",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#members_can_create_public_repositories OrganizationSettings#members_can_create_public_repositories}",
            "stability": "stable",
            "summary": "Whether or not organization members can create new public repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 135
          },
          "name": "membersCanCreatePublicRepositories",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#members_can_create_repositories OrganizationSettings#members_can_create_repositories}",
            "stability": "stable",
            "summary": "Whether or not organization members can create new repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 141
          },
          "name": "membersCanCreateRepositories",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#members_can_fork_private_repositories OrganizationSettings#members_can_fork_private_repositories}",
            "stability": "stable",
            "summary": "Whether or not organization members can fork private repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 147
          },
          "name": "membersCanForkPrivateRepositories",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#name OrganizationSettings#name}",
            "stability": "stable",
            "summary": "The name for the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 153
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#secret_scanning_enabled_for_new_repositories OrganizationSettings#secret_scanning_enabled_for_new_repositories}",
            "stability": "stable",
            "summary": "Whether or not secret scanning is enabled for new repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 159
          },
          "name": "secretScanningEnabledForNewRepositories",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#secret_scanning_push_protection_enabled_for_new_repositories OrganizationSettings#secret_scanning_push_protection_enabled_for_new_repositories}",
            "stability": "stable",
            "summary": "Whether or not secret scanning push protection is enabled for new repositories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 165
          },
          "name": "secretScanningPushProtectionEnabledForNewRepositories",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#twitter_username OrganizationSettings#twitter_username}",
            "stability": "stable",
            "summary": "The Twitter username for the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 171
          },
          "name": "twitterUsername",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_settings#web_commit_signoff_required OrganizationSettings#web_commit_signoff_required}",
            "stability": "stable",
            "summary": "Whether or not commit signatures are required for commits to the organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-settings/index.ts",
            "line": 177
          },
          "name": "webCommitSignoffRequired",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/organization-settings/index:OrganizationSettingsConfig"
    },
    "@cdktf/provider-github.organizationWebhook.OrganizationWebhook": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_webhook github_organization_webhook}."
      },
      "fqn": "@cdktf/provider-github.organizationWebhook.OrganizationWebhook",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_webhook github_organization_webhook} Resource."
        },
        "locationInModule": {
          "filename": "src/organization-webhook/index.ts",
          "line": 232
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.organizationWebhook.OrganizationWebhookConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-webhook/index.ts",
        "line": 200
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a OrganizationWebhook resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 217
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the OrganizationWebhook to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_webhook#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing OrganizationWebhook that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the OrganizationWebhook to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 335
          },
          "name": "putConfiguration",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.organizationWebhook.OrganizationWebhookConfiguration"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 267
          },
          "name": "resetActive"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 338
          },
          "name": "resetConfiguration"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 301
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 317
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 350
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "OrganizationWebhook",
      "namespace": "organizationWebhook",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 205
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 332
          },
          "name": "configuration",
          "type": {
            "fqn": "@cdktf/provider-github.organizationWebhook.OrganizationWebhookConfigurationOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 276
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 326
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 271
          },
          "name": "activeInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 342
          },
          "name": "configurationInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationWebhook.OrganizationWebhookConfiguration"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 289
          },
          "name": "eventsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 305
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 321
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 261
          },
          "name": "active",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 282
          },
          "name": "events",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 295
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 311
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/organization-webhook/index:OrganizationWebhook"
    },
    "@cdktf/provider-github.organizationWebhook.OrganizationWebhookConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationWebhook.OrganizationWebhookConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-webhook/index.ts",
        "line": 14
      },
      "name": "OrganizationWebhookConfig",
      "namespace": "organizationWebhook",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_webhook#events OrganizationWebhook#events}",
            "stability": "stable",
            "summary": "A list of events which should trigger the webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 26
          },
          "name": "events",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_webhook#active OrganizationWebhook#active}",
            "stability": "stable",
            "summary": "Indicate if the webhook should receive events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 20
          },
          "name": "active",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_webhook#configuration OrganizationWebhook#configuration}",
            "stability": "stable",
            "summary": "configuration block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 43
          },
          "name": "configuration",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationWebhook.OrganizationWebhookConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_webhook#id OrganizationWebhook#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_webhook#name OrganizationWebhook#name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 37
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/organization-webhook/index:OrganizationWebhookConfig"
    },
    "@cdktf/provider-github.organizationWebhook.OrganizationWebhookConfiguration": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationWebhook.OrganizationWebhookConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/organization-webhook/index.ts",
        "line": 45
      },
      "name": "OrganizationWebhookConfiguration",
      "namespace": "organizationWebhook",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_webhook#url OrganizationWebhook#url}",
            "stability": "stable",
            "summary": "The URL of the webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 69
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_webhook#content_type OrganizationWebhook#content_type}",
            "stability": "stable",
            "summary": "The content type for the payload. Valid values are either 'form' or 'json'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 51
          },
          "name": "contentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_webhook#insecure_ssl OrganizationWebhook#insecure_ssl}",
            "stability": "stable",
            "summary": "Insecure SSL boolean toggle. Defaults to 'false'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 57
          },
          "name": "insecureSsl",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/organization_webhook#secret OrganizationWebhook#secret}",
            "stability": "stable",
            "summary": "The shared secret for the webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 63
          },
          "name": "secret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/organization-webhook/index:OrganizationWebhookConfiguration"
    },
    "@cdktf/provider-github.organizationWebhook.OrganizationWebhookConfigurationOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.organizationWebhook.OrganizationWebhookConfigurationOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/organization-webhook/index.ts",
          "line": 92
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/organization-webhook/index.ts",
        "line": 85
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 143
          },
          "name": "resetContentType"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 159
          },
          "name": "resetInsecureSsl"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 175
          },
          "name": "resetSecret"
        }
      ],
      "name": "OrganizationWebhookConfigurationOutputReference",
      "namespace": "organizationWebhook",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 147
          },
          "name": "contentTypeInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 163
          },
          "name": "insecureSslInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 179
          },
          "name": "secretInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 192
          },
          "name": "urlInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 137
          },
          "name": "contentType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 153
          },
          "name": "insecureSsl",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 169
          },
          "name": "secret",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 185
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/organization-webhook/index.ts",
            "line": 96
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.organizationWebhook.OrganizationWebhookConfiguration"
          }
        }
      ],
      "symbolId": "src/organization-webhook/index:OrganizationWebhookConfigurationOutputReference"
    },
    "@cdktf/provider-github.projectCard.ProjectCard": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_card github_project_card}."
      },
      "fqn": "@cdktf/provider-github.projectCard.ProjectCard",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_card github_project_card} Resource."
        },
        "locationInModule": {
          "filename": "src/project-card/index.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.projectCard.ProjectCardConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/project-card/index.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ProjectCard resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 68
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ProjectCard to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_card#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ProjectCard that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ProjectCard to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 136
          },
          "name": "resetContentId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 152
          },
          "name": "resetContentType"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 173
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 189
          },
          "name": "resetNote"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 201
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ProjectCard",
      "namespace": "projectCard",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 56
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 111
          },
          "name": "cardId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 161
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 124
          },
          "name": "columnIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 140
          },
          "name": "contentIdInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 156
          },
          "name": "contentTypeInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 177
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 193
          },
          "name": "noteInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 117
          },
          "name": "columnId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 130
          },
          "name": "contentId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 146
          },
          "name": "contentType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 167
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 183
          },
          "name": "note",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/project-card/index:ProjectCard"
    },
    "@cdktf/provider-github.projectCard.ProjectCardConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.projectCard.ProjectCardConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/project-card/index.ts",
        "line": 14
      },
      "name": "ProjectCardConfig",
      "namespace": "projectCard",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_card#column_id ProjectCard#column_id}",
            "stability": "stable",
            "summary": "The ID of the project column."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 20
          },
          "name": "columnId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_card#content_id ProjectCard#content_id}",
            "stability": "stable",
            "summary": "'github_issue.issue_id'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 26
          },
          "name": "contentId",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_card#content_type ProjectCard#content_type}",
            "stability": "stable",
            "summary": "Must be either 'Issue' or 'PullRequest'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 32
          },
          "name": "contentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_card#id ProjectCard#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 39
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_card#note ProjectCard#note}",
            "stability": "stable",
            "summary": "The note contents of the card. Markdown supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-card/index.ts",
            "line": 45
          },
          "name": "note",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/project-card/index:ProjectCardConfig"
    },
    "@cdktf/provider-github.projectColumn.ProjectColumn": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_column github_project_column}."
      },
      "fqn": "@cdktf/provider-github.projectColumn.ProjectColumn",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_column github_project_column} Resource."
        },
        "locationInModule": {
          "filename": "src/project-column/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.projectColumn.ProjectColumnConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/project-column/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a ProjectColumn resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the ProjectColumn to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_column#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing ProjectColumn that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the ProjectColumn to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 114
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 152
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "ProjectColumn",
      "namespace": "projectColumn",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 97
          },
          "name": "columnId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 102
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 118
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 131
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 144
          },
          "name": "projectIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 108
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 124
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 137
          },
          "name": "projectId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/project-column/index:ProjectColumn"
    },
    "@cdktf/provider-github.projectColumn.ProjectColumnConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.projectColumn.ProjectColumnConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/project-column/index.ts",
        "line": 14
      },
      "name": "ProjectColumnConfig",
      "namespace": "projectColumn",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_column#name ProjectColumn#name}",
            "stability": "stable",
            "summary": "The name of the column."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 27
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_column#project_id ProjectColumn#project_id}",
            "stability": "stable",
            "summary": "The ID of an existing project that the column will be created in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 33
          },
          "name": "projectId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/project_column#id ProjectColumn#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/project-column/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/project-column/index:ProjectColumnConfig"
    },
    "@cdktf/provider-github.provider.GithubProvider": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformProvider",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs github}."
      },
      "fqn": "@cdktf/provider-github.provider.GithubProvider",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs github} Resource."
        },
        "locationInModule": {
          "filename": "src/provider/index.ts",
          "line": 148
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.provider.GithubProviderConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/provider/index.ts",
        "line": 116
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a GithubProvider resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 133
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the GithubProvider to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing GithubProvider that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the GithubProvider to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 310
          },
          "name": "resetAlias"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 326
          },
          "name": "resetAppAuth"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 182
          },
          "name": "resetBaseUrl"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 198
          },
          "name": "resetInsecure"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 214
          },
          "name": "resetOrganization"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 230
          },
          "name": "resetOwner"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 246
          },
          "name": "resetParallelRequests"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 262
          },
          "name": "resetReadDelayMs"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 278
          },
          "name": "resetToken"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 294
          },
          "name": "resetWriteDelayMs"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 338
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformProvider",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "GithubProvider",
      "namespace": "provider",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 121
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 314
          },
          "name": "aliasInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 330
          },
          "name": "appAuthInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.provider.GithubProviderAppAuth"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 186
          },
          "name": "baseUrlInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 202
          },
          "name": "insecureInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 218
          },
          "name": "organizationInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 234
          },
          "name": "ownerInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 250
          },
          "name": "parallelRequestsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 266
          },
          "name": "readDelayMsInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 282
          },
          "name": "tokenInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 298
          },
          "name": "writeDelayMsInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 304
          },
          "name": "alias",
          "optional": true,
          "overrides": "cdktf.TerraformProvider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 320
          },
          "name": "appAuth",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.provider.GithubProviderAppAuth"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 176
          },
          "name": "baseUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 192
          },
          "name": "insecure",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 208
          },
          "name": "organization",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 224
          },
          "name": "owner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 240
          },
          "name": "parallelRequests",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 256
          },
          "name": "readDelayMs",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 272
          },
          "name": "token",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 288
          },
          "name": "writeDelayMs",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/provider/index:GithubProvider"
    },
    "@cdktf/provider-github.provider.GithubProviderAppAuth": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.provider.GithubProviderAppAuth",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/provider/index.ts",
        "line": 76
      },
      "name": "GithubProviderAppAuth",
      "namespace": "provider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#id GithubProvider#id}\n\nPlease be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "The GitHub App ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 85
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#installation_id GithubProvider#installation_id}",
            "stability": "stable",
            "summary": "The GitHub App installation instance ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 91
          },
          "name": "installationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#pem_file GithubProvider#pem_file}",
            "stability": "stable",
            "summary": "The GitHub App PEM file contents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 97
          },
          "name": "pemFile",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/provider/index:GithubProviderAppAuth"
    },
    "@cdktf/provider-github.provider.GithubProviderConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.provider.GithubProviderConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/provider/index.ts",
        "line": 14
      },
      "name": "GithubProviderConfig",
      "namespace": "provider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#alias GithubProvider#alias}",
            "stability": "stable",
            "summary": "Alias name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 68
          },
          "name": "alias",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#app_auth GithubProvider#app_auth}",
            "stability": "stable",
            "summary": "app_auth block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 74
          },
          "name": "appAuth",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.provider.GithubProviderAppAuth"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#base_url GithubProvider#base_url}",
            "stability": "stable",
            "summary": "The GitHub Base API URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 20
          },
          "name": "baseUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#insecure GithubProvider#insecure}",
            "stability": "stable",
            "summary": "Enable `insecure` mode for testing purposes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 26
          },
          "name": "insecure",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#organization GithubProvider#organization}",
            "stability": "stable",
            "summary": "The GitHub organization name to manage. Use this field instead of `owner` when managing organization accounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 32
          },
          "name": "organization",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#owner GithubProvider#owner}",
            "stability": "stable",
            "summary": "The GitHub owner name to manage. Use this field instead of `organization` when managing individual accounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 38
          },
          "name": "owner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You may want to set it to true when you have a private Github Enterprise without strict rate limits. Although, it is not possible to enable this setting on github.com because we enforce the respect of github.com's best practices to avoid hitting abuse rate limitsDefaults to false if not set\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#parallel_requests GithubProvider#parallel_requests}",
            "stability": "stable",
            "summary": "Allow the provider to make parallel API calls to GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 44
          },
          "name": "parallelRequests",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Defaults to 0ms if not set.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#read_delay_ms GithubProvider#read_delay_ms}",
            "stability": "stable",
            "summary": "Amount of time in milliseconds to sleep in between non-write requests to GitHub API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 50
          },
          "name": "readDelayMs",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Anonymous mode is enabled if both `token` and `app_auth` are not set.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#token GithubProvider#token}",
            "stability": "stable",
            "summary": "The OAuth token used to connect to GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 56
          },
          "name": "token",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Defaults to 1000ms or 1s if not set.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs#write_delay_ms GithubProvider#write_delay_ms}",
            "stability": "stable",
            "summary": "Amount of time in milliseconds to sleep in between writes to GitHub API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/provider/index.ts",
            "line": 62
          },
          "name": "writeDelayMs",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/provider/index:GithubProviderConfig"
    },
    "@cdktf/provider-github.release.Release": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release github_release}."
      },
      "fqn": "@cdktf/provider-github.release.Release",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release github_release} Resource."
        },
        "locationInModule": {
          "filename": "src/release/index.ts",
          "line": 113
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.release.ReleaseConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/release/index.ts",
        "line": 81
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a Release resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 98
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the Release to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing Release that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the Release to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 153
          },
          "name": "resetBody"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 169
          },
          "name": "resetDiscussionCategoryName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 185
          },
          "name": "resetDraft"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 206
          },
          "name": "resetGenerateReleaseNotes"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 222
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 238
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 254
          },
          "name": "resetPrerelease"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 296
          },
          "name": "resetTargetCommitish"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 308
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Release",
      "namespace": "release",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 86
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 194
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 157
          },
          "name": "bodyInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 173
          },
          "name": "discussionCategoryNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 189
          },
          "name": "draftInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 210
          },
          "name": "generateReleaseNotesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 226
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 242
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 258
          },
          "name": "prereleaseInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 271
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 284
          },
          "name": "tagNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 300
          },
          "name": "targetCommitishInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 147
          },
          "name": "body",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 163
          },
          "name": "discussionCategoryName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 179
          },
          "name": "draft",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 200
          },
          "name": "generateReleaseNotes",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 216
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 232
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 248
          },
          "name": "prerelease",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 264
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 277
          },
          "name": "tagName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 290
          },
          "name": "targetCommitish",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/release/index:Release"
    },
    "@cdktf/provider-github.release.ReleaseConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.release.ReleaseConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/release/index.ts",
        "line": 14
      },
      "name": "ReleaseConfig",
      "namespace": "release",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release#repository Release#repository}",
            "stability": "stable",
            "summary": "The name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 63
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release#tag_name Release#tag_name}",
            "stability": "stable",
            "summary": "The name of the tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 69
          },
          "name": "tagName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release#body Release#body}",
            "stability": "stable",
            "summary": "Text describing the contents of the tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 20
          },
          "name": "body",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The value must be a category that already exists in the repository.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release#discussion_category_name Release#discussion_category_name}",
            "stability": "stable",
            "summary": "If specified, a discussion of the specified category is created and linked to the release."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 26
          },
          "name": "discussionCategoryName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release#draft Release#draft}",
            "stability": "stable",
            "summary": "Set to 'false' to create a published release."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 32
          },
          "name": "draft",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If 'name' is specified, the specified name will be used; otherwise, a name will be automatically generated. If 'body' is specified, the body will be pre-pended to the automatically generated notes.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release#generate_release_notes Release#generate_release_notes}",
            "stability": "stable",
            "summary": "Set to 'true' to automatically generate the name and body for this release."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 38
          },
          "name": "generateReleaseNotes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release#id Release#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 45
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release#name Release#name}",
            "stability": "stable",
            "summary": "The name of the release."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 51
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release#prerelease Release#prerelease}",
            "stability": "stable",
            "summary": "Set to 'false' to identify the release as a full release."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 57
          },
          "name": "prerelease",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/release#target_commitish Release#target_commitish}",
            "stability": "stable",
            "summary": "The branch name or commit SHA the tag is created from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/release/index.ts",
            "line": 75
          },
          "name": "targetCommitish",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/release/index:ReleaseConfig"
    },
    "@cdktf/provider-github.repository.Repository": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository github_repository}."
      },
      "fqn": "@cdktf/provider-github.repository.Repository",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository github_repository} Resource."
        },
        "locationInModule": {
          "filename": "src/repository/index.ts",
          "line": 929
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repository.RepositoryConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 897
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a Repository resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 914
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the Repository to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing Repository that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the Repository to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1533
          },
          "name": "putPages",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repository.RepositoryPages"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1549
          },
          "name": "putSecurityAndAnalysis",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysis"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1565
          },
          "name": "putTemplate",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repository.RepositoryTemplate"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 993
          },
          "name": "resetAllowAutoMerge"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1009
          },
          "name": "resetAllowMergeCommit"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1025
          },
          "name": "resetAllowRebaseMerge"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1041
          },
          "name": "resetAllowSquashMerge"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1057
          },
          "name": "resetAllowUpdateBranch"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1089
          },
          "name": "resetArchived"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1073
          },
          "name": "resetArchiveOnDestroy"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1105
          },
          "name": "resetAutoInit"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1121
          },
          "name": "resetDefaultBranch"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1137
          },
          "name": "resetDeleteBranchOnMerge"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1153
          },
          "name": "resetDescription"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1184
          },
          "name": "resetGitignoreTemplate"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1200
          },
          "name": "resetHasDiscussions"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1216
          },
          "name": "resetHasDownloads"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1232
          },
          "name": "resetHasIssues"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1248
          },
          "name": "resetHasProjects"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1264
          },
          "name": "resetHasWiki"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1280
          },
          "name": "resetHomepageUrl"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1306
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1322
          },
          "name": "resetIgnoreVulnerabilityAlertsDuringRead"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1338
          },
          "name": "resetIsTemplate"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1354
          },
          "name": "resetLicenseTemplate"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1370
          },
          "name": "resetMergeCommitMessage"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1386
          },
          "name": "resetMergeCommitTitle"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1536
          },
          "name": "resetPages"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1425
          },
          "name": "resetPrivate"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1552
          },
          "name": "resetSecurityAndAnalysis"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1446
          },
          "name": "resetSquashMergeCommitMessage"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1462
          },
          "name": "resetSquashMergeCommitTitle"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1568
          },
          "name": "resetTemplate"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1488
          },
          "name": "resetTopics"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1504
          },
          "name": "resetVisibility"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1520
          },
          "name": "resetVulnerabilityAlerts"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1580
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Repository",
      "namespace": "repository",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 902
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1162
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1167
          },
          "name": "fullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1172
          },
          "name": "gitCloneUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1289
          },
          "name": "htmlUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1294
          },
          "name": "httpCloneUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1408
          },
          "name": "nodeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1530
          },
          "name": "pages",
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositoryPagesOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1413
          },
          "name": "primaryLanguage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1434
          },
          "name": "repoId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1546
          },
          "name": "securityAndAnalysis",
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1471
          },
          "name": "sshCloneUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1476
          },
          "name": "svnUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1562
          },
          "name": "template",
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositoryTemplateOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 997
          },
          "name": "allowAutoMergeInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1013
          },
          "name": "allowMergeCommitInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1029
          },
          "name": "allowRebaseMergeInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1045
          },
          "name": "allowSquashMergeInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1061
          },
          "name": "allowUpdateBranchInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1093
          },
          "name": "archivedInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1077
          },
          "name": "archiveOnDestroyInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1109
          },
          "name": "autoInitInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1125
          },
          "name": "defaultBranchInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1141
          },
          "name": "deleteBranchOnMergeInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1157
          },
          "name": "descriptionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1188
          },
          "name": "gitignoreTemplateInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1204
          },
          "name": "hasDiscussionsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1220
          },
          "name": "hasDownloadsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1236
          },
          "name": "hasIssuesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1252
          },
          "name": "hasProjectsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1268
          },
          "name": "hasWikiInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1284
          },
          "name": "homepageUrlInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1310
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1326
          },
          "name": "ignoreVulnerabilityAlertsDuringReadInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1342
          },
          "name": "isTemplateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1358
          },
          "name": "licenseTemplateInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1374
          },
          "name": "mergeCommitMessageInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1390
          },
          "name": "mergeCommitTitleInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1403
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1540
          },
          "name": "pagesInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositoryPages"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1429
          },
          "name": "privateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1556
          },
          "name": "securityAndAnalysisInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysis"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1450
          },
          "name": "squashMergeCommitMessageInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1466
          },
          "name": "squashMergeCommitTitleInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1572
          },
          "name": "templateInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositoryTemplate"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1492
          },
          "name": "topicsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1508
          },
          "name": "visibilityInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1524
          },
          "name": "vulnerabilityAlertsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 987
          },
          "name": "allowAutoMerge",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1003
          },
          "name": "allowMergeCommit",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1019
          },
          "name": "allowRebaseMerge",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1035
          },
          "name": "allowSquashMerge",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1051
          },
          "name": "allowUpdateBranch",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1083
          },
          "name": "archived",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1067
          },
          "name": "archiveOnDestroy",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1099
          },
          "name": "autoInit",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1115
          },
          "name": "defaultBranch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1131
          },
          "name": "deleteBranchOnMerge",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1147
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1178
          },
          "name": "gitignoreTemplate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1194
          },
          "name": "hasDiscussions",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1210
          },
          "name": "hasDownloads",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1226
          },
          "name": "hasIssues",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1242
          },
          "name": "hasProjects",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1258
          },
          "name": "hasWiki",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1274
          },
          "name": "homepageUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1300
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1316
          },
          "name": "ignoreVulnerabilityAlertsDuringRead",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1332
          },
          "name": "isTemplate",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1348
          },
          "name": "licenseTemplate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1364
          },
          "name": "mergeCommitMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1380
          },
          "name": "mergeCommitTitle",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1396
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1419
          },
          "name": "private",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1440
          },
          "name": "squashMergeCommitMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1456
          },
          "name": "squashMergeCommitTitle",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1482
          },
          "name": "topics",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1498
          },
          "name": "visibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 1514
          },
          "name": "vulnerabilityAlerts",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository/index:Repository"
    },
    "@cdktf/provider-github.repository.RepositoryConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositoryConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 14
      },
      "name": "RepositoryConfig",
      "namespace": "repository",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#name Repository#name}",
            "stability": "stable",
            "summary": "The name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 165
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#allow_auto_merge Repository#allow_auto_merge}",
            "stability": "stable",
            "summary": "Set to 'true' to allow auto-merging pull requests on the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 20
          },
          "name": "allowAutoMerge",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#allow_merge_commit Repository#allow_merge_commit}",
            "stability": "stable",
            "summary": "Set to 'false' to disable merge commits on the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 26
          },
          "name": "allowMergeCommit",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#allow_rebase_merge Repository#allow_rebase_merge}",
            "stability": "stable",
            "summary": "Set to 'false' to disable rebase merges on the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 32
          },
          "name": "allowRebaseMerge",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#allow_squash_merge Repository#allow_squash_merge}",
            "stability": "stable",
            "summary": "Set to 'false' to disable squash merges on the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 38
          },
          "name": "allowSquashMerge",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#allow_update_branch Repository#allow_update_branch}",
            "stability": "stable",
            "summary": "Set to 'true' to always suggest updating pull request branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 44
          },
          "name": "allowUpdateBranch",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#archived Repository#archived}",
            "stability": "stable",
            "summary": "Specifies if the repository should be archived. Defaults to 'false'. NOTE Currently, the API does not support unarchiving."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 56
          },
          "name": "archived",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#archive_on_destroy Repository#archive_on_destroy}",
            "stability": "stable",
            "summary": "Set to 'true' to archive the repository instead of deleting on destroy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 50
          },
          "name": "archiveOnDestroy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#auto_init Repository#auto_init}",
            "stability": "stable",
            "summary": "Set to 'true' to produce an initial commit in the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 62
          },
          "name": "autoInit",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#default_branch Repository#default_branch}",
            "stability": "stable",
            "summary": "Can only be set after initial repository creation, and only if the target branch exists."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 68
          },
          "name": "defaultBranch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#delete_branch_on_merge Repository#delete_branch_on_merge}",
            "stability": "stable",
            "summary": "Automatically delete head branch after a pull request is merged. Defaults to 'false'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 74
          },
          "name": "deleteBranchOnMerge",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#description Repository#description}",
            "stability": "stable",
            "summary": "A description of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 80
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#gitignore_template Repository#gitignore_template}",
            "stability": "stable",
            "summary": "Use the name of the template without the extension. For example, 'Haskell'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 86
          },
          "name": "gitignoreTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#has_discussions Repository#has_discussions}",
            "stability": "stable",
            "summary": "Set to 'true' to enable GitHub Discussions on the repository. Defaults to 'false'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 92
          },
          "name": "hasDiscussions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#has_downloads Repository#has_downloads}",
            "stability": "stable",
            "summary": "Set to 'true' to enable the (deprecated) downloads features on the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 98
          },
          "name": "hasDownloads",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#has_issues Repository#has_issues}",
            "stability": "stable",
            "summary": "Set to 'true' to enable the GitHub Issues features on the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 104
          },
          "name": "hasIssues",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Per the GitHub documentation when in an organization that has disabled repository projects it will default to 'false' and will otherwise default to 'true'. If you specify 'true' when it has been disabled it will return an error.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#has_projects Repository#has_projects}",
            "stability": "stable",
            "summary": "Set to 'true' to enable the GitHub Projects features on the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 110
          },
          "name": "hasProjects",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#has_wiki Repository#has_wiki}",
            "stability": "stable",
            "summary": "Set to 'true' to enable the GitHub Wiki features on the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 116
          },
          "name": "hasWiki",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#homepage_url Repository#homepage_url}",
            "stability": "stable",
            "summary": "URL of a page describing the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 122
          },
          "name": "homepageUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#id Repository#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 129
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#ignore_vulnerability_alerts_during_read Repository#ignore_vulnerability_alerts_during_read}",
            "stability": "stable",
            "summary": "Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 135
          },
          "name": "ignoreVulnerabilityAlertsDuringRead",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#is_template Repository#is_template}",
            "stability": "stable",
            "summary": "Set to 'true' to tell GitHub that this is a template repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 141
          },
          "name": "isTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#license_template Repository#license_template}",
            "stability": "stable",
            "summary": "Use the name of the template without the extension. For example, 'mit' or 'mpl-2.0'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 147
          },
          "name": "licenseTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#merge_commit_message Repository#merge_commit_message}",
            "stability": "stable",
            "summary": "Can be 'PR_BODY', 'PR_TITLE', or 'BLANK' for a default merge commit message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 153
          },
          "name": "mergeCommitMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#merge_commit_title Repository#merge_commit_title}",
            "stability": "stable",
            "summary": "Can be 'PR_TITLE' or 'MERGE_MESSAGE' for a default merge commit title."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 159
          },
          "name": "mergeCommitTitle",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#pages Repository#pages}",
            "stability": "stable",
            "summary": "pages block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 205
          },
          "name": "pages",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositoryPages"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#private Repository#private}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 169
          },
          "name": "private",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#security_and_analysis Repository#security_and_analysis}",
            "stability": "stable",
            "summary": "security_and_analysis block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 211
          },
          "name": "securityAndAnalysis",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysis"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#squash_merge_commit_message Repository#squash_merge_commit_message}",
            "stability": "stable",
            "summary": "Can be 'PR_BODY', 'COMMIT_MESSAGES', or 'BLANK' for a default squash merge commit message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 175
          },
          "name": "squashMergeCommitMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#squash_merge_commit_title Repository#squash_merge_commit_title}",
            "stability": "stable",
            "summary": "Can be 'PR_TITLE' or 'COMMIT_OR_PR_TITLE' for a default squash merge commit title."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 181
          },
          "name": "squashMergeCommitTitle",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#template Repository#template}",
            "stability": "stable",
            "summary": "template block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 217
          },
          "name": "template",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositoryTemplate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#topics Repository#topics}",
            "stability": "stable",
            "summary": "The list of topics of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 187
          },
          "name": "topics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be 'internal'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#visibility Repository#visibility}",
            "stability": "stable",
            "summary": "Can be 'public' or 'private'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 193
          },
          "name": "visibility",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default). Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#vulnerability_alerts Repository#vulnerability_alerts}",
            "stability": "stable",
            "summary": "Set to 'true' to enable security alerts for vulnerable dependencies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 199
          },
          "name": "vulnerabilityAlerts",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository/index:RepositoryConfig"
    },
    "@cdktf/provider-github.repository.RepositoryPages": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositoryPages",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 312
      },
      "name": "RepositoryPages",
      "namespace": "repository",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#build_type Repository#build_type}",
            "stability": "stable",
            "summary": "The type the page should be sourced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 318
          },
          "name": "buildType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#cname Repository#cname}",
            "stability": "stable",
            "summary": "The custom domain for the repository. This can only be set after the repository has been created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 324
          },
          "name": "cname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#source Repository#source}",
            "stability": "stable",
            "summary": "source block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 330
          },
          "name": "source",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositoryPagesSource"
          }
        }
      ],
      "symbolId": "src/repository/index:RepositoryPages"
    },
    "@cdktf/provider-github.repository.RepositoryPagesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositoryPagesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository/index.ts",
          "line": 352
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 345
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 446
          },
          "name": "putSource",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repository.RepositoryPagesSource"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 397
          },
          "name": "resetBuildType"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 413
          },
          "name": "resetCname"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 449
          },
          "name": "resetSource"
        }
      ],
      "name": "RepositoryPagesOutputReference",
      "namespace": "repository",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 422
          },
          "name": "custom404",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 427
          },
          "name": "htmlUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 443
          },
          "name": "source",
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositoryPagesSourceOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 432
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 437
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 401
          },
          "name": "buildTypeInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 417
          },
          "name": "cnameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 453
          },
          "name": "sourceInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositoryPagesSource"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 391
          },
          "name": "buildType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 407
          },
          "name": "cname",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 356
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositoryPages"
          }
        }
      ],
      "symbolId": "src/repository/index:RepositoryPagesOutputReference"
    },
    "@cdktf/provider-github.repository.RepositoryPagesSource": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositoryPagesSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 219
      },
      "name": "RepositoryPagesSource",
      "namespace": "repository",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#branch Repository#branch}",
            "stability": "stable",
            "summary": "The repository branch used to publish the site's source files. (i.e. 'main' or 'gh-pages')."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 225
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#path Repository#path}",
            "stability": "stable",
            "summary": "The repository directory from which the site publishes (Default: '/')."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 231
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository/index:RepositoryPagesSource"
    },
    "@cdktf/provider-github.repository.RepositoryPagesSourceOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositoryPagesSourceOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository/index.ts",
          "line": 252
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 245
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 304
          },
          "name": "resetPath"
        }
      ],
      "name": "RepositoryPagesSourceOutputReference",
      "namespace": "repository",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 292
          },
          "name": "branchInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 308
          },
          "name": "pathInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 285
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 298
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 256
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositoryPagesSource"
          }
        }
      ],
      "symbolId": "src/repository/index:RepositoryPagesSourceOutputReference"
    },
    "@cdktf/provider-github.repository.RepositorySecurityAndAnalysis": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysis",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 649
      },
      "name": "RepositorySecurityAndAnalysis",
      "namespace": "repository",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#advanced_security Repository#advanced_security}",
            "stability": "stable",
            "summary": "advanced_security block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 655
          },
          "name": "advancedSecurity",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisAdvancedSecurity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#secret_scanning Repository#secret_scanning}",
            "stability": "stable",
            "summary": "secret_scanning block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 661
          },
          "name": "secretScanning",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanning"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#secret_scanning_push_protection Repository#secret_scanning_push_protection}",
            "stability": "stable",
            "summary": "secret_scanning_push_protection block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 667
          },
          "name": "secretScanningPushProtection",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanningPushProtection"
          }
        }
      ],
      "symbolId": "src/repository/index:RepositorySecurityAndAnalysis"
    },
    "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisAdvancedSecurity": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisAdvancedSecurity",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 457
      },
      "name": "RepositorySecurityAndAnalysisAdvancedSecurity",
      "namespace": "repository",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#status Repository#status}",
            "stability": "stable",
            "summary": "Set to 'enabled' to enable advanced security features on the repository. Can be 'enabled' or 'disabled'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 463
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository/index:RepositorySecurityAndAnalysisAdvancedSecurity"
    },
    "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisAdvancedSecurityOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisAdvancedSecurityOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository/index.ts",
          "line": 483
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 476
      },
      "name": "RepositorySecurityAndAnalysisAdvancedSecurityOutputReference",
      "namespace": "repository",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 517
          },
          "name": "statusInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 510
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 487
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisAdvancedSecurity"
          }
        }
      ],
      "symbolId": "src/repository/index:RepositorySecurityAndAnalysisAdvancedSecurityOutputReference"
    },
    "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository/index.ts",
          "line": 689
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 682
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 731
          },
          "name": "putAdvancedSecurity",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisAdvancedSecurity"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 747
          },
          "name": "putSecretScanning",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanning"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 763
          },
          "name": "putSecretScanningPushProtection",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanningPushProtection"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 734
          },
          "name": "resetAdvancedSecurity"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 750
          },
          "name": "resetSecretScanning"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 766
          },
          "name": "resetSecretScanningPushProtection"
        }
      ],
      "name": "RepositorySecurityAndAnalysisOutputReference",
      "namespace": "repository",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 728
          },
          "name": "advancedSecurity",
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisAdvancedSecurityOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 744
          },
          "name": "secretScanning",
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanningOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 760
          },
          "name": "secretScanningPushProtection",
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanningPushProtectionOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 738
          },
          "name": "advancedSecurityInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisAdvancedSecurity"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 754
          },
          "name": "secretScanningInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanning"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 770
          },
          "name": "secretScanningPushProtectionInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanningPushProtection"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 693
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysis"
          }
        }
      ],
      "symbolId": "src/repository/index:RepositorySecurityAndAnalysisOutputReference"
    },
    "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanning": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanning",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 521
      },
      "name": "RepositorySecurityAndAnalysisSecretScanning",
      "namespace": "repository",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#status Repository#status}",
            "stability": "stable",
            "summary": "Set to 'enabled' to enable secret scanning on the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 527
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository/index:RepositorySecurityAndAnalysisSecretScanning"
    },
    "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanningOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanningOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository/index.ts",
          "line": 547
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 540
      },
      "name": "RepositorySecurityAndAnalysisSecretScanningOutputReference",
      "namespace": "repository",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 581
          },
          "name": "statusInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 574
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 551
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanning"
          }
        }
      ],
      "symbolId": "src/repository/index:RepositorySecurityAndAnalysisSecretScanningOutputReference"
    },
    "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanningPushProtection": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanningPushProtection",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 585
      },
      "name": "RepositorySecurityAndAnalysisSecretScanningPushProtection",
      "namespace": "repository",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#status Repository#status}",
            "stability": "stable",
            "summary": "Set to 'enabled' to enable secret scanning push protection on the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 591
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository/index:RepositorySecurityAndAnalysisSecretScanningPushProtection"
    },
    "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanningPushProtectionOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanningPushProtectionOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository/index.ts",
          "line": 611
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 604
      },
      "name": "RepositorySecurityAndAnalysisSecretScanningPushProtectionOutputReference",
      "namespace": "repository",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 645
          },
          "name": "statusInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 638
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 615
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositorySecurityAndAnalysisSecretScanningPushProtection"
          }
        }
      ],
      "symbolId": "src/repository/index:RepositorySecurityAndAnalysisSecretScanningPushProtectionOutputReference"
    },
    "@cdktf/provider-github.repository.RepositoryTemplate": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositoryTemplate",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 774
      },
      "name": "RepositoryTemplate",
      "namespace": "repository",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#owner Repository#owner}",
            "stability": "stable",
            "summary": "The GitHub organization or user the template repository is owned by."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 786
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#repository Repository#repository}",
            "stability": "stable",
            "summary": "The name of the template repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 792
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository#include_all_branches Repository#include_all_branches}",
            "stability": "stable",
            "summary": "Whether the new repository should include all the branches from the template repository (defaults to 'false', which includes only the default branch from the template)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 780
          },
          "name": "includeAllBranches",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository/index:RepositoryTemplate"
    },
    "@cdktf/provider-github.repository.RepositoryTemplateOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repository.RepositoryTemplateOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository/index.ts",
          "line": 814
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository/index.ts",
        "line": 807
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 859
          },
          "name": "resetIncludeAllBranches"
        }
      ],
      "name": "RepositoryTemplateOutputReference",
      "namespace": "repository",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 863
          },
          "name": "includeAllBranchesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 876
          },
          "name": "ownerInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 889
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 853
          },
          "name": "includeAllBranches",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 869
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 882
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository/index.ts",
            "line": 818
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repository.RepositoryTemplate"
          }
        }
      ],
      "symbolId": "src/repository/index:RepositoryTemplateOutputReference"
    },
    "@cdktf/provider-github.repositoryAutolinkReference.RepositoryAutolinkReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_autolink_reference github_repository_autolink_reference}."
      },
      "fqn": "@cdktf/provider-github.repositoryAutolinkReference.RepositoryAutolinkReference",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_autolink_reference github_repository_autolink_reference} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-autolink-reference/index.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryAutolinkReference.RepositoryAutolinkReferenceConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-autolink-reference/index.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryAutolinkReference resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 68
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryAutolinkReference to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_autolink_reference#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryAutolinkReference that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryAutolinkReference to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 123
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 139
          },
          "name": "resetIsAlphanumeric"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 190
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryAutolinkReference",
      "namespace": "repositoryAutolinkReference",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 56
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 111
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 127
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 143
          },
          "name": "isAlphanumericInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 156
          },
          "name": "keyPrefixInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 169
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 182
          },
          "name": "targetUrlTemplateInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 117
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 133
          },
          "name": "isAlphanumeric",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 149
          },
          "name": "keyPrefix",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 162
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 175
          },
          "name": "targetUrlTemplate",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-autolink-reference/index:RepositoryAutolinkReference"
    },
    "@cdktf/provider-github.repositoryAutolinkReference.RepositoryAutolinkReferenceConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryAutolinkReference.RepositoryAutolinkReferenceConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-autolink-reference/index.ts",
        "line": 14
      },
      "name": "RepositoryAutolinkReferenceConfig",
      "namespace": "repositoryAutolinkReference",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_autolink_reference#key_prefix RepositoryAutolinkReference#key_prefix}",
            "stability": "stable",
            "summary": "This prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 33
          },
          "name": "keyPrefix",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_autolink_reference#repository RepositoryAutolinkReference#repository}",
            "stability": "stable",
            "summary": "The repository name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 39
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "must be a valid URL and contain `<num>` for the reference number\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_autolink_reference#target_url_template RepositoryAutolinkReference#target_url_template}",
            "stability": "stable",
            "summary": "The template of the target URL used for the links;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 45
          },
          "name": "targetUrlTemplate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_autolink_reference#id RepositoryAutolinkReference#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_autolink_reference#is_alphanumeric RepositoryAutolinkReference#is_alphanumeric}",
            "stability": "stable",
            "summary": "Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-autolink-reference/index.ts",
            "line": 27
          },
          "name": "isAlphanumeric",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-autolink-reference/index:RepositoryAutolinkReferenceConfig"
    },
    "@cdktf/provider-github.repositoryCollaborator.RepositoryCollaborator": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborator github_repository_collaborator}."
      },
      "fqn": "@cdktf/provider-github.repositoryCollaborator.RepositoryCollaborator",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborator github_repository_collaborator} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-collaborator/index.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryCollaborator.RepositoryCollaboratorConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-collaborator/index.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryCollaborator resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 68
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryCollaborator to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborator#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryCollaborator that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryCollaborator to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 118
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 139
          },
          "name": "resetPermission"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 155
          },
          "name": "resetPermissionDiffSuppression"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 193
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryCollaborator",
      "namespace": "repositoryCollaborator",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 56
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 127
          },
          "name": "invitationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 122
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 159
          },
          "name": "permissionDiffSuppressionInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 143
          },
          "name": "permissionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 172
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 185
          },
          "name": "usernameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 112
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 133
          },
          "name": "permission",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 149
          },
          "name": "permissionDiffSuppression",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 165
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 178
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-collaborator/index:RepositoryCollaborator"
    },
    "@cdktf/provider-github.repositoryCollaborator.RepositoryCollaboratorConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryCollaborator.RepositoryCollaboratorConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-collaborator/index.ts",
        "line": 14
      },
      "name": "RepositoryCollaboratorConfig",
      "namespace": "repositoryCollaborator",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborator#repository RepositoryCollaborator#repository}",
            "stability": "stable",
            "summary": "The GitHub repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 39
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborator#username RepositoryCollaborator#username}",
            "stability": "stable",
            "summary": "The user to add to the repository as a collaborator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 45
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborator#id RepositoryCollaborator#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be one of 'pull', 'push', 'maintain', 'triage' or 'admin' or the name of an existing custom repository role within the organization for organization-owned repositories. Must be 'push' for personal repositories. Defaults to 'push'.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborator#permission RepositoryCollaborator#permission}",
            "stability": "stable",
            "summary": "The permission of the outside collaborator for the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 27
          },
          "name": "permission",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborator#permission_diff_suppression RepositoryCollaborator#permission_diff_suppression}",
            "stability": "stable",
            "summary": "Suppress plan diffs for triage and maintain. Defaults to 'false'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborator/index.ts",
            "line": 33
          },
          "name": "permissionDiffSuppression",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-collaborator/index:RepositoryCollaboratorConfig"
    },
    "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaborators": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborators github_repository_collaborators}."
      },
      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaborators",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborators github_repository_collaborators} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-collaborators/index.ts",
          "line": 321
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-collaborators/index.ts",
        "line": 289
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryCollaborators resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 306
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryCollaborators to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborators#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryCollaborators that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryCollaborators to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 387
          },
          "name": "putTeam",
          "parameters": [
            {
              "name": "value",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "cdktf.IResolvable"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsTeam"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 403
          },
          "name": "putUser",
          "parameters": [
            {
              "name": "value",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "cdktf.IResolvable"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsUser"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 355
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 390
          },
          "name": "resetTeam"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 406
          },
          "name": "resetUser"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 418
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryCollaborators",
      "namespace": "repositoryCollaborators",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 294
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 365
          },
          "name": "invitationIds",
          "type": {
            "fqn": "cdktf.StringMap"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 384
          },
          "name": "team",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsTeamList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 400
          },
          "name": "user",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsUserList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 359
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 378
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 394
          },
          "name": "teamInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsTeam"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 410
          },
          "name": "userInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsUser"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 349
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 371
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-collaborators/index:RepositoryCollaborators"
    },
    "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-collaborators/index.ts",
        "line": 14
      },
      "name": "RepositoryCollaboratorsConfig",
      "namespace": "repositoryCollaborators",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborators#repository RepositoryCollaborators#repository}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 25
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborators#id RepositoryCollaborators#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborators#team RepositoryCollaborators#team}",
            "stability": "stable",
            "summary": "team block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 31
          },
          "name": "team",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsTeam"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborators#user RepositoryCollaborators#user}",
            "stability": "stable",
            "summary": "user block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 37
          },
          "name": "user",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsUser"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-collaborators/index:RepositoryCollaboratorsConfig"
    },
    "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsTeam": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsTeam",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-collaborators/index.ts",
        "line": 39
      },
      "name": "RepositoryCollaboratorsTeam",
      "namespace": "repositoryCollaborators",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborators#team_id RepositoryCollaborators#team_id}",
            "stability": "stable",
            "summary": "Team ID or slug to add to the repository as a collaborator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 49
          },
          "name": "teamId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborators#permission RepositoryCollaborators#permission}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 43
          },
          "name": "permission",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-collaborators/index:RepositoryCollaboratorsTeam"
    },
    "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsTeamList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsTeamList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-collaborators/index.ts",
          "line": 151
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-collaborators/index.ts",
        "line": 143
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 158
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsTeamOutputReference"
            }
          }
        }
      ],
      "name": "RepositoryCollaboratorsTeamList",
      "namespace": "repositoryCollaborators",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 151
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 151
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 151
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 144
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsTeam"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-collaborators/index:RepositoryCollaboratorsTeamList"
    },
    "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsTeamOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsTeamOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-collaborators/index.ts",
          "line": 73
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-collaborators/index.ts",
        "line": 63
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 121
          },
          "name": "resetPermission"
        }
      ],
      "name": "RepositoryCollaboratorsTeamOutputReference",
      "namespace": "repositoryCollaborators",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 125
          },
          "name": "permissionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 138
          },
          "name": "teamIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 115
          },
          "name": "permission",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 131
          },
          "name": "teamId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 77
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsTeam"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-collaborators/index:RepositoryCollaboratorsTeamOutputReference"
    },
    "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsUser": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsUser",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-collaborators/index.ts",
        "line": 162
      },
      "name": "RepositoryCollaboratorsUser",
      "namespace": "repositoryCollaborators",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborators#username RepositoryCollaborators#username}",
            "stability": "stable",
            "summary": "(Required) The user to add to the repository as a collaborator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 172
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_collaborators#permission RepositoryCollaborators#permission}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 166
          },
          "name": "permission",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-collaborators/index:RepositoryCollaboratorsUser"
    },
    "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsUserList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsUserList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-collaborators/index.ts",
          "line": 274
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-collaborators/index.ts",
        "line": 266
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 281
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsUserOutputReference"
            }
          }
        }
      ],
      "name": "RepositoryCollaboratorsUserList",
      "namespace": "repositoryCollaborators",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 274
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 274
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 274
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 267
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsUser"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-collaborators/index:RepositoryCollaboratorsUserList"
    },
    "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsUserOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsUserOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-collaborators/index.ts",
          "line": 196
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-collaborators/index.ts",
        "line": 186
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 244
          },
          "name": "resetPermission"
        }
      ],
      "name": "RepositoryCollaboratorsUserOutputReference",
      "namespace": "repositoryCollaborators",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 248
          },
          "name": "permissionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 261
          },
          "name": "usernameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 238
          },
          "name": "permission",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 254
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-collaborators/index.ts",
            "line": 200
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "fqn": "@cdktf/provider-github.repositoryCollaborators.RepositoryCollaboratorsUser"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-collaborators/index:RepositoryCollaboratorsUserOutputReference"
    },
    "@cdktf/provider-github.repositoryDependabotSecurityUpdates.RepositoryDependabotSecurityUpdates": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_dependabot_security_updates github_repository_dependabot_security_updates}."
      },
      "fqn": "@cdktf/provider-github.repositoryDependabotSecurityUpdates.RepositoryDependabotSecurityUpdates",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_dependabot_security_updates github_repository_dependabot_security_updates} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-dependabot-security-updates/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryDependabotSecurityUpdates.RepositoryDependabotSecurityUpdatesConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-dependabot-security-updates/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryDependabotSecurityUpdates resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-dependabot-security-updates/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryDependabotSecurityUpdates to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_dependabot_security_updates#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryDependabotSecurityUpdates that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryDependabotSecurityUpdates to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-dependabot-security-updates/index.ts",
            "line": 117
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-dependabot-security-updates/index.ts",
            "line": 142
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryDependabotSecurityUpdates",
      "namespace": "repositoryDependabotSecurityUpdates",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-dependabot-security-updates/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-dependabot-security-updates/index.ts",
            "line": 105
          },
          "name": "enabledInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-dependabot-security-updates/index.ts",
            "line": 121
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-dependabot-security-updates/index.ts",
            "line": 134
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-dependabot-security-updates/index.ts",
            "line": 98
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-dependabot-security-updates/index.ts",
            "line": 111
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-dependabot-security-updates/index.ts",
            "line": 127
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-dependabot-security-updates/index:RepositoryDependabotSecurityUpdates"
    },
    "@cdktf/provider-github.repositoryDependabotSecurityUpdates.RepositoryDependabotSecurityUpdatesConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryDependabotSecurityUpdates.RepositoryDependabotSecurityUpdatesConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-dependabot-security-updates/index.ts",
        "line": 14
      },
      "name": "RepositoryDependabotSecurityUpdatesConfig",
      "namespace": "repositoryDependabotSecurityUpdates",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_dependabot_security_updates#enabled RepositoryDependabotSecurityUpdates#enabled}",
            "stability": "stable",
            "summary": "The state of the automated security fixes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-dependabot-security-updates/index.ts",
            "line": 20
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_dependabot_security_updates#repository RepositoryDependabotSecurityUpdates#repository}",
            "stability": "stable",
            "summary": "The GitHub repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-dependabot-security-updates/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_dependabot_security_updates#id RepositoryDependabotSecurityUpdates#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-dependabot-security-updates/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-dependabot-security-updates/index:RepositoryDependabotSecurityUpdatesConfig"
    },
    "@cdktf/provider-github.repositoryDeployKey.RepositoryDeployKey": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deploy_key github_repository_deploy_key}."
      },
      "fqn": "@cdktf/provider-github.repositoryDeployKey.RepositoryDeployKey",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deploy_key github_repository_deploy_key} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-deploy-key/index.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryDeployKey.RepositoryDeployKeyConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-deploy-key/index.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryDeployKey resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 68
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryDeployKey to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deploy_key#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryDeployKey that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryDeployKey to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 123
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 152
          },
          "name": "resetReadOnly"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 190
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryDeployKey",
      "namespace": "repositoryDeployKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 56
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 111
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 127
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 140
          },
          "name": "keyInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 156
          },
          "name": "readOnlyInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 169
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 182
          },
          "name": "titleInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 117
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 133
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 146
          },
          "name": "readOnly",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 162
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 175
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-deploy-key/index:RepositoryDeployKey"
    },
    "@cdktf/provider-github.repositoryDeployKey.RepositoryDeployKeyConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryDeployKey.RepositoryDeployKeyConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-deploy-key/index.ts",
        "line": 14
      },
      "name": "RepositoryDeployKeyConfig",
      "namespace": "repositoryDeployKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deploy_key#key RepositoryDeployKey#key}",
            "stability": "stable",
            "summary": "A SSH key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 27
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deploy_key#repository RepositoryDeployKey#repository}",
            "stability": "stable",
            "summary": "Name of the GitHub repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 39
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deploy_key#title RepositoryDeployKey#title}",
            "stability": "stable",
            "summary": "A title."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 45
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deploy_key#id RepositoryDeployKey#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deploy_key#read_only RepositoryDeployKey#read_only}",
            "stability": "stable",
            "summary": "A boolean qualifying the key to be either read only or read/write."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deploy-key/index.ts",
            "line": 33
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-deploy-key/index:RepositoryDeployKeyConfig"
    },
    "@cdktf/provider-github.repositoryDeploymentBranchPolicy.RepositoryDeploymentBranchPolicy": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deployment_branch_policy github_repository_deployment_branch_policy}."
      },
      "fqn": "@cdktf/provider-github.repositoryDeploymentBranchPolicy.RepositoryDeploymentBranchPolicy",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deployment_branch_policy github_repository_deployment_branch_policy} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-deployment-branch-policy/index.ts",
          "line": 77
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryDeploymentBranchPolicy.RepositoryDeploymentBranchPolicyConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-deployment-branch-policy/index.ts",
        "line": 45
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryDeploymentBranchPolicy resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 62
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryDeploymentBranchPolicy to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deployment_branch_policy#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryDeploymentBranchPolicy that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryDeploymentBranchPolicy to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 129
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 167
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryDeploymentBranchPolicy",
      "namespace": "repositoryDeploymentBranchPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 50
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 117
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 112
          },
          "name": "environmentNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 133
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 146
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 159
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 105
          },
          "name": "environmentName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 123
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 139
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 152
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-deployment-branch-policy/index:RepositoryDeploymentBranchPolicy"
    },
    "@cdktf/provider-github.repositoryDeploymentBranchPolicy.RepositoryDeploymentBranchPolicyConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryDeploymentBranchPolicy.RepositoryDeploymentBranchPolicyConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-deployment-branch-policy/index.ts",
        "line": 14
      },
      "name": "RepositoryDeploymentBranchPolicyConfig",
      "namespace": "repositoryDeploymentBranchPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deployment_branch_policy#environment_name RepositoryDeploymentBranchPolicy#environment_name}",
            "stability": "stable",
            "summary": "The target environment name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 20
          },
          "name": "environmentName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deployment_branch_policy#name RepositoryDeploymentBranchPolicy#name}",
            "stability": "stable",
            "summary": "The name of the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 33
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deployment_branch_policy#repository RepositoryDeploymentBranchPolicy#repository}",
            "stability": "stable",
            "summary": "The GitHub repository name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 39
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_deployment_branch_policy#id RepositoryDeploymentBranchPolicy#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-deployment-branch-policy/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-deployment-branch-policy/index:RepositoryDeploymentBranchPolicyConfig"
    },
    "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironment": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment github_repository_environment}."
      },
      "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironment",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment github_repository_environment} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-environment/index.ts",
          "line": 307
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-environment/index.ts",
        "line": 275
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryEnvironment resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 292
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryEnvironment to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryEnvironment that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryEnvironment to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 398
          },
          "name": "putDeploymentBranchPolicy",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentDeploymentBranchPolicy"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 414
          },
          "name": "putReviewers",
          "parameters": [
            {
              "name": "value",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "cdktf.IResolvable"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentReviewers"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 401
          },
          "name": "resetDeploymentBranchPolicy"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 356
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 417
          },
          "name": "resetReviewers"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 385
          },
          "name": "resetWaitTimer"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 429
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryEnvironment",
      "namespace": "repositoryEnvironment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 280
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 395
          },
          "name": "deploymentBranchPolicy",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentDeploymentBranchPolicyOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 411
          },
          "name": "reviewers",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentReviewersList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 405
          },
          "name": "deploymentBranchPolicyInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentDeploymentBranchPolicy"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 344
          },
          "name": "environmentInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 360
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 373
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 421
          },
          "name": "reviewersInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentReviewers"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 389
          },
          "name": "waitTimerInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 337
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 350
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 366
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 379
          },
          "name": "waitTimer",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/repository-environment/index:RepositoryEnvironment"
    },
    "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-environment/index.ts",
        "line": 14
      },
      "name": "RepositoryEnvironmentConfig",
      "namespace": "repositoryEnvironment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment#environment RepositoryEnvironment#environment}",
            "stability": "stable",
            "summary": "The name of the environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 20
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment#repository RepositoryEnvironment#repository}",
            "stability": "stable",
            "summary": "The repository of the environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment#deployment_branch_policy RepositoryEnvironment#deployment_branch_policy}",
            "stability": "stable",
            "summary": "deployment_branch_policy block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 45
          },
          "name": "deploymentBranchPolicy",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentDeploymentBranchPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment#id RepositoryEnvironment#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment#reviewers RepositoryEnvironment#reviewers}",
            "stability": "stable",
            "summary": "reviewers block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 51
          },
          "name": "reviewers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentReviewers"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment#wait_timer RepositoryEnvironment#wait_timer}",
            "stability": "stable",
            "summary": "Amount of time to delay a job after the job is initially triggered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 39
          },
          "name": "waitTimer",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/repository-environment/index:RepositoryEnvironmentConfig"
    },
    "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentDeploymentBranchPolicy": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentDeploymentBranchPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-environment/index.ts",
        "line": 53
      },
      "name": "RepositoryEnvironmentDeploymentBranchPolicy",
      "namespace": "repositoryEnvironment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment#custom_branch_policies RepositoryEnvironment#custom_branch_policies}",
            "stability": "stable",
            "summary": "Whether only branches that match the specified name patterns can deploy to this environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 59
          },
          "name": "customBranchPolicies",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment#protected_branches RepositoryEnvironment#protected_branches}",
            "stability": "stable",
            "summary": "Whether only branches with branch protection rules can deploy to this environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 65
          },
          "name": "protectedBranches",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-environment/index:RepositoryEnvironmentDeploymentBranchPolicy"
    },
    "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentDeploymentBranchPolicyOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentDeploymentBranchPolicyOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-environment/index.ts",
          "line": 86
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-environment/index.ts",
        "line": 79
      },
      "name": "RepositoryEnvironmentDeploymentBranchPolicyOutputReference",
      "namespace": "repositoryEnvironment",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 126
          },
          "name": "customBranchPoliciesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 139
          },
          "name": "protectedBranchesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 119
          },
          "name": "customBranchPolicies",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 132
          },
          "name": "protectedBranches",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 90
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentDeploymentBranchPolicy"
          }
        }
      ],
      "symbolId": "src/repository-environment/index:RepositoryEnvironmentDeploymentBranchPolicyOutputReference"
    },
    "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentReviewers": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentReviewers",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-environment/index.ts",
        "line": 143
      },
      "name": "RepositoryEnvironmentReviewers",
      "namespace": "repositoryEnvironment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment#teams RepositoryEnvironment#teams}",
            "stability": "stable",
            "summary": "Up to 6 IDs for teams who may review jobs that reference the environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 149
          },
          "name": "teams",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment#users RepositoryEnvironment#users}",
            "stability": "stable",
            "summary": "Up to 6 IDs for users who may review jobs that reference the environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 155
          },
          "name": "users",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/repository-environment/index:RepositoryEnvironmentReviewers"
    },
    "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentReviewersList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentReviewersList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-environment/index.ts",
          "line": 260
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-environment/index.ts",
        "line": 252
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 267
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentReviewersOutputReference"
            }
          }
        }
      ],
      "name": "RepositoryEnvironmentReviewersList",
      "namespace": "repositoryEnvironment",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 260
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 260
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 260
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 253
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentReviewers"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-environment/index:RepositoryEnvironmentReviewersList"
    },
    "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentReviewersOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentReviewersOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-environment/index.ts",
          "line": 179
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-environment/index.ts",
        "line": 169
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 227
          },
          "name": "resetTeams"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 243
          },
          "name": "resetUsers"
        }
      ],
      "name": "RepositoryEnvironmentReviewersOutputReference",
      "namespace": "repositoryEnvironment",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 231
          },
          "name": "teamsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 247
          },
          "name": "usersInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 221
          },
          "name": "teams",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 237
          },
          "name": "users",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment/index.ts",
            "line": 183
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "fqn": "@cdktf/provider-github.repositoryEnvironment.RepositoryEnvironmentReviewers"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-environment/index:RepositoryEnvironmentReviewersOutputReference"
    },
    "@cdktf/provider-github.repositoryEnvironmentDeploymentPolicy.RepositoryEnvironmentDeploymentPolicy": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment_deployment_policy github_repository_environment_deployment_policy}."
      },
      "fqn": "@cdktf/provider-github.repositoryEnvironmentDeploymentPolicy.RepositoryEnvironmentDeploymentPolicy",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment_deployment_policy github_repository_environment_deployment_policy} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-environment-deployment-policy/index.ts",
          "line": 77
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryEnvironmentDeploymentPolicy.RepositoryEnvironmentDeploymentPolicyConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-environment-deployment-policy/index.ts",
        "line": 45
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryEnvironmentDeploymentPolicy resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 62
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryEnvironmentDeploymentPolicy to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment_deployment_policy#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryEnvironmentDeploymentPolicy that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryEnvironmentDeploymentPolicy to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 137
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 162
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryEnvironmentDeploymentPolicy",
      "namespace": "repositoryEnvironmentDeploymentPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 50
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 112
          },
          "name": "branchPatternInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 125
          },
          "name": "environmentInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 141
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 154
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 105
          },
          "name": "branchPattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 118
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 131
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 147
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-environment-deployment-policy/index:RepositoryEnvironmentDeploymentPolicy"
    },
    "@cdktf/provider-github.repositoryEnvironmentDeploymentPolicy.RepositoryEnvironmentDeploymentPolicyConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryEnvironmentDeploymentPolicy.RepositoryEnvironmentDeploymentPolicyConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-environment-deployment-policy/index.ts",
        "line": 14
      },
      "name": "RepositoryEnvironmentDeploymentPolicyConfig",
      "namespace": "repositoryEnvironmentDeploymentPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment_deployment_policy#branch_pattern RepositoryEnvironmentDeploymentPolicy#branch_pattern}",
            "stability": "stable",
            "summary": "The name pattern that branches must match in order to deploy to the environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 20
          },
          "name": "branchPattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment_deployment_policy#environment RepositoryEnvironmentDeploymentPolicy#environment}",
            "stability": "stable",
            "summary": "The name of the environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 26
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment_deployment_policy#repository RepositoryEnvironmentDeploymentPolicy#repository}",
            "stability": "stable",
            "summary": "The name of the repository. The name is not case sensitive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 39
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_environment_deployment_policy#id RepositoryEnvironmentDeploymentPolicy#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-environment-deployment-policy/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-environment-deployment-policy/index:RepositoryEnvironmentDeploymentPolicyConfig"
    },
    "@cdktf/provider-github.repositoryFile.RepositoryFile": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_file github_repository_file}."
      },
      "fqn": "@cdktf/provider-github.repositoryFile.RepositoryFile",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_file github_repository_file} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-file/index.ts",
          "line": 107
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryFile.RepositoryFileConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-file/index.ts",
        "line": 75
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryFile resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 92
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryFile to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_file#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryFile that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryFile to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 146
          },
          "name": "resetBranch"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 162
          },
          "name": "resetCommitAuthor"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 178
          },
          "name": "resetCommitEmail"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 194
          },
          "name": "resetCommitMessage"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 241
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 257
          },
          "name": "resetOverwriteOnCreate"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 292
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryFile",
      "namespace": "repositoryFile",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 80
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 203
          },
          "name": "commitSha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 266
          },
          "name": "ref",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 284
          },
          "name": "sha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 150
          },
          "name": "branchInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 166
          },
          "name": "commitAuthorInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 182
          },
          "name": "commitEmailInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 198
          },
          "name": "commitMessageInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 216
          },
          "name": "contentInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 229
          },
          "name": "fileInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 245
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 261
          },
          "name": "overwriteOnCreateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 279
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 140
          },
          "name": "branch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 156
          },
          "name": "commitAuthor",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 172
          },
          "name": "commitEmail",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 188
          },
          "name": "commitMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 209
          },
          "name": "content",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 222
          },
          "name": "file",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 235
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 251
          },
          "name": "overwriteOnCreate",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 272
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-file/index:RepositoryFile"
    },
    "@cdktf/provider-github.repositoryFile.RepositoryFileConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryFile.RepositoryFileConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-file/index.ts",
        "line": 14
      },
      "name": "RepositoryFileConfig",
      "namespace": "repositoryFile",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_file#content RepositoryFile#content}",
            "stability": "stable",
            "summary": "The file's content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 44
          },
          "name": "content",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_file#file RepositoryFile#file}",
            "stability": "stable",
            "summary": "The file path to manage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 50
          },
          "name": "file",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_file#repository RepositoryFile#repository}",
            "stability": "stable",
            "summary": "The repository name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 69
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_file#branch RepositoryFile#branch}",
            "stability": "stable",
            "summary": "The branch name, defaults to the repository's default branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 20
          },
          "name": "branch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App. \n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_file#commit_author RepositoryFile#commit_author}",
            "stability": "stable",
            "summary": "The commit author name, defaults to the authenticated user's name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 26
          },
          "name": "commitAuthor",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_file#commit_email RepositoryFile#commit_email}",
            "stability": "stable",
            "summary": "The commit author email address, defaults to the authenticated user's email address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 32
          },
          "name": "commitEmail",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_file#commit_message RepositoryFile#commit_message}",
            "stability": "stable",
            "summary": "The commit message when creating, updating or deleting the file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 38
          },
          "name": "commitMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_file#id RepositoryFile#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 57
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_file#overwrite_on_create RepositoryFile#overwrite_on_create}",
            "stability": "stable",
            "summary": "Enable overwriting existing files, defaults to \"false\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-file/index.ts",
            "line": 63
          },
          "name": "overwriteOnCreate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-file/index:RepositoryFileConfig"
    },
    "@cdktf/provider-github.repositoryMilestone.RepositoryMilestone": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_milestone github_repository_milestone}."
      },
      "fqn": "@cdktf/provider-github.repositoryMilestone.RepositoryMilestone",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_milestone github_repository_milestone} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-milestone/index.ts",
          "line": 95
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryMilestone.RepositoryMilestoneConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-milestone/index.ts",
        "line": 63
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryMilestone resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 80
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryMilestone to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_milestone#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryMilestone that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryMilestone to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 132
          },
          "name": "resetDescription"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 148
          },
          "name": "resetDueDate"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 164
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 211
          },
          "name": "resetState"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 236
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryMilestone",
      "namespace": "repositoryMilestone",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 68
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 173
          },
          "name": "number",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 136
          },
          "name": "descriptionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 152
          },
          "name": "dueDateInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 168
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 186
          },
          "name": "ownerInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 199
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 215
          },
          "name": "stateInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 228
          },
          "name": "titleInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 126
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 142
          },
          "name": "dueDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 158
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 179
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 192
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 205
          },
          "name": "state",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 221
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-milestone/index:RepositoryMilestone"
    },
    "@cdktf/provider-github.repositoryMilestone.RepositoryMilestoneConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryMilestone.RepositoryMilestoneConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-milestone/index.ts",
        "line": 14
      },
      "name": "RepositoryMilestoneConfig",
      "namespace": "repositoryMilestone",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_milestone#owner RepositoryMilestone#owner}",
            "stability": "stable",
            "summary": "The owner of the GitHub Repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 39
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_milestone#repository RepositoryMilestone#repository}",
            "stability": "stable",
            "summary": "The name of the GitHub Repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 45
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_milestone#title RepositoryMilestone#title}",
            "stability": "stable",
            "summary": "The title of the milestone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 57
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_milestone#description RepositoryMilestone#description}",
            "stability": "stable",
            "summary": "A description of the milestone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 20
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_milestone#due_date RepositoryMilestone#due_date}",
            "stability": "stable",
            "summary": "The milestone due date. In 'yyyy-mm-dd' format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 26
          },
          "name": "dueDate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_milestone#id RepositoryMilestone#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_milestone#state RepositoryMilestone#state}",
            "stability": "stable",
            "summary": "The state of the milestone. Either 'open' or 'closed'. Default: 'open'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-milestone/index.ts",
            "line": 51
          },
          "name": "state",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-milestone/index:RepositoryMilestoneConfig"
    },
    "@cdktf/provider-github.repositoryProject.RepositoryProject": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_project github_repository_project}."
      },
      "fqn": "@cdktf/provider-github.repositoryProject.RepositoryProject",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_project github_repository_project} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-project/index.ts",
          "line": 77
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryProject.RepositoryProjectConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-project/index.ts",
        "line": 45
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryProject resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 62
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryProject to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_project#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryProject that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryProject to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 111
          },
          "name": "resetBody"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 132
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 175
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryProject",
      "namespace": "repositoryProject",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 50
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 120
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 167
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 115
          },
          "name": "bodyInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 136
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 149
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 162
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 105
          },
          "name": "body",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 126
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 142
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 155
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-project/index:RepositoryProject"
    },
    "@cdktf/provider-github.repositoryProject.RepositoryProjectConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryProject.RepositoryProjectConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-project/index.ts",
        "line": 14
      },
      "name": "RepositoryProjectConfig",
      "namespace": "repositoryProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_project#name RepositoryProject#name}",
            "stability": "stable",
            "summary": "The name of the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 33
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_project#repository RepositoryProject#repository}",
            "stability": "stable",
            "summary": "The repository of the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 39
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_project#body RepositoryProject#body}",
            "stability": "stable",
            "summary": "The body of the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 20
          },
          "name": "body",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_project#id RepositoryProject#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-project/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-project/index:RepositoryProjectConfig"
    },
    "@cdktf/provider-github.repositoryPullRequest.RepositoryPullRequest": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_pull_request github_repository_pull_request}."
      },
      "fqn": "@cdktf/provider-github.repositoryPullRequest.RepositoryPullRequest",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_pull_request github_repository_pull_request} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-pull-request/index.ts",
          "line": 101
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryPullRequest.RepositoryPullRequestConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-pull-request/index.ts",
        "line": 69
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryPullRequest resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 86
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryPullRequest to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_pull_request#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryPullRequest that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryPullRequest to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 170
          },
          "name": "resetBody"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 209
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 230
          },
          "name": "resetMaintainerCanModify"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 261
          },
          "name": "resetOwner"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 296
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryPullRequest",
      "namespace": "repositoryPullRequest",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 74
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 158
          },
          "name": "baseSha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 179
          },
          "name": "draft",
          "type": {
            "fqn": "cdktf.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 197
          },
          "name": "headSha",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 218
          },
          "name": "labels",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 239
          },
          "name": "number",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 244
          },
          "name": "openedAt",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 249
          },
          "name": "openedBy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 270
          },
          "name": "state",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 288
          },
          "name": "updatedAt",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 140
          },
          "name": "baseRefInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 153
          },
          "name": "baseRepositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 174
          },
          "name": "bodyInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 192
          },
          "name": "headRefInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 213
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 234
          },
          "name": "maintainerCanModifyInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 265
          },
          "name": "ownerInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 283
          },
          "name": "titleInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 133
          },
          "name": "baseRef",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 146
          },
          "name": "baseRepository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 164
          },
          "name": "body",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 185
          },
          "name": "headRef",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 203
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 224
          },
          "name": "maintainerCanModify",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 255
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 276
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-pull-request/index:RepositoryPullRequest"
    },
    "@cdktf/provider-github.repositoryPullRequest.RepositoryPullRequestConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryPullRequest.RepositoryPullRequestConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-pull-request/index.ts",
        "line": 14
      },
      "name": "RepositoryPullRequestConfig",
      "namespace": "repositoryPullRequest",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_pull_request#base_ref RepositoryPullRequest#base_ref}",
            "stability": "stable",
            "summary": "Name of the branch serving as the base of the Pull Request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 20
          },
          "name": "baseRef",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_pull_request#base_repository RepositoryPullRequest#base_repository}",
            "stability": "stable",
            "summary": "Name of the base repository to retrieve the Pull Requests from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 26
          },
          "name": "baseRepository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_pull_request#head_ref RepositoryPullRequest#head_ref}",
            "stability": "stable",
            "summary": "Name of the branch serving as the head of the Pull Request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 38
          },
          "name": "headRef",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_pull_request#title RepositoryPullRequest#title}",
            "stability": "stable",
            "summary": "The title of the Pull Request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 63
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_pull_request#body RepositoryPullRequest#body}",
            "stability": "stable",
            "summary": "Body of the Pull Request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 32
          },
          "name": "body",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_pull_request#id RepositoryPullRequest#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 45
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_pull_request#maintainer_can_modify RepositoryPullRequest#maintainer_can_modify}",
            "stability": "stable",
            "summary": "Controls whether the base repository maintainers can modify the Pull Request. Default: 'false'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 51
          },
          "name": "maintainerCanModify",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_pull_request#owner RepositoryPullRequest#owner}",
            "stability": "stable",
            "summary": "Owner of the repository. If not provided, the provider's default owner is used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-pull-request/index.ts",
            "line": 57
          },
          "name": "owner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-pull-request/index:RepositoryPullRequestConfig"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRuleset": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset github_repository_ruleset}."
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRuleset",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset github_repository_ruleset} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 2084
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 2052
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryRuleset resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2069
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryRuleset to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryRuleset that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryRuleset to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2205
          },
          "name": "putBypassActors",
          "parameters": [
            {
              "name": "value",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "cdktf.IResolvable"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetBypassActors"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2221
          },
          "name": "putConditions",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2237
          },
          "name": "putRules",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRules"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2208
          },
          "name": "resetBypassActors"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2224
          },
          "name": "resetConditions"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2140
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2174
          },
          "name": "resetRepository"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2249
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryRuleset",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2057
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2202
          },
          "name": "bypassActors",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetBypassActorsList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2218
          },
          "name": "conditions",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditionsOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2128
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2162
          },
          "name": "nodeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2234
          },
          "name": "rules",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2183
          },
          "name": "rulesetId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2212
          },
          "name": "bypassActorsInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetBypassActors"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2228
          },
          "name": "conditionsInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditions"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2123
          },
          "name": "enforcementInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2144
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2157
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2178
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2241
          },
          "name": "rulesInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRules"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2196
          },
          "name": "targetInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2116
          },
          "name": "enforcement",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2134
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2150
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2168
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2189
          },
          "name": "target",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRuleset"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetBypassActors": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetBypassActors",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 65
      },
      "name": "RepositoryRulesetBypassActors",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "When `actor_type` is `OrganizationAdmin`, this should be set to `1`.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#actor_id RepositoryRuleset#actor_id}",
            "stability": "stable",
            "summary": "The ID of the actor that can bypass a ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 71
          },
          "name": "actorId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#actor_type RepositoryRuleset#actor_type}",
            "stability": "stable",
            "summary": "The type of actor that can bypass a ruleset. Can be one of: `RepositoryRole`, `Team`, `Integration`, `OrganizationAdmin`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 77
          },
          "name": "actorType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "pull_request means that an actor can only bypass rules on pull requests. Can be one of: `always`, `pull_request`.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#bypass_mode RepositoryRuleset#bypass_mode}",
            "stability": "stable",
            "summary": "When the specified actor can bypass the ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 83
          },
          "name": "bypassMode",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetBypassActors"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetBypassActorsList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetBypassActorsList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 202
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 194
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 209
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetBypassActorsOutputReference"
            }
          }
        }
      ],
      "name": "RepositoryRulesetBypassActorsList",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 202
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 202
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 202
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 195
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetBypassActors"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetBypassActorsList"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetBypassActorsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetBypassActorsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 108
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 98
      },
      "name": "RepositoryRulesetBypassActorsOutputReference",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 163
          },
          "name": "actorIdInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 176
          },
          "name": "actorTypeInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 189
          },
          "name": "bypassModeInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 156
          },
          "name": "actorId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 169
          },
          "name": "actorType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 182
          },
          "name": "bypassMode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 112
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetBypassActors"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetBypassActorsOutputReference"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditions": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 303
      },
      "name": "RepositoryRulesetConditions",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#ref_name RepositoryRuleset#ref_name}",
            "stability": "stable",
            "summary": "ref_name block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 309
          },
          "name": "refName",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditionsRefName"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetConditions"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditionsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditionsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 329
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 322
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 359
          },
          "name": "putRefName",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditionsRefName"
              }
            }
          ]
        }
      ],
      "name": "RepositoryRulesetConditionsOutputReference",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 356
          },
          "name": "refName",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditionsRefNameOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 363
          },
          "name": "refNameInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditionsRefName"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 333
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditions"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetConditionsOutputReference"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditionsRefName": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditionsRefName",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 213
      },
      "name": "RepositoryRulesetConditionsRefName",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#exclude RepositoryRuleset#exclude}",
            "stability": "stable",
            "summary": "Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 219
          },
          "name": "exclude",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#include RepositoryRuleset#include}",
            "stability": "stable",
            "summary": "Array of ref names or patterns to include."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 225
          },
          "name": "include",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetConditionsRefName"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditionsRefNameOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditionsRefNameOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 246
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 239
      },
      "name": "RepositoryRulesetConditionsRefNameOutputReference",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 286
          },
          "name": "excludeInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 299
          },
          "name": "includeInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 279
          },
          "name": "exclude",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 292
          },
          "name": "include",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 250
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditionsRefName"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetConditionsRefNameOutputReference"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 14
      },
      "name": "RepositoryRulesetConfig",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#enforcement RepositoryRuleset#enforcement}",
            "stability": "stable",
            "summary": "Possible values for Enforcement are `disabled`, `active`, `evaluate`. Note: `evaluate` is currently only supported for owners of type `organization`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 20
          },
          "name": "enforcement",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#name RepositoryRuleset#name}",
            "stability": "stable",
            "summary": "The name of the ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 33
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#rules RepositoryRuleset#rules}",
            "stability": "stable",
            "summary": "rules block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 63
          },
          "name": "rules",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRules"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#target RepositoryRuleset#target}",
            "stability": "stable",
            "summary": "Possible values are `branch` and `tag`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 45
          },
          "name": "target",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#bypass_actors RepositoryRuleset#bypass_actors}",
            "stability": "stable",
            "summary": "bypass_actors block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 51
          },
          "name": "bypassActors",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetBypassActors"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#conditions RepositoryRuleset#conditions}",
            "stability": "stable",
            "summary": "conditions block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 57
          },
          "name": "conditions",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetConditions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#id RepositoryRuleset#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#repository RepositoryRuleset#repository}",
            "stability": "stable",
            "summary": "Name of the repository to apply rulset to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 39
          },
          "name": "repository",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetConfig"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRules": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRules",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 1575
      },
      "name": "RepositoryRulesetRules",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#branch_name_pattern RepositoryRuleset#branch_name_pattern}",
            "stability": "stable",
            "summary": "branch_name_pattern block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1623
          },
          "name": "branchNamePattern",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesBranchNamePattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#commit_author_email_pattern RepositoryRuleset#commit_author_email_pattern}",
            "stability": "stable",
            "summary": "commit_author_email_pattern block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1629
          },
          "name": "commitAuthorEmailPattern",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitAuthorEmailPattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#commit_message_pattern RepositoryRuleset#commit_message_pattern}",
            "stability": "stable",
            "summary": "commit_message_pattern block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1635
          },
          "name": "commitMessagePattern",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitMessagePattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#committer_email_pattern RepositoryRuleset#committer_email_pattern}",
            "stability": "stable",
            "summary": "committer_email_pattern block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1641
          },
          "name": "committerEmailPattern",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitterEmailPattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#creation RepositoryRuleset#creation}",
            "stability": "stable",
            "summary": "Only allow users with bypass permission to create matching refs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1581
          },
          "name": "creation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#deletion RepositoryRuleset#deletion}",
            "stability": "stable",
            "summary": "Only allow users with bypass permissions to delete matching refs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1587
          },
          "name": "deletion",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#non_fast_forward RepositoryRuleset#non_fast_forward}",
            "stability": "stable",
            "summary": "Prevent users with push access from force pushing to branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1593
          },
          "name": "nonFastForward",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#pull_request RepositoryRuleset#pull_request}",
            "stability": "stable",
            "summary": "pull_request block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1647
          },
          "name": "pullRequest",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesPullRequest"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#required_deployments RepositoryRuleset#required_deployments}",
            "stability": "stable",
            "summary": "required_deployments block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1653
          },
          "name": "requiredDeployments",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredDeployments"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#required_linear_history RepositoryRuleset#required_linear_history}",
            "stability": "stable",
            "summary": "Prevent merge commits from being pushed to matching branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1599
          },
          "name": "requiredLinearHistory",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#required_signatures RepositoryRuleset#required_signatures}",
            "stability": "stable",
            "summary": "Commits pushed to matching branches must have verified signatures."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1605
          },
          "name": "requiredSignatures",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#required_status_checks RepositoryRuleset#required_status_checks}",
            "stability": "stable",
            "summary": "required_status_checks block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1659
          },
          "name": "requiredStatusChecks",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecks"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#tag_name_pattern RepositoryRuleset#tag_name_pattern}",
            "stability": "stable",
            "summary": "tag_name_pattern block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1665
          },
          "name": "tagNamePattern",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesTagNamePattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#update RepositoryRuleset#update}",
            "stability": "stable",
            "summary": "Only allow users with bypass permission to update matching refs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1611
          },
          "name": "update",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is only applicable to forked repositories. Requires `update` to be set to `true`.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#update_allows_fetch_and_merge RepositoryRuleset#update_allows_fetch_and_merge}",
            "stability": "stable",
            "summary": "Branch can pull changes from its upstream repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1617
          },
          "name": "updateAllowsFetchAndMerge",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRules"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesBranchNamePattern": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesBranchNamePattern",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 367
      },
      "name": "RepositoryRulesetRulesBranchNamePattern",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#operator RepositoryRuleset#operator}",
            "stability": "stable",
            "summary": "The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 385
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#pattern RepositoryRuleset#pattern}",
            "stability": "stable",
            "summary": "The pattern to match with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 391
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#name RepositoryRuleset#name}",
            "stability": "stable",
            "summary": "How this rule will appear to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 373
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#negate RepositoryRuleset#negate}",
            "stability": "stable",
            "summary": "If true, the rule will fail if the pattern matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 379
          },
          "name": "negate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesBranchNamePattern"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesBranchNamePatternOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesBranchNamePatternOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 414
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 407
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 465
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 481
          },
          "name": "resetNegate"
        }
      ],
      "name": "RepositoryRulesetRulesBranchNamePatternOutputReference",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 469
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 485
          },
          "name": "negateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 498
          },
          "name": "operatorInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 511
          },
          "name": "patternInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 459
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 475
          },
          "name": "negate",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 491
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 504
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 418
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesBranchNamePattern"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesBranchNamePatternOutputReference"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitAuthorEmailPattern": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitAuthorEmailPattern",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 515
      },
      "name": "RepositoryRulesetRulesCommitAuthorEmailPattern",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#operator RepositoryRuleset#operator}",
            "stability": "stable",
            "summary": "The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 533
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#pattern RepositoryRuleset#pattern}",
            "stability": "stable",
            "summary": "The pattern to match with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 539
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#name RepositoryRuleset#name}",
            "stability": "stable",
            "summary": "How this rule will appear to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 521
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#negate RepositoryRuleset#negate}",
            "stability": "stable",
            "summary": "If true, the rule will fail if the pattern matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 527
          },
          "name": "negate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesCommitAuthorEmailPattern"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitAuthorEmailPatternOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitAuthorEmailPatternOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 562
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 555
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 613
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 629
          },
          "name": "resetNegate"
        }
      ],
      "name": "RepositoryRulesetRulesCommitAuthorEmailPatternOutputReference",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 617
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 633
          },
          "name": "negateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 646
          },
          "name": "operatorInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 659
          },
          "name": "patternInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 607
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 623
          },
          "name": "negate",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 639
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 652
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 566
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitAuthorEmailPattern"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesCommitAuthorEmailPatternOutputReference"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitMessagePattern": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitMessagePattern",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 663
      },
      "name": "RepositoryRulesetRulesCommitMessagePattern",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#operator RepositoryRuleset#operator}",
            "stability": "stable",
            "summary": "The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 681
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#pattern RepositoryRuleset#pattern}",
            "stability": "stable",
            "summary": "The pattern to match with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 687
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#name RepositoryRuleset#name}",
            "stability": "stable",
            "summary": "How this rule will appear to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 669
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#negate RepositoryRuleset#negate}",
            "stability": "stable",
            "summary": "If true, the rule will fail if the pattern matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 675
          },
          "name": "negate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesCommitMessagePattern"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitMessagePatternOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitMessagePatternOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 710
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 703
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 761
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 777
          },
          "name": "resetNegate"
        }
      ],
      "name": "RepositoryRulesetRulesCommitMessagePatternOutputReference",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 765
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 781
          },
          "name": "negateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 794
          },
          "name": "operatorInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 807
          },
          "name": "patternInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 755
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 771
          },
          "name": "negate",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 787
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 800
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 714
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitMessagePattern"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesCommitMessagePatternOutputReference"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitterEmailPattern": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitterEmailPattern",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 811
      },
      "name": "RepositoryRulesetRulesCommitterEmailPattern",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#operator RepositoryRuleset#operator}",
            "stability": "stable",
            "summary": "The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 829
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#pattern RepositoryRuleset#pattern}",
            "stability": "stable",
            "summary": "The pattern to match with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 835
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#name RepositoryRuleset#name}",
            "stability": "stable",
            "summary": "How this rule will appear to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 817
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#negate RepositoryRuleset#negate}",
            "stability": "stable",
            "summary": "If true, the rule will fail if the pattern matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 823
          },
          "name": "negate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesCommitterEmailPattern"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitterEmailPatternOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitterEmailPatternOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 858
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 851
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 909
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 925
          },
          "name": "resetNegate"
        }
      ],
      "name": "RepositoryRulesetRulesCommitterEmailPatternOutputReference",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 913
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 929
          },
          "name": "negateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 942
          },
          "name": "operatorInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 955
          },
          "name": "patternInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 903
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 919
          },
          "name": "negate",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 935
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 948
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 862
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitterEmailPattern"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesCommitterEmailPatternOutputReference"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 1699
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 1692
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1925
          },
          "name": "putBranchNamePattern",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesBranchNamePattern"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1941
          },
          "name": "putCommitAuthorEmailPattern",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitAuthorEmailPattern"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1957
          },
          "name": "putCommitMessagePattern",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitMessagePattern"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1973
          },
          "name": "putCommitterEmailPattern",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitterEmailPattern"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1989
          },
          "name": "putPullRequest",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesPullRequest"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2005
          },
          "name": "putRequiredDeployments",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredDeployments"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2021
          },
          "name": "putRequiredStatusChecks",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecks"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2037
          },
          "name": "putTagNamePattern",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesTagNamePattern"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1928
          },
          "name": "resetBranchNamePattern"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1944
          },
          "name": "resetCommitAuthorEmailPattern"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1960
          },
          "name": "resetCommitMessagePattern"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1976
          },
          "name": "resetCommitterEmailPattern"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1816
          },
          "name": "resetCreation"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1832
          },
          "name": "resetDeletion"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1848
          },
          "name": "resetNonFastForward"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1992
          },
          "name": "resetPullRequest"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2008
          },
          "name": "resetRequiredDeployments"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1864
          },
          "name": "resetRequiredLinearHistory"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1880
          },
          "name": "resetRequiredSignatures"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2024
          },
          "name": "resetRequiredStatusChecks"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2040
          },
          "name": "resetTagNamePattern"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1896
          },
          "name": "resetUpdate"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1912
          },
          "name": "resetUpdateAllowsFetchAndMerge"
        }
      ],
      "name": "RepositoryRulesetRulesOutputReference",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1922
          },
          "name": "branchNamePattern",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesBranchNamePatternOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1938
          },
          "name": "commitAuthorEmailPattern",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitAuthorEmailPatternOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1954
          },
          "name": "commitMessagePattern",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitMessagePatternOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1970
          },
          "name": "committerEmailPattern",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitterEmailPatternOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1986
          },
          "name": "pullRequest",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesPullRequestOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2002
          },
          "name": "requiredDeployments",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredDeploymentsOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2018
          },
          "name": "requiredStatusChecks",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2034
          },
          "name": "tagNamePattern",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesTagNamePatternOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1932
          },
          "name": "branchNamePatternInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesBranchNamePattern"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1948
          },
          "name": "commitAuthorEmailPatternInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitAuthorEmailPattern"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1964
          },
          "name": "commitMessagePatternInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitMessagePattern"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1980
          },
          "name": "committerEmailPatternInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesCommitterEmailPattern"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1820
          },
          "name": "creationInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1836
          },
          "name": "deletionInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1852
          },
          "name": "nonFastForwardInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1996
          },
          "name": "pullRequestInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesPullRequest"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2012
          },
          "name": "requiredDeploymentsInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredDeployments"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1868
          },
          "name": "requiredLinearHistoryInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1884
          },
          "name": "requiredSignaturesInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2028
          },
          "name": "requiredStatusChecksInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecks"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 2044
          },
          "name": "tagNamePatternInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesTagNamePattern"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1916
          },
          "name": "updateAllowsFetchAndMergeInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1900
          },
          "name": "updateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1810
          },
          "name": "creation",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1826
          },
          "name": "deletion",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1842
          },
          "name": "nonFastForward",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1858
          },
          "name": "requiredLinearHistory",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1874
          },
          "name": "requiredSignatures",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1890
          },
          "name": "update",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1906
          },
          "name": "updateAllowsFetchAndMerge",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1703
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRules"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesOutputReference"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesPullRequest": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesPullRequest",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 959
      },
      "name": "RepositoryRulesetRulesPullRequest",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#dismiss_stale_reviews_on_push RepositoryRuleset#dismiss_stale_reviews_on_push}",
            "stability": "stable",
            "summary": "New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 965
          },
          "name": "dismissStaleReviewsOnPush",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#require_code_owner_review RepositoryRuleset#require_code_owner_review}",
            "stability": "stable",
            "summary": "Require an approving review in pull requests that modify files that have a designated code owner. Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 971
          },
          "name": "requireCodeOwnerReview",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#required_approving_review_count RepositoryRuleset#required_approving_review_count}",
            "stability": "stable",
            "summary": "The number of approving reviews that are required before a pull request can be merged. Defaults to `0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 983
          },
          "name": "requiredApprovingReviewCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#required_review_thread_resolution RepositoryRuleset#required_review_thread_resolution}",
            "stability": "stable",
            "summary": "All conversations on code must be resolved before a pull request can be merged. Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 989
          },
          "name": "requiredReviewThreadResolution",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Defaults to `false`.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#require_last_push_approval RepositoryRuleset#require_last_push_approval}",
            "stability": "stable",
            "summary": "Whether the most recent reviewable push must be approved by someone other than the person who pushed it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 977
          },
          "name": "requireLastPushApproval",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesPullRequest"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesPullRequestOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesPullRequestOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 1013
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 1006
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1070
          },
          "name": "resetDismissStaleReviewsOnPush"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1086
          },
          "name": "resetRequireCodeOwnerReview"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1118
          },
          "name": "resetRequiredApprovingReviewCount"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1134
          },
          "name": "resetRequiredReviewThreadResolution"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1102
          },
          "name": "resetRequireLastPushApproval"
        }
      ],
      "name": "RepositoryRulesetRulesPullRequestOutputReference",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1074
          },
          "name": "dismissStaleReviewsOnPushInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1090
          },
          "name": "requireCodeOwnerReviewInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1122
          },
          "name": "requiredApprovingReviewCountInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1138
          },
          "name": "requiredReviewThreadResolutionInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1106
          },
          "name": "requireLastPushApprovalInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1064
          },
          "name": "dismissStaleReviewsOnPush",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1080
          },
          "name": "requireCodeOwnerReview",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1112
          },
          "name": "requiredApprovingReviewCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1128
          },
          "name": "requiredReviewThreadResolution",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1096
          },
          "name": "requireLastPushApproval",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1017
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesPullRequest"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesPullRequestOutputReference"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredDeployments": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredDeployments",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 1142
      },
      "name": "RepositoryRulesetRulesRequiredDeployments",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#required_deployment_environments RepositoryRuleset#required_deployment_environments}",
            "stability": "stable",
            "summary": "The environments that must be successfully deployed to before branches can be merged."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1148
          },
          "name": "requiredDeploymentEnvironments",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesRequiredDeployments"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredDeploymentsOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredDeploymentsOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 1168
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 1161
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1201
          },
          "name": "resetRequiredDeploymentEnvironments"
        }
      ],
      "name": "RepositoryRulesetRulesRequiredDeploymentsOutputReference",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1205
          },
          "name": "requiredDeploymentEnvironmentsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1195
          },
          "name": "requiredDeploymentEnvironments",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1172
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredDeployments"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesRequiredDeploymentsOutputReference"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecks": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecks",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 1334
      },
      "name": "RepositoryRulesetRulesRequiredStatusChecks",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#required_check RepositoryRuleset#required_check}",
            "stability": "stable",
            "summary": "required_check block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1346
          },
          "name": "requiredCheck",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksRequiredCheck"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This setting will not take effect unless at least one status check is enabled. Defaults to `false`.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#strict_required_status_checks_policy RepositoryRuleset#strict_required_status_checks_policy}",
            "stability": "stable",
            "summary": "Whether pull requests targeting a matching branch must be tested with the latest code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1340
          },
          "name": "strictRequiredStatusChecksPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesRequiredStatusChecks"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 1367
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 1360
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1419
          },
          "name": "putRequiredCheck",
          "parameters": [
            {
              "name": "value",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "cdktf.IResolvable"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksRequiredCheck"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1406
          },
          "name": "resetStrictRequiredStatusChecksPolicy"
        }
      ],
      "name": "RepositoryRulesetRulesRequiredStatusChecksOutputReference",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1416
          },
          "name": "requiredCheck",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksRequiredCheckList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1423
          },
          "name": "requiredCheckInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksRequiredCheck"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1410
          },
          "name": "strictRequiredStatusChecksPolicyInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1400
          },
          "name": "strictRequiredStatusChecksPolicy",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1371
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecks"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesRequiredStatusChecksOutputReference"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksRequiredCheck": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksRequiredCheck",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 1209
      },
      "name": "RepositoryRulesetRulesRequiredStatusChecksRequiredCheck",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#context RepositoryRuleset#context}",
            "stability": "stable",
            "summary": "The status check context name that must be present on the commit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1215
          },
          "name": "context",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#integration_id RepositoryRuleset#integration_id}",
            "stability": "stable",
            "summary": "The optional integration ID that this status check must originate from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1221
          },
          "name": "integrationId",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesRequiredStatusChecksRequiredCheck"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksRequiredCheckList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksRequiredCheckList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 1323
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 1315
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1330
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksRequiredCheckOutputReference"
            }
          }
        }
      ],
      "name": "RepositoryRulesetRulesRequiredStatusChecksRequiredCheckList",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1323
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1323
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1323
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1316
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksRequiredCheck"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesRequiredStatusChecksRequiredCheckList"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksRequiredCheckOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksRequiredCheckOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 1245
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 1235
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1306
          },
          "name": "resetIntegrationId"
        }
      ],
      "name": "RepositoryRulesetRulesRequiredStatusChecksRequiredCheckOutputReference",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1294
          },
          "name": "contextInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1310
          },
          "name": "integrationIdInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1287
          },
          "name": "context",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1300
          },
          "name": "integrationId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1249
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesRequiredStatusChecksRequiredCheck"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesRequiredStatusChecksRequiredCheckOutputReference"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesTagNamePattern": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesTagNamePattern",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 1427
      },
      "name": "RepositoryRulesetRulesTagNamePattern",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#operator RepositoryRuleset#operator}",
            "stability": "stable",
            "summary": "The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1445
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#pattern RepositoryRuleset#pattern}",
            "stability": "stable",
            "summary": "The pattern to match with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1451
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#name RepositoryRuleset#name}",
            "stability": "stable",
            "summary": "How this rule will appear to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1433
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_ruleset#negate RepositoryRuleset#negate}",
            "stability": "stable",
            "summary": "If true, the rule will fail if the pattern matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1439
          },
          "name": "negate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesTagNamePattern"
    },
    "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesTagNamePatternOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesTagNamePatternOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-ruleset/index.ts",
          "line": 1474
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-ruleset/index.ts",
        "line": 1467
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1525
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1541
          },
          "name": "resetNegate"
        }
      ],
      "name": "RepositoryRulesetRulesTagNamePatternOutputReference",
      "namespace": "repositoryRuleset",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1529
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1545
          },
          "name": "negateInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1558
          },
          "name": "operatorInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1571
          },
          "name": "patternInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1519
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1535
          },
          "name": "negate",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1551
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1564
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-ruleset/index.ts",
            "line": 1478
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryRuleset.RepositoryRulesetRulesTagNamePattern"
          }
        }
      ],
      "symbolId": "src/repository-ruleset/index:RepositoryRulesetRulesTagNamePatternOutputReference"
    },
    "@cdktf/provider-github.repositoryTagProtection.RepositoryTagProtection": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_tag_protection github_repository_tag_protection}."
      },
      "fqn": "@cdktf/provider-github.repositoryTagProtection.RepositoryTagProtection",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_tag_protection github_repository_tag_protection} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-tag-protection/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryTagProtection.RepositoryTagProtectionConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-tag-protection/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryTagProtection resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryTagProtection to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_tag_protection#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryTagProtection that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryTagProtection to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 104
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 147
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryTagProtection",
      "namespace": "repositoryTagProtection",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 139
          },
          "name": "tagProtectionId",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 108
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 121
          },
          "name": "patternInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 134
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 98
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 114
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 127
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-tag-protection/index:RepositoryTagProtection"
    },
    "@cdktf/provider-github.repositoryTagProtection.RepositoryTagProtectionConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryTagProtection.RepositoryTagProtectionConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-tag-protection/index.ts",
        "line": 14
      },
      "name": "RepositoryTagProtectionConfig",
      "namespace": "repositoryTagProtection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_tag_protection#pattern RepositoryTagProtection#pattern}",
            "stability": "stable",
            "summary": "The pattern of the tag to protect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 27
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_tag_protection#repository RepositoryTagProtection#repository}",
            "stability": "stable",
            "summary": "Name of the repository to add the tag protection to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_tag_protection#id RepositoryTagProtection#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-tag-protection/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-tag-protection/index:RepositoryTagProtectionConfig"
    },
    "@cdktf/provider-github.repositoryTopics.RepositoryTopics": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_topics github_repository_topics}."
      },
      "fqn": "@cdktf/provider-github.repositoryTopics.RepositoryTopics",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_topics github_repository_topics} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-topics/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryTopics.RepositoryTopicsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-topics/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryTopics resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-topics/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryTopics to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_topics#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryTopics that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryTopics to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-topics/index.ts",
            "line": 104
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-topics/index.ts",
            "line": 142
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryTopics",
      "namespace": "repositoryTopics",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-topics/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-topics/index.ts",
            "line": 108
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-topics/index.ts",
            "line": 121
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-topics/index.ts",
            "line": 134
          },
          "name": "topicsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-topics/index.ts",
            "line": 98
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-topics/index.ts",
            "line": 114
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-topics/index.ts",
            "line": 127
          },
          "name": "topics",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/repository-topics/index:RepositoryTopics"
    },
    "@cdktf/provider-github.repositoryTopics.RepositoryTopicsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryTopics.RepositoryTopicsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-topics/index.ts",
        "line": 14
      },
      "name": "RepositoryTopicsConfig",
      "namespace": "repositoryTopics",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_topics#repository RepositoryTopics#repository}",
            "stability": "stable",
            "summary": "The name of the repository. The name is not case sensitive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-topics/index.ts",
            "line": 27
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Pass one or more topics to replace the set of existing topics. Send an empty array ([]) to clear all topics from the repository. Note: Topic names cannot contain uppercase letters.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_topics#topics RepositoryTopics#topics}",
            "stability": "stable",
            "summary": "An array of topics to add to the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-topics/index.ts",
            "line": 33
          },
          "name": "topics",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_topics#id RepositoryTopics#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-topics/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-topics/index:RepositoryTopicsConfig"
    },
    "@cdktf/provider-github.repositoryWebhook.RepositoryWebhook": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook github_repository_webhook}."
      },
      "fqn": "@cdktf/provider-github.repositoryWebhook.RepositoryWebhook",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook github_repository_webhook} Resource."
        },
        "locationInModule": {
          "filename": "src/repository-webhook/index.ts",
          "line": 238
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.repositoryWebhook.RepositoryWebhookConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-webhook/index.ts",
        "line": 206
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a RepositoryWebhook resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 223
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the RepositoryWebhook to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing RepositoryWebhook that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the RepositoryWebhook to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 355
          },
          "name": "putConfiguration",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.repositoryWebhook.RepositoryWebhookConfiguration"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 274
          },
          "name": "resetActive"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 358
          },
          "name": "resetConfiguration"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 308
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 324
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 370
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RepositoryWebhook",
      "namespace": "repositoryWebhook",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 211
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 352
          },
          "name": "configuration",
          "type": {
            "fqn": "@cdktf/provider-github.repositoryWebhook.RepositoryWebhookConfigurationOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 283
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 346
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 278
          },
          "name": "activeInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 362
          },
          "name": "configurationInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryWebhook.RepositoryWebhookConfiguration"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 296
          },
          "name": "eventsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 312
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 328
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 341
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 268
          },
          "name": "active",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 289
          },
          "name": "events",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 302
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 318
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 334
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-webhook/index:RepositoryWebhook"
    },
    "@cdktf/provider-github.repositoryWebhook.RepositoryWebhookConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryWebhook.RepositoryWebhookConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-webhook/index.ts",
        "line": 14
      },
      "name": "RepositoryWebhookConfig",
      "namespace": "repositoryWebhook",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook#events RepositoryWebhook#events}",
            "stability": "stable",
            "summary": "A list of events which should trigger the webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 26
          },
          "name": "events",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook#repository RepositoryWebhook#repository}",
            "stability": "stable",
            "summary": "The repository of the webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 43
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook#active RepositoryWebhook#active}",
            "stability": "stable",
            "summary": "Indicate if the webhook should receive events. Defaults to 'true'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 20
          },
          "name": "active",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook#configuration RepositoryWebhook#configuration}",
            "stability": "stable",
            "summary": "configuration block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 49
          },
          "name": "configuration",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryWebhook.RepositoryWebhookConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook#id RepositoryWebhook#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook#name RepositoryWebhook#name}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 37
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-webhook/index:RepositoryWebhookConfig"
    },
    "@cdktf/provider-github.repositoryWebhook.RepositoryWebhookConfiguration": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryWebhook.RepositoryWebhookConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/repository-webhook/index.ts",
        "line": 51
      },
      "name": "RepositoryWebhookConfiguration",
      "namespace": "repositoryWebhook",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook#url RepositoryWebhook#url}",
            "stability": "stable",
            "summary": "The URL of the webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 75
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook#content_type RepositoryWebhook#content_type}",
            "stability": "stable",
            "summary": "The content type for the payload. Valid values are either 'form' or 'json'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 57
          },
          "name": "contentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook#insecure_ssl RepositoryWebhook#insecure_ssl}",
            "stability": "stable",
            "summary": "Insecure SSL boolean toggle. Defaults to 'false'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 63
          },
          "name": "insecureSsl",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/repository_webhook#secret RepositoryWebhook#secret}",
            "stability": "stable",
            "summary": "The shared secret for the webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 69
          },
          "name": "secret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/repository-webhook/index:RepositoryWebhookConfiguration"
    },
    "@cdktf/provider-github.repositoryWebhook.RepositoryWebhookConfigurationOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.repositoryWebhook.RepositoryWebhookConfigurationOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/repository-webhook/index.ts",
          "line": 98
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/repository-webhook/index.ts",
        "line": 91
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 149
          },
          "name": "resetContentType"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 165
          },
          "name": "resetInsecureSsl"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 181
          },
          "name": "resetSecret"
        }
      ],
      "name": "RepositoryWebhookConfigurationOutputReference",
      "namespace": "repositoryWebhook",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 153
          },
          "name": "contentTypeInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 169
          },
          "name": "insecureSslInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 185
          },
          "name": "secretInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 198
          },
          "name": "urlInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 143
          },
          "name": "contentType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 159
          },
          "name": "insecureSsl",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 175
          },
          "name": "secret",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 191
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/repository-webhook/index.ts",
            "line": 102
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.repositoryWebhook.RepositoryWebhookConfiguration"
          }
        }
      ],
      "symbolId": "src/repository-webhook/index:RepositoryWebhookConfigurationOutputReference"
    },
    "@cdktf/provider-github.team.Team": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team github_team}."
      },
      "fqn": "@cdktf/provider-github.team.Team",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team github_team} Resource."
        },
        "locationInModule": {
          "filename": "src/team/index.ts",
          "line": 107
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.team.TeamConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/team/index.ts",
        "line": 75
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a Team resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 92
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the Team to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing Team that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the Team to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 146
          },
          "name": "resetCreateDefaultMaintainer"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 162
          },
          "name": "resetDescription"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 183
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 199
          },
          "name": "resetLdapDn"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 238
          },
          "name": "resetParentTeamId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 254
          },
          "name": "resetParentTeamReadId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 270
          },
          "name": "resetParentTeamReadSlug"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 286
          },
          "name": "resetPrivacy"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 303
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Team",
      "namespace": "team",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 80
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 171
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 208
          },
          "name": "membersCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 226
          },
          "name": "nodeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 295
          },
          "name": "slug",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 150
          },
          "name": "createDefaultMaintainerInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 166
          },
          "name": "descriptionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 187
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 203
          },
          "name": "ldapDnInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 221
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 242
          },
          "name": "parentTeamIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 258
          },
          "name": "parentTeamReadIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 274
          },
          "name": "parentTeamReadSlugInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 290
          },
          "name": "privacyInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 140
          },
          "name": "createDefaultMaintainer",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 156
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 177
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 193
          },
          "name": "ldapDn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 214
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 232
          },
          "name": "parentTeamId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 248
          },
          "name": "parentTeamReadId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 264
          },
          "name": "parentTeamReadSlug",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 280
          },
          "name": "privacy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/team/index:Team"
    },
    "@cdktf/provider-github.team.TeamConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.team.TeamConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/team/index.ts",
        "line": 14
      },
      "name": "TeamConfig",
      "namespace": "team",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team#name Team#name}",
            "stability": "stable",
            "summary": "The name of the team."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 45
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team#create_default_maintainer Team#create_default_maintainer}",
            "stability": "stable",
            "summary": "Adds a default maintainer to the team. Adds the creating user to the team when 'true'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 20
          },
          "name": "createDefaultMaintainer",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team#description Team#description}",
            "stability": "stable",
            "summary": "A description of the team."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 26
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team#id Team#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 33
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team#ldap_dn Team#ldap_dn}",
            "stability": "stable",
            "summary": "The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise Server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 39
          },
          "name": "ldapDn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team#parent_team_id Team#parent_team_id}",
            "stability": "stable",
            "summary": "The ID or slug of the parent team, if this is a nested team."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 51
          },
          "name": "parentTeamId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team#parent_team_read_id Team#parent_team_read_id}",
            "stability": "stable",
            "summary": "The id of the parent team read in Github."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 57
          },
          "name": "parentTeamReadId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team#parent_team_read_slug Team#parent_team_read_slug}",
            "stability": "stable",
            "summary": "The id of the parent team read in Github."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 63
          },
          "name": "parentTeamReadSlug",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team#privacy Team#privacy}",
            "stability": "stable",
            "summary": "The level of privacy for the team. Must be one of 'secret' or 'closed'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team/index.ts",
            "line": 69
          },
          "name": "privacy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/team/index:TeamConfig"
    },
    "@cdktf/provider-github.teamMembers.TeamMembers": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_members github_team_members}."
      },
      "fqn": "@cdktf/provider-github.teamMembers.TeamMembers",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_members github_team_members} Resource."
        },
        "locationInModule": {
          "filename": "src/team-members/index.ts",
          "line": 196
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.teamMembers.TeamMembersConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/team-members/index.ts",
        "line": 164
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a TeamMembers resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 181
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the TeamMembers to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_members#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing TeamMembers that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the TeamMembers to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 255
          },
          "name": "putMembers",
          "parameters": [
            {
              "name": "value",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "cdktf.IResolvable"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "fqn": "@cdktf/provider-github.teamMembers.TeamMembersMembers"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 229
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 267
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "TeamMembers",
      "namespace": "teamMembers",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 169
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 252
          },
          "name": "members",
          "type": {
            "fqn": "@cdktf/provider-github.teamMembers.TeamMembersMembersList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 233
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 259
          },
          "name": "membersInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.teamMembers.TeamMembersMembers"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 246
          },
          "name": "teamIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 223
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 239
          },
          "name": "teamId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/team-members/index:TeamMembers"
    },
    "@cdktf/provider-github.teamMembers.TeamMembersConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.teamMembers.TeamMembersConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/team-members/index.ts",
        "line": 14
      },
      "name": "TeamMembersConfig",
      "namespace": "teamMembers",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_members#members TeamMembers#members}",
            "stability": "stable",
            "summary": "members block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 33
          },
          "name": "members",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.teamMembers.TeamMembersMembers"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_members#team_id TeamMembers#team_id}",
            "stability": "stable",
            "summary": "The GitHub team id or slug."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 27
          },
          "name": "teamId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_members#id TeamMembers#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/team-members/index:TeamMembersConfig"
    },
    "@cdktf/provider-github.teamMembers.TeamMembersMembers": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.teamMembers.TeamMembersMembers",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/team-members/index.ts",
        "line": 35
      },
      "name": "TeamMembersMembers",
      "namespace": "teamMembers",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_members#username TeamMembers#username}",
            "stability": "stable",
            "summary": "The user to add to the team."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 47
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_members#role TeamMembers#role}",
            "stability": "stable",
            "summary": "The role of the user within the team. Must be one of 'member' or 'maintainer'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 41
          },
          "name": "role",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/team-members/index:TeamMembersMembers"
    },
    "@cdktf/provider-github.teamMembers.TeamMembersMembersList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.teamMembers.TeamMembersMembersList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/team-members/index.ts",
          "line": 149
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/team-members/index.ts",
        "line": 141
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 156
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.teamMembers.TeamMembersMembersOutputReference"
            }
          }
        }
      ],
      "name": "TeamMembersMembersList",
      "namespace": "teamMembers",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 149
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 149
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 149
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 142
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.teamMembers.TeamMembersMembers"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/team-members/index:TeamMembersMembersList"
    },
    "@cdktf/provider-github.teamMembers.TeamMembersMembersOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.teamMembers.TeamMembersMembersOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/team-members/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/team-members/index.ts",
        "line": 61
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 119
          },
          "name": "resetRole"
        }
      ],
      "name": "TeamMembersMembersOutputReference",
      "namespace": "teamMembers",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 123
          },
          "name": "roleInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 136
          },
          "name": "usernameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 113
          },
          "name": "role",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 129
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-members/index.ts",
            "line": 75
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "fqn": "@cdktf/provider-github.teamMembers.TeamMembersMembers"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/team-members/index:TeamMembersMembersOutputReference"
    },
    "@cdktf/provider-github.teamMembership.TeamMembership": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_membership github_team_membership}."
      },
      "fqn": "@cdktf/provider-github.teamMembership.TeamMembership",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_membership github_team_membership} Resource."
        },
        "locationInModule": {
          "filename": "src/team-membership/index.ts",
          "line": 77
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.teamMembership.TeamMembershipConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/team-membership/index.ts",
        "line": 45
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a TeamMembership resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 62
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the TeamMembership to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_membership#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing TeamMembership that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the TeamMembership to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 116
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 132
          },
          "name": "resetRole"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 170
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "TeamMembership",
      "namespace": "teamMembership",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 50
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 104
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 120
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 136
          },
          "name": "roleInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 149
          },
          "name": "teamIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 162
          },
          "name": "usernameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 110
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 126
          },
          "name": "role",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 142
          },
          "name": "teamId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 155
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/team-membership/index:TeamMembership"
    },
    "@cdktf/provider-github.teamMembership.TeamMembershipConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.teamMembership.TeamMembershipConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/team-membership/index.ts",
        "line": 14
      },
      "name": "TeamMembershipConfig",
      "namespace": "teamMembership",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_membership#team_id TeamMembership#team_id}",
            "stability": "stable",
            "summary": "The GitHub team id or the GitHub team slug."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 33
          },
          "name": "teamId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_membership#username TeamMembership#username}",
            "stability": "stable",
            "summary": "The user to add to the team."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 39
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_membership#id TeamMembership#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_membership#role TeamMembership#role}",
            "stability": "stable",
            "summary": "The role of the user within the team. Must be one of 'member' or 'maintainer'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-membership/index.ts",
            "line": 27
          },
          "name": "role",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/team-membership/index:TeamMembershipConfig"
    },
    "@cdktf/provider-github.teamRepository.TeamRepository": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_repository github_team_repository}."
      },
      "fqn": "@cdktf/provider-github.teamRepository.TeamRepository",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_repository github_team_repository} Resource."
        },
        "locationInModule": {
          "filename": "src/team-repository/index.ts",
          "line": 77
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.teamRepository.TeamRepositoryConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/team-repository/index.ts",
        "line": 45
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a TeamRepository resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 62
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the TeamRepository to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_repository#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing TeamRepository that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the TeamRepository to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 116
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 132
          },
          "name": "resetPermission"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 170
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "TeamRepository",
      "namespace": "teamRepository",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 50
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 104
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 120
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 136
          },
          "name": "permissionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 149
          },
          "name": "repositoryInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 162
          },
          "name": "teamIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 110
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 126
          },
          "name": "permission",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 142
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 155
          },
          "name": "teamId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/team-repository/index:TeamRepository"
    },
    "@cdktf/provider-github.teamRepository.TeamRepositoryConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.teamRepository.TeamRepositoryConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/team-repository/index.ts",
        "line": 14
      },
      "name": "TeamRepositoryConfig",
      "namespace": "teamRepository",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_repository#repository TeamRepository#repository}",
            "stability": "stable",
            "summary": "The repository to add to the team."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_repository#team_id TeamRepository#team_id}",
            "stability": "stable",
            "summary": "ID or slug of team."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 39
          },
          "name": "teamId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_repository#id TeamRepository#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be one of 'pull', 'triage', 'push', 'maintain', 'admin' or the name of an existing custom repository role within the organisation.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_repository#permission TeamRepository#permission}",
            "stability": "stable",
            "summary": "The permissions of team members regarding the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-repository/index.ts",
            "line": 27
          },
          "name": "permission",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/team-repository/index:TeamRepositoryConfig"
    },
    "@cdktf/provider-github.teamSettings.TeamSettings": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_settings github_team_settings}."
      },
      "fqn": "@cdktf/provider-github.teamSettings.TeamSettings",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_settings github_team_settings} Resource."
        },
        "locationInModule": {
          "filename": "src/team-settings/index.ts",
          "line": 196
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.teamSettings.TeamSettingsConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/team-settings/index.ts",
        "line": 164
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a TeamSettings resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 181
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the TeamSettings to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_settings#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing TeamSettings that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the TeamSettings to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 265
          },
          "name": "putReviewRequestDelegation",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@cdktf/provider-github.teamSettings.TeamSettingsReviewRequestDelegation"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 229
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 268
          },
          "name": "resetReviewRequestDelegation"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 280
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "TeamSettings",
      "namespace": "teamSettings",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 169
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 262
          },
          "name": "reviewRequestDelegation",
          "type": {
            "fqn": "@cdktf/provider-github.teamSettings.TeamSettingsReviewRequestDelegationOutputReference"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 251
          },
          "name": "teamSlug",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 256
          },
          "name": "teamUid",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 233
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 272
          },
          "name": "reviewRequestDelegationInput",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.teamSettings.TeamSettingsReviewRequestDelegation"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 246
          },
          "name": "teamIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 223
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 239
          },
          "name": "teamId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/team-settings/index:TeamSettings"
    },
    "@cdktf/provider-github.teamSettings.TeamSettingsConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.teamSettings.TeamSettingsConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/team-settings/index.ts",
        "line": 14
      },
      "name": "TeamSettingsConfig",
      "namespace": "teamSettings",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_settings#team_id TeamSettings#team_id}",
            "stability": "stable",
            "summary": "The GitHub team id or the GitHub team slug."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 27
          },
          "name": "teamId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_settings#id TeamSettings#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_settings#review_request_delegation TeamSettings#review_request_delegation}",
            "stability": "stable",
            "summary": "review_request_delegation block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 33
          },
          "name": "reviewRequestDelegation",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.teamSettings.TeamSettingsReviewRequestDelegation"
          }
        }
      ],
      "symbolId": "src/team-settings/index:TeamSettingsConfig"
    },
    "@cdktf/provider-github.teamSettings.TeamSettingsReviewRequestDelegation": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.teamSettings.TeamSettingsReviewRequestDelegation",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/team-settings/index.ts",
        "line": 35
      },
      "name": "TeamSettingsReviewRequestDelegation",
      "namespace": "teamSettings",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_settings#algorithm TeamSettings#algorithm}",
            "stability": "stable",
            "summary": "The algorithm to use when assigning pull requests to team members. Supported values are 'ROUND_ROBIN' and 'LOAD_BALANCE'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 41
          },
          "name": "algorithm",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_settings#member_count TeamSettings#member_count}",
            "stability": "stable",
            "summary": "The number of team members to assign to a pull request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 47
          },
          "name": "memberCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_settings#notify TeamSettings#notify}",
            "stability": "stable",
            "summary": "whether to notify the entire team when at least one member is also assigned to the pull request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 53
          },
          "name": "notify",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/team-settings/index:TeamSettingsReviewRequestDelegation"
    },
    "@cdktf/provider-github.teamSettings.TeamSettingsReviewRequestDelegationOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.teamSettings.TeamSettingsReviewRequestDelegationOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/team-settings/index.ts",
          "line": 75
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/team-settings/index.ts",
        "line": 68
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 120
          },
          "name": "resetAlgorithm"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 136
          },
          "name": "resetMemberCount"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 152
          },
          "name": "resetNotify"
        }
      ],
      "name": "TeamSettingsReviewRequestDelegationOutputReference",
      "namespace": "teamSettings",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 124
          },
          "name": "algorithmInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 140
          },
          "name": "memberCountInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 156
          },
          "name": "notifyInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 114
          },
          "name": "algorithm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 130
          },
          "name": "memberCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 146
          },
          "name": "notify",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-settings/index.ts",
            "line": 79
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "fqn": "@cdktf/provider-github.teamSettings.TeamSettingsReviewRequestDelegation"
          }
        }
      ],
      "symbolId": "src/team-settings/index:TeamSettingsReviewRequestDelegationOutputReference"
    },
    "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMapping": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_sync_group_mapping github_team_sync_group_mapping}."
      },
      "fqn": "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMapping",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_sync_group_mapping github_team_sync_group_mapping} Resource."
        },
        "locationInModule": {
          "filename": "src/team-sync-group-mapping/index.ts",
          "line": 219
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/team-sync-group-mapping/index.ts",
        "line": 187
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a TeamSyncGroupMapping resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 204
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the TeamSyncGroupMapping to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_sync_group_mapping#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing TeamSyncGroupMapping that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the TeamSyncGroupMapping to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 283
          },
          "name": "putGroup",
          "parameters": [
            {
              "name": "value",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "cdktf.IResolvable"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "fqn": "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingGroup"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 286
          },
          "name": "resetGroup"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 257
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 298
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "TeamSyncGroupMapping",
      "namespace": "teamSyncGroupMapping",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 192
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 245
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 280
          },
          "name": "group",
          "type": {
            "fqn": "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingGroupList"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 290
          },
          "name": "groupInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingGroup"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 261
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 274
          },
          "name": "teamSlugInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 251
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 267
          },
          "name": "teamSlug",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/team-sync-group-mapping/index:TeamSyncGroupMapping"
    },
    "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/team-sync-group-mapping/index.ts",
        "line": 14
      },
      "name": "TeamSyncGroupMappingConfig",
      "namespace": "teamSyncGroupMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_sync_group_mapping#team_slug TeamSyncGroupMapping#team_slug}",
            "stability": "stable",
            "summary": "Slug of the team."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 27
          },
          "name": "teamSlug",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_sync_group_mapping#group TeamSyncGroupMapping#group}",
            "stability": "stable",
            "summary": "group block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 33
          },
          "name": "group",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingGroup"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_sync_group_mapping#id TeamSyncGroupMapping#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/team-sync-group-mapping/index:TeamSyncGroupMappingConfig"
    },
    "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingGroup": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingGroup",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/team-sync-group-mapping/index.ts",
        "line": 35
      },
      "name": "TeamSyncGroupMappingGroup",
      "namespace": "teamSyncGroupMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_sync_group_mapping#group_description TeamSyncGroupMapping#group_description}",
            "stability": "stable",
            "summary": "The description of the IdP group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 41
          },
          "name": "groupDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_sync_group_mapping#group_id TeamSyncGroupMapping#group_id}",
            "stability": "stable",
            "summary": "The ID of the IdP group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 47
          },
          "name": "groupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/team_sync_group_mapping#group_name TeamSyncGroupMapping#group_name}",
            "stability": "stable",
            "summary": "The name of the IdP group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 53
          },
          "name": "groupName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/team-sync-group-mapping/index:TeamSyncGroupMappingGroup"
    },
    "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingGroupList": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingGroupList",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/team-sync-group-mapping/index.ts",
          "line": 172
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "wrapsSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/team-sync-group-mapping/index.ts",
        "line": 164
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 179
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "the index of the item to return."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingGroupOutputReference"
            }
          }
        }
      ],
      "name": "TeamSyncGroupMappingGroupList",
      "namespace": "teamSyncGroupMapping",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute on the parent resource this class is referencing."
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 172
          },
          "name": "terraformAttribute",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parent resource."
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 172
          },
          "name": "terraformResource",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "fqn": "cdktf.IInterpolatingParent"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 172
          },
          "name": "wrapsSet",
          "overrides": "cdktf.ComplexList",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 165
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingGroup"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/team-sync-group-mapping/index:TeamSyncGroupMappingGroupList"
    },
    "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingGroupOutputReference": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.ComplexObject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingGroupOutputReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/team-sync-group-mapping/index.ts",
          "line": 78
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent resource."
            },
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.IInterpolatingParent"
            }
          },
          {
            "docs": {
              "summary": "The attribute on the parent resource this class is referencing."
            },
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the index of this item in the list."
            },
            "name": "complexObjectIndex",
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "whether the list is wrapping a set (will add tolist() to be able to access an item via an index)."
            },
            "name": "complexObjectIsFromSet",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/team-sync-group-mapping/index.ts",
        "line": 68
      },
      "name": "TeamSyncGroupMappingGroupOutputReference",
      "namespace": "teamSyncGroupMapping",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 133
          },
          "name": "groupDescriptionInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 146
          },
          "name": "groupIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 159
          },
          "name": "groupNameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 126
          },
          "name": "groupDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 139
          },
          "name": "groupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 152
          },
          "name": "groupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/team-sync-group-mapping/index.ts",
            "line": 82
          },
          "name": "internalValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "cdktf.IResolvable"
                },
                {
                  "fqn": "@cdktf/provider-github.teamSyncGroupMapping.TeamSyncGroupMappingGroup"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/team-sync-group-mapping/index:TeamSyncGroupMappingGroupOutputReference"
    },
    "@cdktf/provider-github.userGpgKey.UserGpgKey": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_gpg_key github_user_gpg_key}."
      },
      "fqn": "@cdktf/provider-github.userGpgKey.UserGpgKey",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_gpg_key github_user_gpg_key} Resource."
        },
        "locationInModule": {
          "filename": "src/user-gpg-key/index.ts",
          "line": 65
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.userGpgKey.UserGpgKeyConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/user-gpg-key/index.ts",
        "line": 33
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a UserGpgKey resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/user-gpg-key/index.ts",
            "line": 50
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the UserGpgKey to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_gpg_key#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing UserGpgKey that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the UserGpgKey to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-gpg-key/index.ts",
            "line": 115
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-gpg-key/index.ts",
            "line": 132
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "UserGpgKey",
      "namespace": "userGpgKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-gpg-key/index.ts",
            "line": 38
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-gpg-key/index.ts",
            "line": 103
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-gpg-key/index.ts",
            "line": 124
          },
          "name": "keyId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-gpg-key/index.ts",
            "line": 98
          },
          "name": "armoredPublicKeyInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-gpg-key/index.ts",
            "line": 119
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-gpg-key/index.ts",
            "line": 91
          },
          "name": "armoredPublicKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-gpg-key/index.ts",
            "line": 109
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/user-gpg-key/index:UserGpgKey"
    },
    "@cdktf/provider-github.userGpgKey.UserGpgKeyConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.userGpgKey.UserGpgKeyConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/user-gpg-key/index.ts",
        "line": 14
      },
      "name": "UserGpgKeyConfig",
      "namespace": "userGpgKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_gpg_key#armored_public_key UserGpgKey#armored_public_key}",
            "stability": "stable",
            "summary": "Your public GPG key, generated in ASCII-armored format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-gpg-key/index.ts",
            "line": 20
          },
          "name": "armoredPublicKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_gpg_key#id UserGpgKey#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-gpg-key/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/user-gpg-key/index:UserGpgKeyConfig"
    },
    "@cdktf/provider-github.userInvitationAccepter.UserInvitationAccepter": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_invitation_accepter github_user_invitation_accepter}."
      },
      "fqn": "@cdktf/provider-github.userInvitationAccepter.UserInvitationAccepter",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_invitation_accepter github_user_invitation_accepter} Resource."
        },
        "locationInModule": {
          "filename": "src/user-invitation-accepter/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-github.userInvitationAccepter.UserInvitationAccepterConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/user-invitation-accepter/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a UserInvitationAccepter resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the UserInvitationAccepter to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_invitation_accepter#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing UserInvitationAccepter that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the UserInvitationAccepter to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 104
          },
          "name": "resetAllowEmptyId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 120
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 136
          },
          "name": "resetInvitationId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 148
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "UserInvitationAccepter",
      "namespace": "userInvitationAccepter",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 108
          },
          "name": "allowEmptyIdInput",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 124
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 140
          },
          "name": "invitationIdInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 98
          },
          "name": "allowEmptyId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 114
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 130
          },
          "name": "invitationId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/user-invitation-accepter/index:UserInvitationAccepter"
    },
    "@cdktf/provider-github.userInvitationAccepter.UserInvitationAccepterConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.userInvitationAccepter.UserInvitationAccepterConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/user-invitation-accepter/index.ts",
        "line": 14
      },
      "name": "UserInvitationAccepterConfig",
      "namespace": "userInvitationAccepter",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This will result in the resource being skipped when the ID is not set instead of returning an error.\n\nDocs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_invitation_accepter#allow_empty_id UserInvitationAccepter#allow_empty_id}",
            "stability": "stable",
            "summary": "Allow the ID to be unset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 20
          },
          "name": "allowEmptyId",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "cdktf.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_invitation_accepter#id UserInvitationAccepter#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 27
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_invitation_accepter#invitation_id UserInvitationAccepter#invitation_id}",
            "stability": "stable",
            "summary": "ID of the invitation to accept. Must be set when 'allow_empty_id' is 'false'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-invitation-accepter/index.ts",
            "line": 33
          },
          "name": "invitationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/user-invitation-accepter/index:UserInvitationAccepterConfig"
    },
    "@cdktf/provider-github.userSshKey.UserSshKey": {
      "assembly": "@cdktf/provider-github",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_ssh_key github_user_ssh_key}."
      },
      "fqn": "@cdktf/provider-github.userSshKey.UserSshKey",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_ssh_key github_user_ssh_key} Resource."
        },
        "locationInModule": {
          "filename": "src/user-ssh-key/index.ts",
          "line": 71
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-github.userSshKey.UserSshKeyConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/user-ssh-key/index.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates CDKTF code for importing a UserSshKey resource upon running \"cdktf plan <stack-name>\"."
          },
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 56
          },
          "name": "generateConfigForImport",
          "parameters": [
            {
              "docs": {
                "summary": "The scope in which to define this construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct id used in the generated config for the UserSshKey to import."
              },
              "name": "importToId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Refer to the {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_ssh_key#import import section} in the documentation of this resource for the id to use",
                "summary": "The id of the existing UserSshKey that should be imported."
              },
              "name": "importFromId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "? Optional instance of the provider where the UserSshKey to import is found."
              },
              "name": "provider",
              "optional": true,
              "type": {
                "fqn": "cdktf.TerraformProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdktf.ImportableResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 109
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 152
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "UserSshKey",
      "namespace": "userSshKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 44
          },
          "name": "tfResourceType",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 97
          },
          "name": "etag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 144
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 113
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 126
          },
          "name": "keyInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 139
          },
          "name": "titleInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 103
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 119
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 132
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/user-ssh-key/index:UserSshKey"
    },
    "@cdktf/provider-github.userSshKey.UserSshKeyConfig": {
      "assembly": "@cdktf/provider-github",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-github.userSshKey.UserSshKeyConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/user-ssh-key/index.ts",
        "line": 14
      },
      "name": "UserSshKeyConfig",
      "namespace": "userSshKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_ssh_key#key UserSshKey#key}",
            "stability": "stable",
            "summary": "The public SSH key to add to your GitHub account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 27
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_ssh_key#title UserSshKey#title}",
            "stability": "stable",
            "summary": "A descriptive name for the new key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 33
          },
          "name": "title",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.\nIf you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.",
            "stability": "stable",
            "summary": "Docs at Terraform Registry: {@link https://registry.terraform.io/providers/integrations/github/5.40.0/docs/resources/user_ssh_key#id UserSshKey#id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/user-ssh-key/index.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/user-ssh-key/index:UserSshKeyConfig"
    }
  },
  "version": "12.0.0",
  "fingerprint": "McqZwefkhKBUrwLlfu6TYtw6nvXmnpVH6fczbiWnCNI="
}